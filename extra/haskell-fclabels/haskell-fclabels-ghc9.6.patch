From 80285e78f5305599dccad58baa7f74622f249753 Mon Sep 17 00:00:00 2001
From: Xavier Dectot <xavier@wheredoibegin.fr>
Date: Mon, 24 Mar 2025 19:44:37 +0100
Subject: [PATCH] support for ghc9.6 and 9.8. Fixes #46. Fixes #45

---
 fclabels.cabal           | 10 +++++-----
 src/Data/Label/Derive.hs |  8 ++++++++
 test/TestSuite.hs        | 19 ++++++++++++++++---
 3 files changed, 29 insertions(+), 8 deletions(-)

diff --git a/fclabels.cabal b/fclabels.cabal
index a983e03..9ea8a53 100644
--- a/fclabels.cabal
+++ b/fclabels.cabal
@@ -86,11 +86,11 @@ Library
 
   GHC-Options: -Wall
   Build-Depends:
-      base             >= 4.5   && < 4.16
-    , base-orphans     >= 0.8.2 && < 0.9
-    , template-haskell >= 2.2   && < 2.18
-    , mtl              >= 1.0   && < 2.3
-    , transformers     >= 0.2   && < 0.6
+      base             >= 4.5   && < 5
+    , base-orphans     >= 0.8.2 && < 0.10
+    , template-haskell >= 2.2   && < 2.24
+    , mtl              >= 1.0   && < 2.4
+    , transformers     >= 0.2   && < 0.7
 
   Default-Language: Haskell2010
 
diff --git a/src/Data/Label/Derive.hs b/src/Data/Label/Derive.hs
index 923171c..6491f11 100644
--- a/src/Data/Label/Derive.hs
+++ b/src/Data/Label/Derive.hs
@@ -416,7 +416,11 @@ generateLabel
   :: Bool
   -> Bool
   -> Name
+#if MIN_VERSION_template_haskell(2,21,0)
+  -> [TyVarBndr BndrVis]
+#else
   -> [TyVarBndr ()]
+#endif
   -> [Con]
   -> Field ([Context], Subst)
   -> Q Label
@@ -556,7 +560,11 @@ freshNames = map pure ['a'..'z'] ++ map (('a':) . show) [0 :: Integer ..]
 
 -------------------------------------------------------------------------------
 
+#if MIN_VERSION_template_haskell(2,21,0)
+computeTypes :: Bool -> Type -> Name -> [TyVarBndr BndrVis] -> Subst -> Q Typing
+#else
 computeTypes :: Bool -> Type -> Name -> [TyVarBndr ()] -> Subst -> Q Typing
+#endif
 computeTypes forcedMono fieldtype datatype dtVars_ subst =
 
   do let fieldVars = typeVariables fieldtype
diff --git a/test/TestSuite.hs b/test/TestSuite.hs
index 4fb84bf..55a6af6 100644
--- a/test/TestSuite.hs
+++ b/test/TestSuite.hs
@@ -8,6 +8,7 @@
   , TypeOperators
   , RankNTypes
   , FlexibleContexts
+  , FlexibleInstances
   , StandaloneDeriving
   , CPP #-}
 
@@ -21,10 +22,13 @@ module Main where
 import Control.Arrow
 import Control.Applicative
 import Control.Category
-#if MIN_VERSION_transformers(0,5,0) && MIN_VERSION_base(4,9,0)
+#if MIN_VERSION_transformers(0,5,0) && MIN_VERSION_base(4,9,0) && !MIN_VERSION_mtl(2,3,0)
 import Control.Monad (MonadPlus (..))
 import Control.Monad.Trans.Error (Error (noMsg))
 #endif
+#if MIN_VERSION_mtl(2,3,0)
+import Control.Monad(MonadPlus (..))
+#endif
 import Prelude hiding ((.), id)
 import Test.HUnit
 import Data.Label
@@ -153,7 +157,7 @@ _Gi = lGi; _Gj = lGj;
 -- this ifdef after GHC 8 rc3 is released, which will include
 -- transformers-0.5.2.0.
 
-#if MIN_VERSION_transformers(0,5,0) && !MIN_VERSION_transformers(0,5,2) && MIN_VERSION_base(4,9,0)
+#if MIN_VERSION_transformers(0,5,0) && !MIN_VERSION_transformers(0,5,2) && MIN_VERSION_base(4,9,0) && !MIN_VERSION_mtl(2,3,0)
 instance (Error e) => Alternative (Either e) where
     empty        = Left noMsg
     Left _ <|> n = n
@@ -164,7 +168,16 @@ instance Error e => MonadPlus (Either e) where
     Left _ `mplus` n = n
     m      `mplus` _ = m
 #endif
-
+#if MIN_VERSION_mtl(2,3,0)
+instance Alternative (Either String) where
+    empty        = Left empty
+    Left _ <|> n = n
+    m      <|> _ = m
+instance MonadPlus (Either String) where
+    mzero            = Left mzero
+    Left _ `mplus` n = n
+    m      `mplus` _ = m
+#endif
 -------------------------------------------------------------------------------
 
 embed_fB :: Record :~> Newtype Bool