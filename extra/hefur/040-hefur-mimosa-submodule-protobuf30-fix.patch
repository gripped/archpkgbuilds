--- a/mimosa/rpc/gen/protoc-gen-mimosa.cc
+++ b/mimosa/rpc/gen/protoc-gen-mimosa.cc
@@ -27,12 +27,12 @@ class ServiceGenerator : public gpc::CodeGenerator
 
   static uint32_t computeMethodId(const gp::MethodDescriptor * method)
   {
-    return computeId(method->name());
+    return computeId(std::string(method->name()));
   }
 
   static uint32_t computeServiceId(const gp::ServiceDescriptor * service)
   {
-    return computeId(service->full_name());
+    return computeId(std::string(service->full_name()));
   }
 
   static std::string cppFullName(const std::string & input)
@@ -56,8 +56,8 @@ class ServiceGenerator : public gpc::CodeGenerator
     method_id << computeMethodId(method) << "UL";
     (*dict)["MethodId"] = method_id.str();
     (*dict)["MethodName"] = method->name();
-    (*dict)["RequestType"] = cppFullName(method->input_type()->full_name());
-    (*dict)["ResponseType"] = cppFullName(method->output_type()->full_name());
+    (*dict)["RequestType"] = cppFullName(std::string(method->input_type()->full_name()));
+    (*dict)["ResponseType"] = cppFullName(std::string(method->output_type()->full_name()));
 
     int nb_spaces = 14 + method->name().length();
     (*dict)["ParamAlign"] = std::string(nb_spaces, ' ');
@@ -411,7 +411,7 @@ class ServiceGenerator : public gpc::CodeGenerator
     if (!cpp_gen.Generate(file, parameter, generator_context, error))
       return false;
 
-    std::string header_filename = file->name();
+    std::string header_filename = std::string(file->name());
     header_filename.replace(header_filename.end() - 5, header_filename.end(), "pb.h");
 
     if (file->service_count() > 0)
--- a/mimosa/rpc/json.cc
+++ b/mimosa/rpc/json.cc
@@ -34,7 +34,7 @@ namespace mimosa
         if (!field->is_repeated() && !ref->HasField(msg, field))
           continue;
 
-        enc.pushString(field->name());
+        enc.pushString(std::string(field->name()));
         switch (field->cpp_type()) {
           ENC_FIELD(DOUBLE, Double, Float);
           ENC_FIELD(FLOAT, Float, Float);
@@ -64,7 +64,7 @@ namespace mimosa
             enc.startArray();
             for (int i = 0; i < ref->FieldSize(msg, field); ++i) {
               auto eval = ref->GetRepeatedEnum(msg, field, i);
-              enc.pushString(eval->name());
+              enc.pushString(std::string(eval->name()));
             }
             enc.endArray();
           } else {
@@ -72,7 +72,7 @@ namespace mimosa
                 !ref->HasField(msg, field))
               throw MissingRequiredField();
             auto eval = ref->GetEnum(msg, field);
-            enc.pushString(eval->name());
+            enc.pushString(std::string(eval->name()));
           }
           break;
         }
