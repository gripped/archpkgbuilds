# Maintainer: Jakub Klinkovsk√Ω <lahwaacz at archlinux dot org>
# Contributor: Felix Yan <felixonmars@archlinux.org>
# Contributor: Konstantin Gizdov <arch at kge dot pw>

_name=awkward
pkgbase=python-$_name
# pkgname=($pkgbase $pkgbase-docs) - docs require many new dependencies
pkgname=$pkgbase
pkgver=2.8.1
pkgrel=1
pkgdesc="Manipulate jagged, chunky, and/or bitmasked arrays as easily as Numpy"
url="https://github.com/scikit-hep/awkward"
license=(BSD-3-Clause)
arch=(x86_64)
depends=(
  gcc-libs
  glibc
  python
  python-fsspec
  python-numpy
  python-packaging
  python-typing_extensions
)
makedepends=(
  cmake
  cuda
  doxygen
  git
  python-build
  python-hatch-fancy-pypi-readme
  python-hatchling
  python-installer
  python-nox
  python-scikit-build-core
  python-sphinx
  python-sphinx_rtd_theme
)
checkdepends=(
  pybind11
  python-hist
  python-numba
  python-numexpr
  python-pandas
  python-pyaml
  python-pyarrow
  python-pytest
  python-scikit-hep-testdata
  python-vector
  root
)
optdepends=(
  'cuda: CUDA support'
  'python-numba: for using in Numba JIT functions'
  'python-numexpr: numexpr connector'
  'python-pandas: pandas connector'
  'python-pyarrow: pyArrow connector'
  'root: rdataframe connector'
)
source=(
  $pkgname::git+https://github.com/scikit-hep/$_name#tag=v$pkgver
  $pkgname-rapidjson::git+https://github.com/Tencent/rapidjson.git
)

sha512sums=('5d71536c3f5aca4cfd243dedbcaf11783553e23d02cf2dba274f309c1d0298a51fb68b738670e0a272d049ca0e14fd05a3dff8d8bc747599052331d57ff159de'
            'SKIP')

prepare() {
  cd $pkgbase
  git submodule init

  git config submodule."rapidjson".url "$srcdir"/$pkgname-rapidjson

  git -c protocol.file.allow=always submodule update --init --recursive
}

build() {
  cd $pkgbase

  nox -s prepare
  python -m build --wheel --no-isolation

  cd awkward-cpp
  python -m build --wheel --no-isolation
}

check() {
  local pytest_options=(
      -vv
      #  AttributeError: 'FrameLocalsProxy' object has no attribute 'clear'
      --deselect tests/test_0119_numexpr_and_broadcast_arrays.py::test_numexpr
      # pyarrow.lib.ArrowInvalid: Column 'x' is declared non-nullable but contains nulls
      --deselect tests/test_1125_to_arrow_from_arrow.py::test_recordarray
      # pyarrow.lib.ArrowInvalid: Column '0' is declared non-nullable but contains nulls
      --deselect tests/test_1294_to_and_from_parquet.py::test_recordarray
      # RuntimeError: file metadata is only available after writer close
      --deselect tests/test_1440_start_v2_to_parquet.py::test_recordarray[True-True]
  )

  cd $pkgbase
  python -m venv --system-site-packages test-env
  test-env/bin/python -m installer dist/*.whl
  test-env/bin/python -m installer awkward-cpp/dist/*.whl
  test-env/bin/python -m pytest "${pytest_options[@]}" tests
}

package_python-awkward() {
  optdepends+=("$pkgbase-docs: documentation")

  cd $pkgbase
  python -m installer --destdir="$pkgdir" dist/*.whl
  install -vDm 644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  cd awkward-cpp
  python -m installer --destdir="$pkgdir" dist/*.whl
}

package_python-awkward-docs() {
  pkgdesc+=" - documentation"

  cd $pkgbase

  install -vDm 644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  install -vDm 644 README.md -t "$pkgdir"/usr/share/$pkgbase/README.md

  python -m installer --destdir=tmp-install dist/*.whl
  python -m installer --destdir=tmp-install awkward-cpp/dist/*.whl
  install -d "$pkgdir"/usr/share/doc/$pkgbase
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  PYTHONPATH="$PWD/tmp-install/$site_packages" sphinx-build "$PWD"/docs "$pkgdir"/usr/share/doc/$pkgbase
}
