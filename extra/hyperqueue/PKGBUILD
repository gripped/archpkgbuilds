# Maintainer: Jakub Klinkovsk√Ω <lahwaacz at archlinux dot org>

pkgbase=hyperqueue
pkgname=(hyperqueue python-hyperqueue)
pkgver=0.23.0
pkgrel=1
pkgdesc="Scheduler for sub-node tasks for HPC systems with batch scheduling"
arch=(x86_64)
url="https://github.com/It4innovations/hyperqueue/"
license=(MIT)
makedepends=(
  cargo
  maturin
  python-installer
  python-cloudpickle
  python-tqdm
  python-pydot
)
checkdepends=(
  # https://github.com/It4innovations/hyperqueue/blob/main/tests/requirements.txt
  python-pytest
  python-pytest-xdist
  python-iso8601
  python-schema
  python-maturin
  python-psutil
  python-requests
  python-aiohttp
  python-inline-snapshot
  python-ruff
)
source=($pkgbase-$pkgver.tar.gz::$url/archive/refs/tags/v$pkgver.tar.gz)
b2sums=('ea3320fe46cc93712d897480fe2b28f69ac27c4109f97a73628b23aac8fc30d5cea842d8b0d0c41e8085fc0a1a3fc9d858964390c55e4298511d1ccd4cea462b')

prepare() {
  cd $pkgbase-$pkgver
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"

  # run Python tests with the release binary
  sed -i 's|"target", directory, "hq"|"target", "release", "hq"|' tests/conftest.py

  # avoid test failure due to slow domain resolution of non-existing hostname
  # see https://github.com/It4innovations/hyperqueue/issues/963
  sed -i 's|"nonexistingx:1"|"localhost:1"|' crates/tako/src/internal/datasrv/tests.rs
}

build() {
  # fix building with LTO
  CFLAGS+=' -ffat-lto-objects'

  # prevent HyperQueue from adding '-dev' suffix to the version string
  export HQ_BUILD_VERSION=$pkgver

  cd $pkgbase-$pkgver
  cargo build --frozen --release --all-features

  # build Python bindings
  cd crates/pyhq
  maturin build --locked --release --target "$(rustc -vV | sed -n 's/host: //p')" --strip
}

check() {
  cd $pkgbase-$pkgver
  cargo test --frozen --release --all-features

  # test Python bindings
  local pytest_options=(
    -vv
    -W ignore::DeprecationWarning
    -n16
  )
  python -m venv --system-site-packages test-env
  test-env/bin/python -m installer target/wheels/*.whl
  # the tests use Python subprocess module to start hq which needs the same env in order for
  # submitted tasks to work, so we must actually activate the venv
  (
    source test-env/bin/activate
    python -m pytest "${pytest_options[@]}" tests
  )
}

package_hyperqueue() {
  depends=(
    gcc-libs
    glibc
  )

  cd $pkgbase-$pkgver
  local _target="target/release/hq"

  # install the binary and license
  install -vDm 755 "$_target" -t "$pkgdir"/usr/bin/
  install -vDm 644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/

  # generate shell completions
  $_target generate-completion bash   | install -vDm 644 /dev/stdin "$pkgdir"/usr/share/bash-completion/completions/hq.bash
  $_target generate-completion elvish | install -vDm 644 /dev/stdin "$pkgdir"/usr/share/elvish/lib/hq.elv
  $_target generate-completion fish   | install -vDm 644 /dev/stdin "$pkgdir"/usr/share/fish/vendor_completions.d/hq.fish
  $_target generate-completion zsh    | install -vDm 644 /dev/stdin "$pkgdir"/usr/share/zsh/site-functions/_hq
}

package_python-hyperqueue() {
  pkgdesc+=" - Python bindings"
  depends=(
    gcc-libs
    glibc
    hyperqueue
    # https://github.com/It4innovations/hyperqueue/blob/main/crates/pyhq/pyproject.toml
    python
    python-cloudpickle
    python-tqdm
  )
  optdepends=(
    'python-pydot: task graph visualization'
  )

  cd $pkgbase-$pkgver
  python -m installer --destdir "$pkgdir" target/wheels/*.whl
  install -vDm 644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
}
