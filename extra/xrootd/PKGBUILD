# Maintainer: Konstantin Gizdov < arch at kge dot pw >
# Maintainer: Jakub Klinkovský <lahwaacz at archlinux dot org>
# Contributor: Jan Kašpar < jan.kaspar at gmail dot com >
# Contributor: Alex Pearce < alex at alexpearce dot me >

pkgname=xrootd
pkgver=5.9.0
pkgrel=1
pkgdesc="Software framework for fast, low latency, scalable and fault tolerant data access."
arch=(x86_64)
url="https://xrootd.slac.stanford.edu/"
license=(LGPL-3.0-or-later)
depends=(
  bash
  curl
  davix
  e2fsprogs libcom_err.so
  fuse2
  gcc-libs
  glibc
  krb5 libkrb5.so
  libxcrypt libcrypt.so
  libxml2 libxml2.so
  openssl libssl.so libcrypto.so
  perl
  python
  readline libreadline.so
  systemd-libs libsystemd.so
  tinyxml
  util-linux-libs libuuid.so
  zlib libz.so
)
makedepends=(
  cmake
  git
  gtest
  ninja
  python-build
  python-installer
  python-setuptools
  yasm
)
checkdepends=(
  procps-ng  # some tests use ps
)
source=("$pkgname::git+https://github.com/$pkgname/$pkgname.git#tag=v$pkgver")
b2sums=('a4be53ed72bb2933b9eadbdf6defe744ee4038ef2bd4b9c859b7778b60176317bc4d1815eb574d32e32972e781a0aa6e2ee95b883ab1621e41587c19db7203d1')

build() {
  local cmake_options=(
    -B build
    -S $pkgname
    -G Ninja
    -W no-dev
    -D CMAKE_BUILD_TYPE=None
    -D CMAKE_INSTALL_PREFIX=/usr
    -D CMAKE_INSTALL_LIBDIR=lib
    # fail CMake configuration if enabled components cannot be built
    -D FORCE_ENABLED=ON
    -D ENABLE_TESTS=ON
    # disable plugins that have unpackaged dependencies
    -D ENABLE_MACAROONS=OFF
    -D ENABLE_SCITOKENS=OFF
    -D ENABLE_VOMS=OFF
    -D ENABLE_XRDEC=OFF
    # Python wheel is installed separately from CMake
    -D INSTALL_PYTHON_BINDINGS=OFF
  )
  cmake "${cmake_options[@]}"
  cmake --build build

  # build the Python wheel separately from CMake to avoid pip warnings
  python -m build --wheel --no-isolation build/bindings/python
}

check() {
  local excluded_tests=""
  local ctest_flags=(
    --test-dir build
    # show the stdout and stderr when the test fails
    --output-on-failure
    # execute tests in parallel
    --parallel $(nproc)
    # exclude problematic tests
    --exclude-regex "$excluded_tests"
  )
  ctest "${ctest_flags[@]}"
}

package() {
  DESTDIR="$pkgdir" cmake --install build
  python -m installer --destdir="$pkgdir" build/bindings/python/dist/*.whl
  install -vDm 644 $pkgname/LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
}

# vim: ts=2 sw=2 et:
