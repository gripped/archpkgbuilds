# Maintainer: Christian Rebischke <chris.rebischke@archlinux.org>
# Contributor: ml <>
pkgname=cmctl
pkgver=1.17.1
pkgrel=1
pkgdesc='Automatically provision and manage TLS certificates in Kubernetes'
arch=('x86_64' 'aarch64')
url='https://github.com/jetstack/cert-manager'
license=('Apache')
depends=('kubectl')
makedepends=('git' 'go')
groups=('kubectl-plugins')
source=("$url/archive/v$pkgver/$pkgname-$pkgver.tar.gz")
sha512sums=('975a7831fe82e3cb02a454f96a757556a06603d8f8be7cfc5d8b93daeb60ccd1c7a2a53b040f20faa1c6df3b438d98a97890940abc7630db225690964b72d432')
b2sums=('f303fa23f1abef8f384b0faab9708c89b4e0ef471fb6dafb68fbbf02d81029c662b5250e3e7d9c352e7558990d3192207085945ae983f1956326f66c7b04121b')

build() {
  local _x _commit
  _commit=$(bsdcat "$pkgname-$pkgver.tar.gz" | git get-tar-commit-id)
  _x=(
    AppVersion="v$pkgver"
    AppGitCommit="${_commit:?}"
    AppGitState="clean"
  )

  cd cert-manager-"$pkgver"
  export CGO_ENABLED=1
  export CGO_LDFLAGS="$LDFLAGS"
  export CGO_CFLAGS="$CFLAGS"
  export CGO_CPPFLAGS="$CPPFLAGS"
  export CGO_CXXFLAGS="$CXXFLAGS"
  export GOFLAGS='-buildmode=pie -trimpath -modcacherw -mod=readonly'
  cd ./cmd/controller
  go build -ldflags="-linkmode=external ${_x[*]/#/-X=github.com/jetstack/cert-manager/pkg/util.} 
  -X github.com/jetstack/cert-manager/cmd/controller/pkg/build.name=cmctl 
  -X github.com/jetstack/cert-manager/cmd/controller/pkg/build/commands.registerCompletion=true" .
}

check() {
  cd cert-manager-"$pkgver"/cmd/controller
  # we don't want e2e and other tests that explicitly want bazel
  # Disable tests, because of broken go mod
  # go test -short ...
}

package() {
  cd cert-manager-"$pkgver"/cmd/controller
  ls
  install -Dm755 controller-binary "$pkgdir"/usr/bin/cmctl

  # build bash completions
  #mkdir -p "${pkgdir}/usr/share/bash-completion/completions"
  #"$pkgdir"/usr/bin/cmctl completion bash > "${pkgdir}/usr/share/bash-completion/completions/cmctl"

  ## build zsh completions
  #mkdir -p "${pkgdir}/usr/share/zsh/site-functions"
  #"$pkgdir"/usr/bin/cmctl completion zsh > "${pkgdir}/usr/share/zsh/site-functions/_cmctl"

  ## build fish completions
  #mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
  #"$pkgdir"/usr/bin/cmctl completion fish > "${pkgdir}/usr/share/fish/vendor_completions.d/cmctl.fish"
}
