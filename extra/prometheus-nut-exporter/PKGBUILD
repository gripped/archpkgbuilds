# Maintainer: George Rawlinson <george@rawlinson.net.nz>
# Maintainer: Jakub Klinkovsk√Ω <lahwaacz at archlinux dot org>

pkgname=prometheus-nut-exporter
_pkgname=nut_exporter
pkgver=3.2.1
pkgrel=1
pkgdesc='Prometheus exporter for Network UPS Tools metrics'
arch=(x86_64)
url='https://github.com/DRuggeri/nut_exporter'
license=(Apache-2.0)
depends=(glibc)
makedepends=(go git)
optdepends=('nut: for monitoring a local NUT server')
backup=("etc/conf.d/$pkgname")
# we cannot use LTO as otherwise we do not get reproducible package with full RELRO
options=('!lto')
source=(
  "$pkgname::git+$url.git#tag=v$pkgver"
  $pkgname.conf
  $pkgname.service
  $pkgname.sysusers
)
b2sums=('068c5749ef70d861a7f6e74df24cd4919db814328764f35f41d6779f248d8531276713514614aac1b0dcb1bf6f7c5f6ca7e575b831c30491cac6802a6508a01f'
        '6e13a8ac69c75c63d52013ee011f517060785c20d66c5051a71ac43d6518e80bf6057ebde133bb7eab2976f2c2698c1146b86446b9fe0bbe4ecd9ae7753d2bb9'
        '8bfbde39334ce3f46e2bac43d9a68c18b17cf31026c163ede7cd4b5664b77531a4b4171839e757130fa2bf3fdf11a30affe1ee0e31e0143fa92974da2463311e'
        '2d142d41e133efa47ff4f9bc08c1263752500bcbe766fbab9a425486d04eedd483c6e9bd2472e0993785348688e664e5e2bf1d9264585aea6cf04b4e633132a8')

prepare() {
  cd "$pkgname"

  # create folder for build output
  mkdir build

  # download dependencies
  go mod download
}

build() {
  cd "$pkgname"

  # set GOPATH so makepkg puts source files into the debug package
  export GOPATH="$srcdir"

  # get commit id for build
  local _commit=$(git rev-parse v$pkgver)

  go build -v \
    -buildmode=pie \
    -mod=readonly \
    -modcacherw \
    -ldflags "-compressdwarf=false -linkmode external -extldflags \"$LDFLAGS\" \
    -X main.Version=$pkgver \
    -X main.Commit=$_commit" \
    -o build .
}

check() {
  cd "$pkgname"
  go test -v ./...
}

package() {
  # systemd integration
  install -vDm 644 $pkgname.conf "$pkgdir"/etc/conf.d/$pkgname
  install -vDm 644 $pkgname.service "$pkgdir"/usr/lib/systemd/system/$pkgname.service
  install -vDm 644 $pkgname.sysusers "$pkgdir"/usr/lib/sysusers.d/$pkgname.conf

  # binary
  install -vDm 755 "$pkgname/build/$_pkgname" "$pkgdir"/usr/bin/$pkgname
}
