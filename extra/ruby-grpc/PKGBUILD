# Maintainer: Andreas 'Segaja' Schleifer <segaja at archlinux dot org>

_gemname='grpc'
pkgname="ruby-${_gemname}"
pkgver=1.71.0
pkgrel=1
pkgdesc='Send RPCs from Ruby using GRPC'
arch=('any')
url="https://github.com/grpc/${_gemname}"
license=('MIT')
depends=(
  ruby
)
makedepends=(
  git
  ruby-rdoc
)
# checkdepends=(
#   ruby-bundler
#   ruby-rake
#   ruby-rake-compiler
#   ruby-rspec
#   ruby-simplecov
# )
options=('!emptydirs')
source=(
  "${pkgname}::git+${url}.git#tag=v${pkgver}"
  "${pkgname}-abseil-cpp::git+https://github.com/abseil/abseil-cpp.git"
  "${pkgname}-benchmark::git+https://github.com/google/benchmark"
  "${pkgname}-bloaty::git+https://github.com/google/bloaty.git"
  "${pkgname}-boringssl::git+https://github.com/google/boringssl.git"
  "${pkgname}-c-ares::git+https://github.com/c-ares/c-ares.git"
  "${pkgname}-data-plane-api::git+https://github.com/envoyproxy/data-plane-api.git"
  "${pkgname}-googleapis::git+https://github.com/googleapis/googleapis.git"
  "${pkgname}-googletest::git+https://github.com/google/googletest.git"
  "${pkgname}-opencensus-proto::git+https://github.com/census-instrumentation/opencensus-proto.git"
  "${pkgname}-opentelemetry-cpp::git+https://github.com/open-telemetry/opentelemetry-cpp"
  "${pkgname}-opentelemetry-proto::git+https://github.com/open-telemetry/opentelemetry-proto.git"
  "${pkgname}-protobuf::git+https://github.com/protocolbuffers/protobuf.git"
  "${pkgname}-protoc-gen-validate::git+https://github.com/envoyproxy/protoc-gen-validate.git"
  "${pkgname}-re2::git+https://github.com/google/re2.git"
  "${pkgname}-xds::git+https://github.com/cncf/xds.git"
  "${pkgname}-zlib::git+https://github.com/madler/zlib"
)
sha512sums=('9acd552d2e9e104ebc8dd2ec7475f74195c0cbe970f0f7bc4ab65933939e677729d37fe8b7cf75d15521cab3d7ac927e61dc97f0103f2522645e19b12a06e24a'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')
b2sums=('155d68ca6520091a3f969975742f7a0c9dac6b6f50f2720e11856ff269337c4f2409ab07dd7de57e2f811b1d94c10a93befe1fae3a14b598cbf1d37573894c8d'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP')

prepare() {
  cd "${pkgname}"

  # update gemspec/Gemfile to allow newer version of the dependencies
  sed --in-place --regexp-extended 's|~>|>=|g' "${_gemname}.gemspec"

  sed --in-place --regexp-extended \
    --expression 's/, :rubocop//' \
    --expression '/RuboCop::RakeTask.new/,/^end$/d' \
    --expression '/rubocop/d' \
    "${_gemname}.gemspec" \
    Rakefile

  # generated using parse-submodules
  git submodule init

  git config submodule."third_party/abseil-cpp".url "${srcdir}/${pkgname}"-abseil-cpp
  git config submodule."third_party/benchmark".url "${srcdir}/${pkgname}"-benchmark
  git config submodule."third_party/bloaty".url "${srcdir}/${pkgname}"-bloaty
  git config submodule."third_party/boringssl-with-bazel".url "${srcdir}/${pkgname}"-boringssl
  git config submodule."third_party/cares/cares".url "${srcdir}/${pkgname}"-c-ares
  git config submodule."third_party/envoy-api".url "${srcdir}/${pkgname}"-data-plane-api
  git config submodule."third_party/googleapis".url "${srcdir}/${pkgname}"-googleapis
  git config submodule."third_party/googletest".url "${srcdir}/${pkgname}"-googletest
  git config submodule."third_party/opencensus-proto".url "${srcdir}/${pkgname}"-opencensus-proto
  git config submodule."third_party/opentelemetry".url "${srcdir}/${pkgname}"-opentelemetry-proto
  git config submodule."third_party/opentelemetry-cpp".url "${srcdir}/${pkgname}"-opentelemetry-cpp
  git config submodule."third_party/protobuf".url "${srcdir}/${pkgname}"-protobuf
  git config submodule."third_party/protoc-gen-validate".url "${srcdir}/${pkgname}"-protoc-gen-validate
  git config submodule."third_party/re2".url "${srcdir}/${pkgname}"-re2
  git config submodule."third_party/xds".url "${srcdir}/${pkgname}"-xds
  git config submodule."third_party/zlib".url "${srcdir}/${pkgname}"-zlib

  git -c protocol.file.allow=always submodule update --init --recursive
}

build() {
  cd "${pkgname}"

  local _gemdir="$(gem env gemdir)"

  gem build --verbose "${_gemname}.gemspec"

  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "tmp_install${_gemdir}" \
    --bindir "tmp_install/usr/bin" \
    "${_gemname}-${pkgver}.gem"

  # remove unreproducible files
  rm --force --recursive --verbose \
    "tmp_install${_gemdir}/cache/" \
    "tmp_install${_gemdir}/gems/${_gemname}-${pkgver}/vendor/" \
    "tmp_install${_gemdir}/doc/${_gemname}-${pkgver}/ri/ext/"

  find "tmp_install${_gemdir}/gems/" \
    -type f \
    \( \
      -iname "*.o" -o \
      -iname "*.c" -o \
      -iname "*.so" -o \
      -iname "*.time" -o \
      -iname "gem.build_complete" -o \
      -iname "Makefile" \
    \) \
    -delete

  find "tmp_install${_gemdir}/extensions/" \
    -type f \
    \( \
      -iname "mkmf.log" -o \
      -iname "gem_make.out" \
    \) \
    -delete
}

# check() {
#   cd "${pkgname}"
#
#   local _gemdir="$(gem env gemdir)"
#
#   GEM_HOME="tmp_install${_gemdir}" rake suite:idiomatic suite:bidi suite:pb suite:server
#   exit 1
# }

package() {
  cd "${pkgname}"

  cp --archive --verbose tmp_install/* "${pkgdir}"

  install --verbose -D --mode=0644 LICENSE* --target-directory "${pkgdir}/usr/share/licenses/${pkgname}"
  install --verbose -D --mode=0644 *.md --target-directory "${pkgdir}/usr/share/doc/${pkgname}"
}

# vim: tabstop=2 shiftwidth=2 expandtab:
