# Maintainer: Bert Peters <bertptrs@archlinux.org>
# Contributor: Alexandre Bury <alexandre.bury@gmail.com>

pkgbase=python-polars
# TODO: make this easier for other architectures
pkgname=($pkgbase $pkgbase-runtime-64)
pkgver=1.35.1
pkgrel=1
pkgdesc="Blazingly fast DataFrames library using Apache Arrow Columnar Format as memory model"
arch=("x86_64")
url="https://www.pola.rs/"
license=('MIT')
options=('!lto')
makedepends=(
    # For building the native extensions
    'maturin'
    'rustup'
    'python-installer'
    # For building the python package
    'python-build'
    'python-wheel'
    'python-setuptools'
)
checkdepends=('python-pytest'
              'python-pytest-xdist'
              'python-matplotlib'
              'python-hypothesis'
              'python-pandas'
              'python-pyarrow'
              'python-pydantic'
              'python-fsspec'
              'python-sqlalchemy'
              'python-zstandard'
              'python-cloudpickle'
              'python-aiosqlite'
              'python-boto3'
              'python-orjson')
_name=${pkgname#python-}
_tag="py-$pkgver"
source=("https://github.com/pola-rs/polars/archive/refs/tags/$_tag.tar.gz")
b2sums=('6424a047ea2a6303d7717c8ac0bf762ebf0c41ef737dbe850e39f8125d4ee5ba1bed6bee2cb59cdab09d70919e1e235de9eac34d3aede4fadd937bdf9225f57b')

prepare() {
    cd polars-$_tag/py-polars
    cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
    cd polars-$_tag/py-polars
    python -m build --wheel --no-isolation
    maturin build -o dist --release --locked --strip --compatibility linux --manifest-path runtime/Cargo.toml
}

check() {
    cd polars-$_tag/py-polars

    # Package needs to be installed to run the tests, use a venv
    python -m venv --system-site-packages test-env
    find dist -name '*.whl' -print0 | xargs -n1 --null test-env/bin/python -m installer

    local _pytest_args=(
        -W ignore::pydantic.warnings.PydanticDeprecatedSince211
        --ignore tests/unit/io/test_delta.py
        --ignore tests/unit/operations/namespaces/test_plot.py
        --ignore tests/unit/io/cloud/test_aws.py
        --ignore tests/unit/functions/range/test_datetime_range.py
        --ignore tests/unit/io/test_spreadsheet.py
        --ignore tests/unit/io/test_iceberg.py
        --deselect "tests/unit/streaming/test_streaming_categoricals.py::test_streaming_cat_14933"
        --deselect "tests/unit/dataframe/test_df.py::test_extension"
        --deselect "tests/unit/streaming/test_streaming_group_by.py::test_streaming_group_by_literal[1]"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_mocked"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_parameterised_uri"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_parameterised_multiple_adbc"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_uri_parameterised"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_uri_parameterised_multiple"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_parameterised_adbc"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_cx_credentials[fakedb://123:456@account/database/schema?warehouse=warehouse&role=role]"
        --deselect "tests/unit/io/database/test_read.py::test_read_database_cx_credentials[fakedb://my#%us3r:p433w0rd@not_a_real_host:9999/database]"
        --deselect "tests/unit/io/database/test_write.py::test_write_database_adbc_temporary_table"
        --deselect tests/unit/io/test_hive.py::test_hive_decode_reserved_ascii_23241
        --deselect tests/unit/io/test_hive.py::test_hive_decode_utf8_23241
    )

    # Ignore several test files as they either use unpackaged dependencies, or
    # contain direct errors
    test-env/bin/python -P -m pytest tests/unit "${_pytest_args[@]}"
}

package_python-polars() {
    # note: changing the arch for the main package causes pkgctl to not detect the release correctly.
    # arch=('any')
    depends=('python' 'python-numpy' 'python-polars-runtime-64')
    optdepends=('python-pandas: for interoperability with pandas frames'
                'python-pyarrow: for interoperability with arrow types'
                'python-pytz: to enable conversion to python datetimes with timezones'
                'python-fsspec: to transparently open files locally or remotely')

    cd polars-$_tag/py-polars
    python -m installer -d "$pkgdir" ./dist/polars-*.whl
    install -Dm0644 -t "$pkgdir/usr/share/licenses/$pkgname/" LICENSE
}

package_python-polars-runtime-64() {
    arch=("x86_64")
    depends=('python')
    pkgdesc="$pkgdesc, native runtime libraries"

    cd polars-$_tag/py-polars
    python -m installer -d "$pkgdir" ./dist/polars_runtime*.whl
    install -Dm0644 -t "$pkgdir/usr/share/licenses/$pkgname/" LICENSE
}
