# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: carstene1ns <arch carsten-teibes de> - http://git.io/ctPKG
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Vlad Kolotvin <vlad.kolotvin@gmail.com>

pkgname=emscripten
# NOTE: You need to run ./get-compatible-versions.sh after changing the pkgver!
_binaryen_revision=cf756c92997182276122c2f0a9ac567d2d39ef42
_llvm_project_revision=20d4e5cb8c51dc191e06554dd0d0def84a9edd0a
# Sadly, upstream currently suggests bundling a binaryen version for the time being:
# https://github.com/emscripten-core/emscripten/issues/12252
# I'm obviously unhappy about that but it appears to be the only practical solution for the time being.
pkgver=4.0.17
pkgrel=1
pkgdesc="Compile C and C++ into highly-optimizable JavaScript for the web"
arch=('x86_64')
url="https://emscripten.org"
license=('custom')
depends=('nodejs' 'python' 'which' 'acorn')
makedepends=('cmake' 'libxml2' 'git' 'ninja' 'npm')
optdepends=('java-environment: for using clojure'
            'ruby: for using websockify addon'
            'cmake: for emcc --show-ports')
install=emscripten.install
options=('!lto' '!debug')
conflicts=('binaryen')
provides=('binaryen')
source=("git+https://github.com/kripken/emscripten#tag=$pkgver"
        git+https://github.com/llvm/llvm-project.git#commit=$_llvm_project_revision
        git+https://github.com/WebAssembly/binaryen.git#commit=$_binaryen_revision
        "emscripten.sh"
        emscripten-config)
sha512sums=('c220cc49937e298ac5725cf862eb47a11345e25766e1c72b2e352e1e3bfe5f90ebaf230d0a69d098725b02e527029f5f6f44c2d2a68b56aeedf923e9fd0cea45'
            '22769a56a780fd70a11c5c04c36e9121542dbd5e000b508a3d4c24536713592992dc6735fa22f60981df347e4ced32239ebaafce35c160f8465975e3f7d3c042'
            'db16877023db3c62449681e27b80769c1179d0c450acf204ee2585224b74f45c89ec8b4f6ebd4ce987679c7e6c523cf991d4ad9b99be9e1784af37f010800048'
            'fbe9b95b8d18e7d0c6ec5fded6f11b72fbe4ddd0391e5704b281ba79c479f3563e82423b790ddf3f0554a23d659193ca898a81fe3db509f16c30c7188b790e4d'
            '8d22f727e64cace0eb33f049a2902b928c29a6448b05098030858590660f31e1dc142dae55a54bbcb4da09650173f571a64789e0a955aefb449ce0081fb438f9')

build() {
  cd binaryen

  export CXXFLAGS+=" -Wno-error=maybe-uninitialized"
  cmake \
      -Bbuild \
      -GNinja \
      -DBUILD_TESTS=OFF \
      -DCMAKE_INSTALL_PREFIX=/usr
  ninja -C build

  # Inspired from https://github.com/WebAssembly/waterfall/blob/db2ea5eeb11b74cce9b9459be0cc88807744b1b5/src/build.py#L868
  cd "$srcdir"/llvm-project/llvm
  cmake \
    -Bbuild \
    -GNinja \
    -DLLVM_ENABLE_LIBXML2=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DCOMPILER_RT_BUILD_XRAY=OFF \
    -DCOMPILER_RT_INCLUDE_TESTS=OFF \
    -DCOMPILER_RT_ENABLE_IOS=OFF \
    -DCMAKE_INSTALL_PREFIX=/opt/emscripten-llvm \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON \
    -DLLVM_BUILD_RUNTIME=OFF \
    -DLLVM_TOOL_LTO_BUILD=ON \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=ON \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_TARGETS_TO_BUILD="host;WebAssembly" \
    -DLLVM_ENABLE_PROJECTS="lld;clang" \
    -DCLANG_INCLUDE_TESTS=OFF
  ninja -C build
}

package() {
  DESTDIR="$pkgdir" ninja -C binaryen/build install

  # Install LLVM stuff according to
  # https://github.com/emscripten-core/emscripten/blob/master/docs/packaging.md
  # and
  # https://github.com/WebAssembly/waterfall/blob/d4a504ffee488a68d09b336897c00d404544601d/src/build.py#L915
  DESTDIR="$pkgdir" ninja -C llvm-project/llvm/build install
  cd "$pkgdir"/opt/emscripten-llvm/bin

  # Clean up some unnecessary bins and libs
  rm clang-check clang-cl clang-cpp clang-extdef-mapping clang-format \
      clang-offload-bundler clang-refactor \
      lld-link ld.lld llvm-lib
  cd ../lib
  rm libclang.so
  cd ..
  rm -r share

  # Copy some stuff that we need but that wasn't installed by default
  for bin in llvm-as llvm-dis FileCheck llc llvm-link llvm-mc llvm-readobj opt llvm-dwarfdump; do
      install -Dm755 "$srcdir"/llvm-project/llvm/build/bin/$bin "$pkgdir"/opt/emscripten-llvm/bin/$bin
  done

  # Install emscripten
  cd "$srcdir"/emscripten
  # After this change: https://github.com/emscripten-core/emscripten/pull/23761
  # Entrypoints are removed from the repository and supposed to be created by
  # the following script
  python tools/maint/create_entry_points.py
  DESTDIR="$pkgdir"/usr/lib/emscripten make install

  # Fix permissions messed up by npm
  find "${pkgdir}"/usr/lib/emscripten -type d -exec chmod 755 {} +
  chown -R root:root "${pkgdir}"/usr/lib/emscripten/

  install -Dm644 "$srcdir"/emscripten-config "$pkgdir"/usr/lib/emscripten/.emscripten

  install -d "$pkgdir"/usr/share/doc
  ln -s /usr/lib/emscripten/site/source/docs "$pkgdir"/usr/share/doc/$pkgname
  install -Dm644 "$srcdir"/emscripten.sh "$pkgdir"/etc/profile.d/emscripten.sh
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}
