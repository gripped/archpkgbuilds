diff --git a/src/dbackingstoreproxy.cpp b/src/dbackingstoreproxy.cpp
index c2b5645..03959f2 100644
--- a/src/dbackingstoreproxy.cpp
+++ b/src/dbackingstoreproxy.cpp
@@ -136,11 +136,16 @@ void DBackingStoreProxy::composeAndFlush(QWindow *window, const QRegion &region,
 {
     m_proxy->composeAndFlush(window, region, offset, textures, translucentBackground);
 }
-#else
+#elif QT_VERSION <= QT_VERSION_CHECK(6, 9, 1)
 QPlatformBackingStore::FlushResult DBackingStoreProxy::rhiFlush(QWindow *window, qreal sourceDevicePixelRatio, const QRegion &region, const QPoint &offset, QPlatformTextureList *textures, bool translucentBackground)
 {
     return m_proxy->rhiFlush(window, sourceDevicePixelRatio, region, offset, textures, translucentBackground);
 }
+#else
+QPlatformBackingStore::FlushResult DBackingStoreProxy::rhiFlush(QWindow *window, qreal sourceDevicePixelRatio, const QRegion &region, const QPoint &offset, QPlatformTextureList *textures, bool translucentBackground, qreal sourceTransformFactor)
+{
+    return m_proxy->rhiFlush(window, sourceDevicePixelRatio, region, offset, textures, translucentBackground, sourceTransformFactor);
+}
 #endif
 
 #if QT_VERSION <= QT_VERSION_CHECK(6, 2, 4)
diff --git a/src/dbackingstoreproxy.h b/src/dbackingstoreproxy.h
index f892554..0ca7824 100644
--- a/src/dbackingstoreproxy.h
+++ b/src/dbackingstoreproxy.h
@@ -40,10 +40,14 @@ public:
     void composeAndFlush(QWindow *window, const QRegion &region, const QPoint &offset,
                          QPlatformTextureList *textures,
                          bool translucentBackground) override;
-#else
+#elif QT_VERSION <= QT_VERSION_CHECK(6, 9, 1)
     FlushResult rhiFlush(QWindow *window, qreal sourceDevicePixelRatio, const QRegion &region,
                          const QPoint &offset, QPlatformTextureList *textures,
                          bool translucentBackground) override;
+#else
+    FlushResult rhiFlush(QWindow *window, qreal sourceDevicePixelRatio, const QRegion &region,
+                         const QPoint &offset, QPlatformTextureList *textures,
+                         bool translucentBackground, qreal sourceTransformFactor = 0) override;
 #endif
 #if QT_VERSION <= QT_VERSION_CHECK(6, 2, 4)
     GLuint toTexture(const QRegion &dirtyRegion, QSize *textureSize, TextureFlags *flags) const override;
diff --git a/xcb/dhighdpi.cpp b/xcb/dhighdpi.cpp
index 45cda3d..b95bda3 100644
--- a/xcb/dhighdpi.cpp
+++ b/xcb/dhighdpi.cpp
@@ -185,8 +185,12 @@ void DHighDpi::onDPIChanged(xcb_connection_t *connection, const QByteArray &name
                 continue;
 
             // 更新窗口大小
-            if (window->handle()) {
-                QWindowSystemInterfacePrivate::GeometryChangeEvent gce(window, QHighDpi::fromNativePixels(window->handle()->geometry(), window));
+            if (auto *handle = window->handle()) {
+#if QT_VERSION < QT_VERSION_CHECK(6, 9, 2)
+                QWindowSystemInterfacePrivate::GeometryChangeEvent gce(window, QHighDpi::fromNativePixels(handle->geometry(), window));
+#else
+                QWindowSystemInterfacePrivate::GeometryChangeEvent gce(window, QHighDpi::fromNativeWindowGeometry(handle->QPlatformWindow::geometry(), window), QHighDpi::fromNativePixels(handle->geometry(), window));
+#endif
                 QGuiApplicationPrivate::processGeometryChangeEvent(&gce);
             }
         }
