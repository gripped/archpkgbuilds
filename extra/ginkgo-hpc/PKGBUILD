# Maintainer: Jakub Klinkovsk√Ω <lahwaacz at archlinux dot org>

_pkgname=ginkgo
pkgbase=ginkgo-hpc
pkgname=(ginkgo-hpc ginkgo-hpc-docs ginkgo-hpc-cuda ginkgo-hpc-hip)
pkgver=1.8.0
pkgrel=1
pkgdesc="Numerical linear algebra software package"
arch=(x86_64)
url=https://ginkgo-project.github.io/
license=(BSD-3-Clause)
depends=(
  gcc-libs
  glibc
  hwloc
  openmpi
)
# FIXME: system 'rapidjson' does not work due to some C++ issues
# (see the 'declared protected here' error in https://github.com/Tencent/rapidjson/issues/1338#issuecomment-449849215 )
makedepends=(
  cmake
  ninja
  nlohmann-json
  gflags  # for benchmarks (not installed yet)
  gtest
  numactl
  doxygen
  graphviz
  texlive-bin
  texlive-latexextra
  # -cuda
  cuda
  # -hip
  hip-runtime-amd
  hipblas
  hipfft
  hiprand
  hipsparse
  rocthrust
  roctracer
)
source=("$_pkgname-$pkgver.tar.gz::https://github.com/ginkgo-project/ginkgo/archive/refs/tags/v$pkgver.tar.gz"
        "fix-rocm-6.1.patch")
sha256sums=('421efaed1be2ef11d230b79fc68bcf7e264a2c57ae52aff6dec7bd90f8d4ae30'
            '303963ef8df2bb18166f4942d60e2522ae4af43a6f70a7043b50d3fb80110708')

prepare() {
  # fix ROCm 6.1 issues https://github.com/ginkgo-project/ginkgo/pull/1670
  patch --directory=$_pkgname-$pkgver -Np1 < fix-rocm-6.1.patch
}

build() {
  local common_cmake_flags=(
    -S $_pkgname-$pkgver -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX=/usr
    -DGINKGO_BUILD_REFERENCE=ON
    -DGINKGO_BUILD_OMP=ON
    -DGINKGO_BUILD_MPI=ON
    -DGINKGO_HAVE_GPU_AWARE_MPI=ON
    -DGINKGO_BUILD_BENCHMARKS=ON
    -DGINKGO_BUILD_EXAMPLES=ON
    -DGINKGO_BUILD_DOC=ON
    -DGINKGO_BUILD_TESTS=ON
  )
  # In general, we want to ist all real archs (sm_XX) and the latest virtual arch (compute_XX) for future PTX compatibility.
  # Valid values can be discovered from nvcc --help
  # Compiling Ginkgo for all real architectures triggers linker limits (2 GB binary size). So let's omit 52, 53, 62, 72 from the list.
  local _cuda_archs="50;60;61;70;75;80;86;87;89;90;90a;90a-virtual"
  # archs gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102 are not supported: https://github.com/ginkgo-project/ginkgo/issues/1429
  local _amdgpu_archs="gfx906;gfx908;gfx90a;gfx940;gfx941;gfx942"

  # base package
  cmake -B build "${common_cmake_flags[@]}" \
    -DGINKGO_BUILD_CUDA=OFF \
    -DGINKGO_BUILD_HIP=OFF \
    -DGINKGO_BUILD_SYCL=OFF
  cmake --build build

  # -cuda package
  # Compile source code for supported GPU archs in parallel
  export CUDAFLAGS="--threads $(nproc)"
  cmake -B build-cuda "${common_cmake_flags[@]}" \
    -DCMAKE_CUDA_ARCHITECTURES="$_cuda_archs" \
    -DGINKGO_BUILD_CUDA=ON \
    -DGINKGO_BUILD_HIP=OFF \
    -DGINKGO_BUILD_SYCL=OFF
  cmake --build build-cuda

  # -hip package
  # Ginkgo has insufficient auto-detection for HIP_PATH https://github.com/ginkgo-project/ginkgo/issues/1624
  export ROCM_PATH=/opt/rocm
  export HIP_PATH="$ROCM_PATH"
  # LTO does not work with HIP
  export HIPFLAGS="${CXXFLAGS/-flto=auto/}"
  export CXXFLAGS="${CXXFLAGS/-flto=auto/}"
  # HIP does not support -fcf-protection
  export HIPFLAGS="${HIPFLAGS/-fcf-protection/}"
  # Ginkgo does not support _GLIBCXX_ASSERTIONS for device builds https://github.com/ginkgo-project/ginkgo/issues/1143#issuecomment-2036957897
  export HIPFLAGS="${HIPFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS/}"
  # Compile source code for supported GPU archs in parallel
  export HIPFLAGS="$HIPFLAGS -parallel-jobs=$(nproc)"
  cmake -B build-hip "${common_cmake_flags[@]}" \
    -DCMAKE_CXX_COMPILER=/opt/rocm/lib/llvm/bin/amdclang++ \
    -DCMAKE_HIP_ARCHITECTURES="$_amdgpu_archs" \
    -DGINKGO_BUILD_CUDA=OFF \
    -DGINKGO_BUILD_HIP=ON \
    -DGINKGO_BUILD_SYCL=OFF
  cmake --build build-hip
}

check() {
  # FIXME: some tests fail:
  # - https://github.com/ginkgo-project/ginkgo/issues/1143
  # - https://github.com/ginkgo-project/ginkgo/issues/1567
  local excluded_tests="test/factorization/par_ilu_kernels_omp"  # 1143
  excluded_tests+="|reference/test/reorder/mc64_kernels"  # 1143
  excluded_tests+="|omp/test/reorder/rcm_kernels"  # 1143
  excluded_tests+="|test/matrix/matrix_omp"  # 1143
  excluded_tests+="|benchmark_multi_vector_distributed"  #1567
  excluded_tests+="|benchmark_spmv_distributed"  #1567
  excluded_tests+="|benchmark_solver_distributed"  #1567

  # limit parallel execution of tests to 4 threads and 8 processes
  # note that without a GPU we cannot run tests for -cuda and -hip
  (
    export OMP_NUM_THREADS=4
    export CTEST_PARALLEL_LEVEL=8
    export CTEST_OUTPUT_ON_FAILURE=1
    ctest --test-dir build --exclude-regex "$excluded_tests"
  )
}

_package() {
  DESTDIR="$pkgdir" cmake --install build"$1"

  # install the license
  install -vDm 644 $_pkgname-$pkgver/LICENSE -t "$pkgdir/usr/share/licenses/$pkgname/"

  # TODO: install the benchmarks and examples: https://github.com/ginkgo-project/ginkgo/issues/1144
}

package_ginkgo-hpc() {
  optdepends=(
    'ginkgo-hpc-docs: for documentation'
  )

  _package ""
}

package_ginkgo-hpc-docs() {
  pkgdesc+=" - documentation"
  depends=()

  # install the documentation
  install -vdm755 "$pkgdir/usr/share/doc/$pkgbase"
  cp -r build/doc/usr "$pkgdir/usr/share/doc/$pkgbase/html"

  # install the license
  install -vDm 644 $_pkgname-$pkgver/LICENSE -t "$pkgdir/usr/share/licenses/$pkgname/"
}

package_ginkgo-hpc-cuda() {
  pkgdesc+=" (with CUDA)"
  depends+=(cuda)
  optdepends=(
    'ginkgo-hpc-docs: for documentation'
  )
  conflicts=(ginkgo-hpc)
  provides=(ginkgo-hpc)

  _package -cuda
}

package_ginkgo-hpc-hip() {
  pkgdesc+=" (with ROCm/HIP)"
  depends+=(
    hip-runtime-amd
    hipblas
    hipfft
    hiprand
    hipsparse
    roctracer
  )
  optdepends=(
    'ginkgo-hpc-docs: for documentation'
  )
  conflicts=(ginkgo-hpc)
  provides=(ginkgo-hpc)

  _package -hip
}

# vim:set ts=2 sw=2 et:
