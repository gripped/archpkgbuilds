diff -ru giac-2.0.0.orig/src/prog.cc giac-2.0.0/src/prog.cc
--- giac-2.0.0.orig/src/prog.cc	2025-07-11 19:05:53.967631259 +0200
+++ giac-2.0.0/src/prog.cc	2025-07-11 19:21:09.584690054 +0200
@@ -7509,7 +7509,7 @@
       size -= offset;
     }
     SHA256_CTX ctx;
-    sha256_init(&ctx);
+    giac_sha256_init(&ctx);
     while (size){
       int rsize=0,Size=size>bufsize?bufsize:size;
       rsize = Bfile_ReadFile_OS(hFile, buf,Size, -1);
@@ -7518,14 +7518,14 @@
         free(buf);
         return -3;
       }
-      sha256_update(&ctx,buf,Size);
+      giac_sha256_update(&ctx,buf,Size);
       size -= Size;
     }
     Bfile_CloseFile_OS(hFile);
     free(buf);
     std::vector<unsigned char> v(SHA256_BLOCK_SIZE);
     BYTE * hash=&v.front();
-    sha256_final(&ctx,hash);
+    giac_sha256_final(&ctx,hash);
     vecteur V;
     for (int i=0;i<v.size();++i)
       V.push_back(v[i]);
@@ -7550,7 +7550,7 @@
       size -=offset;
     }
     SHA256_CTX ctx;
-    sha256_init(&ctx);
+    giac_sha256_init(&ctx);
     while (size){
       int rsize=0,Size=size>bufsize?bufsize:size;
       rsize = fread(buf,1,Size,hFile); 
@@ -7559,14 +7559,14 @@
         free(buf);
         return -3;
       }
-      sha256_update(&ctx,buf,Size);
+      giac_sha256_update(&ctx,buf,Size);
       size -= Size;
     }
     fclose(hFile);
     free(buf);
     std::vector<unsigned char> v(SHA256_BLOCK_SIZE);
     BYTE * hash=&v.front();
-    sha256_final(&ctx,hash);
+    giac_sha256_final(&ctx,hash);
     vecteur V;
     for (int i=0;i<v.size();++i)
       V.push_back(v[i]);
