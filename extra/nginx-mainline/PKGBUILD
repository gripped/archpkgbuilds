# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Massimiliano Torromeo <massimiliano.torromeo@gmail.com>
# Contributor: Bartłomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Sébastien Luttringer
# Contributor: Drew DeVault

_pkgbase=nginx
pkgbase=nginx-mainline
pkgname=(nginx-mainline nginx-mainline-src nginx-mainline-mod-geoip nginx-mainline-mod-image-filter
         nginx-mainline-mod-mail nginx-mainline-mod-perl nginx-mainline-mod-stream
         nginx-mainline-mod-xslt)
pkgver=1.27.3
pkgrel=1
_tests_commit=898407c62387
arch=('x86_64')
pkgdesc='Lightweight HTTP server and IMAP/POP3 proxy server, mainline release'
url='https://nginx.org'
license=(BSD-2-Clause)
makedepends=(mercurial pcre2 zlib openssl gd geoip mailcap libxcrypt libxslt rsync)
checkdepends=(perl perl-gd perl-io-socket-ssl perl-fcgi perl-cache-memcached
              perl-cryptx memcached ffmpeg coreutils)
source=($url/download/nginx-$pkgver.tar.gz{,.asc}
        "hg+https://hg.nginx.org/nginx-tests#revision=${_tests_commit}"
        nginx.service
        logrotate)
# https://nginx.org/en/pgp_keys.html
validpgpkeys=(
  'B0F4253373F8F6F510D42178520A9993A1C052F8' # Maxim Dounin <mdounin@mdounin.ru>
  'D6786CE303D9A9022998DC6CC8464D549AF75C0A' # Sergey Kandaurov <s.kandaurov@f5.com>
  '13C82A63B603576156E30A4EA0EA981B66B0D967' # Konstantin Pavlov <thresh@nginx.com>
  '43387825DDB1BB97EC36BA5D007C8D7C15D87369' # Roman Arutyunyan <r.arutyunyan@f5.com>
)
sha512sums=('5536d41ead0da71b6593cb361fd3da79707362919e6b6e71ec64816b5c2205903af0cd151796c942b32dfca0f8e8e3ffd9dcb3acf993144342ca671330b1a0dc'
            'SKIP'
            'a83dfb5d8ac130338ab6f3d6e1b41ff80a222ccec319abb5322b3a03cdd3308ed15ed1c44ba64e8f4fb32d91a72a85abbd17a5b8a0e06e3c580caf035c1faaba'
            'f469b3b14def666e955abf6f2d3c68a47631cad7bee90c92039ffe5bf629aa7e32bb4250844d52c0f963740fb07bf7fea5f8887cc1d5199403f07be6214fcb8d'
            '2f4dfcfa711b8bcbc5918ba635f5e430ef7132e66276261ade62bb1cba016967432c8dce7f84352cb8b07dc7c6b18f09177aa3eb92c8e358b2a106c8ca142fe9')
b2sums=('283f90d9c935650085e028f6cb41bf2db6a04ea6e8f50b9b0b3f157326ee370f503fa84aeef1230b3501432a9e64be5462065ec6877024bb8f49376643959e54'
        'SKIP'
        'd0c10634ee7b9e0bcda7b2c904a3ba71ee5508cae2b0024321527ca328c8f28627baca011a4221e6b3e7ea358d9fb5401de1cba26c9b5bcd9fdbfb31b745914c'
        '6600d4f603f8f20a5694402df57d1281a81ec469e48fb0d1f2fa555e6aed9976470a4d15b9e9fdcf6aaabef5c76a34695f0ab15d724533dbafddb80ba6e25d97'
        'e1755f61b4eaece83c6c22e48f9e5e316851d1dc35f8d770f837c7d3c8bdc894af1b697c25f1788ac50cd597085c22fb9bf8096a55ecf7659d63185f68ba2d8a')

prepare() {
  cp -r $_pkgbase-$pkgver{,-src}
}

build() {
  cd $_pkgbase-$pkgver
  ./configure \
    --prefix=/etc/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --sbin-path=/usr/bin/nginx \
    --modules-path=/usr/lib/nginx/modules \
    --pid-path=/run/nginx.pid \
    --lock-path=/run/lock/nginx.lock \
    --user=http \
    --group=http \
    --http-log-path=/var/log/nginx/access.log \
    --error-log-path=stderr \
    --http-client-body-temp-path=/var/lib/nginx/client-body \
    --http-proxy-temp-path=/var/lib/nginx/proxy \
    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
    --http-scgi-temp-path=/var/lib/nginx/scgi \
    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
    --with-cc-opt="$CFLAGS $CPPFLAGS" \
    --with-ld-opt="$LDFLAGS" \
    --with-compat \
    --with-debug \
    --with-file-aio \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_dav_module \
    --with-http_degradation_module \
    --with-http_flv_module \
    --with-http_geoip_module=dynamic \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_image_filter_module=dynamic \
    --with-http_mp4_module \
    --with-http_perl_module=dynamic \
    --with-http_random_index_module \
    --with-http_realip_module \
    --with-http_secure_link_module \
    --with-http_slice_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    --with-http_v2_module \
    --with-http_v3_module \
    --with-http_xslt_module=dynamic \
    --with-mail=dynamic \
    --with-mail_ssl_module \
    --with-pcre-jit \
    --with-stream=dynamic \
    --with-stream_geoip_module=dynamic \
    --with-stream_realip_module \
    --with-stream_ssl_module \
    --with-stream_ssl_preread_module \
    --with-threads

  make
  make DESTDIR="$srcdir/install" install

  rsync -am \
    --remove-source-files \
    --include="usr/lib/nginx/modules/ngx_*geoip*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-geoip/"

  rsync -am \
    --remove-source-files \
    --include="usr/lib/nginx/modules/ngx_*image*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-image-filter/"

  rsync -am \
    --remove-source-files \
    --include="usr/lib/nginx/modules/ngx_*mail*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-mail/"

  rsync -am \
    --remove-source-files \
    --include='*.3pm' \
    --include="usr/lib/perl*/***" \
    --include="usr/lib/nginx/modules/ngx_*perl*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-perl/"

  rsync -am \
    --remove-source-files \
    --include="usr/lib/nginx/modules/ngx_*stream*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-stream/"

  rsync -am \
    --remove-source-files \
    --include="usr/lib/nginx/modules/ngx_*xslt*.so" \
    --include='*/' \
    --exclude='*' \
    "$srcdir/install/" "$srcdir/install-xslt/"

  find "$srcdir/install/usr" -type d -empty -delete
}

check() {
  cd nginx-tests
  local _jobs=$(nproc)
  (( _jobs > 16 )) && _jobs=16
  TEST_NGINX_BINARY="$srcdir/$_pkgbase-$pkgver/objs/nginx" prove -j "$_jobs" .
}

package_nginx-mainline() {
  depends=('glibc' 'pcre2' 'zlib' 'openssl' 'mailcap' 'libxcrypt')
  optdepends=(
    'nginx-mainline-mod-geoip: GeoIP support'
    'nginx-mainline-mod-image-filter: transform images'
    'nginx-mainline-mod-mail: proxy IMAP, POP and SMTP protocols'
    'nginx-mainline-mod-perl: perl variables and location handlers'
    'nginx-mainline-mod-stream: proxy TCP/UDP data streams'
    'nginx-mainline-mod-xslt: transform XML responses'
  )
  backup=('etc/nginx/fastcgi.conf'
          'etc/nginx/fastcgi_params'
          'etc/nginx/koi-win'
          'etc/nginx/koi-utf'
          'etc/nginx/nginx.conf'
          'etc/nginx/scgi_params'
          'etc/nginx/uwsgi_params'
          'etc/nginx/win-utf'
          'etc/logrotate.d/nginx')
  provides=($_pkgbase)
  conflicts=($_pkgbase)

  cd $_pkgbase-$pkgver
  mv "$srcdir"/install/* "$pkgdir/"

  sed -e 's|\<user\s\+\w\+;|user http;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    -e '/^events {/ i # Load all installed modules\n#include modules.d/*.conf;\n' \
    -i "$pkgdir"/etc/nginx/nginx.conf

  rm "$pkgdir"/etc/nginx/*.default
  rm "$pkgdir"/etc/nginx/mime.types  # in mailcap

  install -dm0755 "$pkgdir"/etc/nginx/modules.d

  install -d "$pkgdir"/var/lib/nginx
  install -dm700 "$pkgdir"/var/lib/nginx/proxy

  chmod 755 "$pkgdir"/var/log/nginx
  chown root:root "$pkgdir"/var/log/nginx

  install -d "$pkgdir"/usr/share/nginx
  mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

  install -Dm644 ../logrotate "$pkgdir"/etc/logrotate.d/nginx
  install -Dm644 ../nginx.service "$pkgdir"/usr/lib/systemd/system/nginx.service
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE

  rmdir "$pkgdir"/run

  install -Dm0644 objs/nginx.8 "$pkgdir"/usr/share/man/man8/nginx.8

  for i in ftdetect ftplugin indent syntax; do
    install -Dm644 contrib/vim/$i/nginx.vim \
      "$pkgdir/usr/share/vim/vimfiles/$i/nginx.vim"
  done
}

package_nginx-mainline-src() {
  pkgdesc="Source code of nginx-mainline $pkgver, useful for building modules"
  conflicts=($_pkgbase-src)

  install -d "$pkgdir/usr/src"
  cp -r $_pkgbase-$pkgver-src "$pkgdir/usr/src/nginx"
  install -Dm644 $_pkgbase-$pkgver/LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}

_package_module() {
  modname="$1"
  priority="${2:-20}"

  mv "$srcdir/install-$modname"/* "$pkgdir/"
  install -Dm644 $_pkgbase-$pkgver/LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE

  install -dm0755 "$pkgdir"/etc/nginx/modules.d
  cd $pkgdir
  find usr/lib/nginx/modules -type f -name \*.so \
    | sed -e 's@^@load_module "/@' -e 's@$@";@' \
    >> "$pkgdir/etc/nginx/modules.d/$priority-$modname.conf"
}

package_nginx-mainline-mod-geoip() {
  pkgdesc="GeoIP module for nginx-mainline"
  depends=($_pkgbase 'geoip')
  backup=(etc/nginx/modules.d/20-geoip.conf)
  _package_module geoip
}

package_nginx-mainline-mod-image-filter() {
  pkgdesc="Module for nginx-mainline that transforms images in JPEG, GIF, PNG, and WebP formats"
  depends=($_pkgbase 'gd')
  backup=(etc/nginx/modules.d/20-image-filter.conf)
  _package_module image-filter
}

package_nginx-mainline-mod-mail() {
  pkgdesc="Mail module for nginx-mainline to proxy IMAP, POP3 and SMTP protocols"
  depends=($_pkgbase)
  backup=(etc/nginx/modules.d/20-mail.conf)
  _package_module mail
}

package_nginx-mainline-mod-perl() {
  pkgdesc="Module for nginx-mainline to implement location and variable handlers in Perl"
  depends=($_pkgbase 'perl')
  backup=(etc/nginx/modules.d/20-perl.conf)
  _package_module perl
}

package_nginx-mainline-mod-stream() {
  pkgdesc="Module for nginx-mainline to proxy TCP and UDP data streams"
  depends=($_pkgbase)
  backup=(etc/nginx/modules.d/10-stream.conf)
  _package_module stream 10
}

package_nginx-mainline-mod-xslt() {
  pkgdesc="Module for nginx-mainline to transform XML responses with XSLT stylesheets"
  depends=($_pkgbase 'libxslt')
  backup=(etc/nginx/modules.d/20-xslt.conf)
  _package_module xslt
}
