# Maintainer: David Runge <dvzrv@archlinux.org>

pkgbase=maelstrom
pkgname=(
  cargo-maelstrom
  maelstrom-broker
  maelstrom-client
  maelstrom-go-test
  maelstrom-pytest
  maelstrom-run
  maelstrom-worker
)
pkgver=0.13.0
pkgrel=1
pkgdesc="A fast Rust, Go, and Python test runner that runs every test in its own container"
arch=(x86_64)
url="https://maelstrom-software.com/"
_url="https://github.com/maelstrom-software/maelstrom"
license=('Apache-2.0 OR MIT')
makedepends=(
  gcc-libs
  glibc
  git
  openssl
  protobuf
  rust
)
checkdepends=(
  go
  python-pip
  python-pytest
)
options=(!lto)  # the project uses ring
source=(
  $pkgbase::git+$_url#tag=v$pkgver
  $pkgbase-0.13.0-maelstrom-client-missing-shared-object.patch  # https://github.com/maelstrom-software/maelstrom/issues/501
  $pkgbase-0.13.0-cargo-maelstrom-broken-tests.patch  # https://github.com/maelstrom-software/maelstrom/issues/502
  $pkgbase-0.13.0-maelstrom-go-test-broken-tests.patch  # https://github.com/maelstrom-software/maelstrom/issues/503
  $pkgbase-0.13.0-maelstrom-pytest-broken-tests.patch  # https://github.com/maelstrom-software/maelstrom/issues/504
  $pkgbase-0.13.0-maelstrom-worker-broken-tests.patch  # https://github.com/maelstrom-software/maelstrom/issues/505
)
sha512sums=('c083db9fd0f7fab8217db9dc9c04c95d5f001d4f0d94a7e87cc5f94473eb6de3b9760930473466e64443018394ff8daef9d8b49be42133baa28d73fac2182e31'
            'af9ff61b5384109e35cc7f236552a567433d59ebbb2e23c2253b402e5c7df4f79a337cee914cba8ebf38045b8efe6d8057a65c5b25eb940245cae26f23d0f6f0'
            '6852d78284b3443cc943d3ce9a21d140ac952c285149e4f9db72b640c470593539d94aa939f3d5dd9aa6b1c1873964a02998dddd9cfc41593c0472989f036ec6'
            '3ccc2fef34c6a812a78c3ebae115db132179bfe5fdd20235e86fa70f245c7ca3f8b96587eaefaa3c2a63501ab8aed673b6344bd10c32d6be1bbe6bf73dc04af6'
            'c22ecdc02ad4687da2b93269259f057afd4a7522b63a94dc18077fafbd9090db6c198f6c9f55395387b4871e7e4f1a44d338bcb2a368a7f3f44d9089d41e62f0'
            'f88e19aaa5e8fa78c314744518dcf821170def602d75b5ca34c9533a34e6bc1f8b65bba9256ef627bf60d28c34e4cc772e8b9ee8e3ef6d90c4b3b12b996ef09e')
b2sums=('dfd45267bb1fc875ad2df24e99cd413dbe65d80440e45ea6b75b8b6a7f9926958670a5d9a501452359a19b08c937bcf2ad420387261f55f6bcef598d5181a49f'
        'e89f9d2ee025bb0246ccf8cc86934ab299ac0837848771da2fcaa6a279084a0d9d2d62b60a6570594e45e6b0cf4f2096b479761d4e5444d5a5bfedce6870effc'
        '7e38ea75641d91688ff2c58c6975d2386a5445905fa614117e6848fdfb5b9caeeb102ccd0aea5d785a1dbe8272239f4b6be14ab547dc73d045050382fd08d9af'
        '1619c1a19557403e082c8f020b0a82dca936bd0800ffdea43823b935abc564ee99d2dc7de7b635217760cf93b59e83530804afc21c3a7c57d4394ad6e023cd35'
        'c255c8b864166fee729ddd346aa38dfb3dad429f6543b62f0d09144811358f314dd3bc6af47647fb99b308e9e15e9ec4cdfb7c9d743725d0c697619ec87a56cb'
        'bd620872a23bc3e329db46c60afb5c130ad74d57cce74fd39cba4748b0935c62676057046a24e6410cfad9b7a1c69105f09239d05dfc2d8cc17fd5a01f93edb7')

prepare() {
  cd $pkgbase
  patch -Np1 -i ../$pkgbase-0.13.0-maelstrom-client-missing-shared-object.patch
  patch -Np1 -i ../$pkgbase-0.13.0-cargo-maelstrom-broken-tests.patch
  patch -Np1 -i ../$pkgbase-0.13.0-maelstrom-go-test-broken-tests.patch
  patch -Np1 -i ../$pkgbase-0.13.0-maelstrom-pytest-broken-tests.patch
  patch -Np1 -i ../$pkgbase-0.13.0-maelstrom-worker-broken-tests.patch

  export RUSTUP_TOOLCHAIN=stable
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd $pkgbase
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  for pkg in ${pkgname[@]}; do
    local cargo_build_options=(
      --frozen
      --release
    )

    # the wasm setup for maelstrom-web is broken: https://github.com/maelstrom-software/maelstrom/issues/468
    if [[ "$pkg" == maelstrom-broker ]]; then
      cargo_build_options+=(--no-default-features --package)
    else
      cargo_build_options+=(--all-features --package)
    fi

    printf "Building package %s\n" "$pkg"
    cargo build "${cargo_build_options[@]}" "$pkg"
  done
}

# tests are currently broken
check() {
  cd $pkgbase
  export RUST_BACKTRACE=full
  export RUSTUP_TOOLCHAIN=stable
  # NOTE: cargo-maelstrom tests `empty_cargo_project`, `few_tests` and `failed_test` require a higher open file limit
  ulimit -n 4096

  for pkg in ${pkgname[@]}; do
    local cargo_test_options=(
      --frozen
    )
    local test_options=()

    # the wasm setup for maelstrom-web is broken: https://github.com/maelstrom-software/maelstrom/issues/468
    if [[ "$pkg" == maelstrom-broker ]]; then
      cargo_test_options+=(--no-default-features --package)
    else
      cargo_test_options+=(--all-features --package)
    fi

    printf "Testing package %s\n" "$pkg"
    cargo test "${cargo_test_options[@]}" "$pkg"
  done
}

package_cargo-maelstrom() {
  pkgdesc="Cargo test runner for Maelstrom"
  depends=(
    cargo
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
  )

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-broker() {
  pkgdesc="Maelstrom broker, coordinating between clients and workers"
  depends=(
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
  )
  groups=(maelstrom-cluster)

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-client() {
  pkgdesc="Maelstrom client for creating and submitting jobs on a Maelstrom cluster"
  depends=(
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
  )

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-go-test() {
  pkgdesc="Go test runner for Maelstrom"
  depends=(
    gcc-libs
    glibc
    go
    openssl libcrypto.so libssl.so
  )

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-pytest() {
  pkgdesc="Python test runner for Maelstrom"
  depends=(
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
    python
    python-pip
    python-pytest
  )

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-run() {
  pkgdesc="Program for submitting jobs to Maelstrom clusters"
  depends=(
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
  )

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}

package_maelstrom-worker() {
  pkgdesc="Maelstrom worker, executing jobs as directed by maelstrom-broker"
  depends=(
    gcc-libs
    glibc
    openssl libcrypto.so libssl.so
  )
  groups=(maelstrom-cluster)

  cd $pkgbase
  install -vDm 755 target/release/$pkgname -t "$pkgdir/usr/bin/"
  install -vDm 644 LICENSE-APACHE "$pkgdir/usr/share/licenses/$pkgname/Apache-2.0.txt"
  install -vDm 644 LICENSE-MIT "$pkgdir/usr/share/licenses/$pkgname/MIT.txt"
}
