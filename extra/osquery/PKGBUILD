# Maintainer: Anatol Pomozov
# Maintainer: Carl Smedstad <carsme@archlinux.org>

pkgname=osquery
pkgver=5.16.0
pkgrel=1
pkgdesc="SQL powered operating system instrumentation, monitoring, and analytics"
arch=(x86_64)
url="https://osquery.io"
license=('Apache-2.0 OR GPL-2.0-only')
depends=(
  audit
  augeas
  aws-c-auth
  aws-c-cal
  aws-c-common
  aws-c-compression
  aws-c-event-stream
  aws-c-http
  aws-c-io
  aws-c-mqtt
  aws-c-s3
  aws-c-sdkutils
  aws-checksums
  aws-crt-cpp
  aws-sdk-cpp-core
  aws-sdk-cpp-ec2
  aws-sdk-cpp-firehose
  aws-sdk-cpp-iam
  aws-sdk-cpp-kinesis
  bash
  boost-libs
  cryptsetup
  dbus
  device-mapper
  file
  gcc-libs
  gflags
  glibc
  google-glog
  iptables
  libarchive
  libcap
  librdkafka
  openssl
  popt
  rocksdb
  rpm-tools
  s2n-tls
  sleuthkit
  sqlite
  systemd-libs
  thrift
  yara
  zlib
  zstd
)
makedepends=(
  boost
  clang
  cmake
  dpkg
  git
  gtest
  libpcap
  libunwind
  python
  rapidjson
)
backup=(
  etc/osquery/osquery.conf
  etc/sysconfig/osqueryd
)
_url=https://github.com/osquery/osquery
source=(
  "git+$_url.git#tag=$pkgver"
  "git+https://github.com/arangodb/linenoise-ng.git"
  "git+https://git.kernel.org/pub/scm/utils/util-linux/util-linux.git"
  # Patchset maintained here:
  # https://github.com/carlsmedstad/osquery/tree/build-on-archlinux
  "$pkgname-0001-Use-system-libraries-where-possible.patch::$_url/commit/dd08b4e2f1db5d19003e1728ed6122474060ef91.patch"
  "$pkgname-0002-Disable-submodule-fetching.patch::$_url/commit/e6e3b683fe8ae9131bcbeb4aeb4ae0a4549a4aeb.patch"
  "$pkgname-0003-Remove-include-of-non-existing-header-xlocale.h.patch::$_url/commit/6528b181ebdf75316d145a2819cffa8dcb3a4ec9.patch"
  "$pkgname-0005-Fix-remaining-compilation-issues.patch::$_url/commit/a0d28a211afb7291c2ebed321cd91e2c7a686a21.patch"
  "$pkgname-0006-Do-not-build-system_controls-tables.patch::$_url/commit/c52b0ae5a9717ef1da45c05f91f8af4884e6aecd.patch"
  "$pkgname-0007-Do-not-build-block_devices-tables.patch::$_url/commit/c80a3a215eb155c570e76888e74bc81e17ccbeb1.patch"
  "$pkgname-0008-Do-not-build-utils-requiring-libdpkg.patch::$_url/commit/8ae3260cd2bfc7fa108c5bb345a3227b58ba5d7e.patch"
  "$pkgname-0009-Fix-systemd-service-and-systemctl-script.patch::$_url/commit/d792974525c271cfb9984f42d0ee157ed6444705.patch"
  "$pkgname-0010-Adapt-installation-to-using-system-packages.patch::$_url/commit/63d89a012efcd9b4e773abbc63be0e445a58675d.patch"
  "$pkgname-0011-Booost-1.87-compatibility.patch::$_url/commit/884ffa75b0ce78aac02a2a23d91ddde0bdb7f3ad.patch"
)
sha256sums=('01558673b2f3f74f5edf24fe7fa7c4f7cd5a0325c7c6c1e9aeef8e12718ea6be'
            'SKIP'
            'SKIP'
            '9a29ecc1bf238db6e879d4ebe11b0cff440efe749f5c8e247607ca314e5a96c8'
            'ccc3d0a50873f3b941270ef2b64f089f56a34ee9dda730126509395e5f30adec'
            'bc977d07d62073668767b95799ddb057b7acb79f1cf784aaf69eae6faed8e86a'
            'd5b77ea645455d8c0a7e1e9166bb845f06198c1ce6aae3ca6f0ffa435d20f7e5'
            '6fb0e2147e7cbe60bd29d7f1e3a8ea3fb1e57d7b49192ebcb06d2958f1b13082'
            '1eb626046a244b662bc9b54f2eff5be169246ea30098529e73cd2470375a70b2'
            '93852062408d75eb647d686a0d4002bad2520d6c373bfe53be9615c689f2c626'
            '3d6428c3209a941ca37d14955f087627db438e94fc68542f7f5a799e7a087edb'
            'ab11afda86d32bedf61f7f37cc2d3b3a37c62c9bf22a584c1a12d1427225ca7e'
            '407f026eb402da202abc8594b0b2caf6007e43f6e98be0b178cfa79638a0f3b8')

prepare() {
  cd $pkgname
  git submodule init
  git config submodule.libraries/cmake/source/linenoise-ng/src.url "$srcdir/linenoise-ng"
  git config submodule.libraries/cmake/source/util-linux/src.url "$srcdir/util-linux"
  git -c protocol.file.allow=always submodule update \
    libraries/cmake/source/linenoise-ng \
    libraries/cmake/source/util-linux

  for patch in "$srcdir"/*.patch; do
    patch -Np1 -i "$patch"
  done
}

build() {
  cd $pkgname
  # This flag causes a linker error:
  # dns_resolvers.cpp:(...): undefined reference to `__res_close'
  export LDFLAGS="${LDFLAGS/-Wl,--as-needed/}"
  cmake -S . -B build \
    -DCMAKE_BUILD_TYPE=None \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -Wno-dev \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DOSQUERY_BUILD_TESTS=ON \
    -DOSQUERY_BUILD_BPF=OFF \
    -DOSQUERY_BUILD_EXPERIMENTS=OFF \
    -DOSQUERY_BUILD_AWS=ON \
    -DOSQUERY_BUILD_DPKG=OFF \
    -DOSQUERY_USE_SYSTEM_LIBRARIES=ON \
    -DOSQUERY_VERSION="$pkgver"
  cmake --build build
}

check() {
  cd $pkgname
  local skipped_tests=(
    osquery_events_tests_linuxtests-test
    osquery_filesystem_filesystemtests-test
    osquery_remote_transports_remotetransportstlstests-test
    osquery_tables_events_tests_seccompeventstests-test
    osquery_tables_system_linux_tests-test
    osquery_tables_system_tests_systemtablestests-test
    osquery_utils_json_jsontests-test
    tests_integration_tables-test
    tools_tests_testfschangestable
    tools_tests_testosqueryd
    tools_tests_testosqueryi
    tools_tests_testrelease
  )
  skipped_tests_pattern="${skipped_tests[0]}$(printf '|%s' "${skipped_tests[@]:1}")"
  ctest --test-dir build --output-on-failure -E "${skipped_tests_pattern}"
}

package() {
  cd $pkgname
  DESTDIR="$pkgdir" cmake --install build
  install -vdm755 "$pkgdir/var/log/osquery"
  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE
  install -vDm644 tools/deployment/osquery.example.conf "$pkgdir/etc/osquery/osquery.conf"
  install -vDm644 tools/deployment/linux_packaging/osqueryd.sysconfig "$pkgdir/etc/sysconfig/osqueryd"
  install -vDm644 tools/deployment/linux_packaging/rpm/osqueryd.service "$pkgdir/usr/lib/systemd/system/osqueryd.service"
}
