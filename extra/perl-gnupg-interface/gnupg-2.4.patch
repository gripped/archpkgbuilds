From de5d6258ff2fa77bfdc0e942b331ec0056718503 Mon Sep 17 00:00:00 2001
From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Thu, 13 Mar 2025 18:37:13 -0400
Subject: [PATCH] Accept ? or ! or % as validity for expired/invalid sigs (see
 T7547)

https://dev.gnupg.org/T7547 contains discussion about shifting
expectations for the validity field for expired signatures.

In 2.4, which considers these expired signatures using SHA1 as too
weak, it emits '%' for the validity field.

For flexibility, accept all three variants, in accordance with GnuPG
upstream wishes.
---
 t/MyTestSpecific.pm | 2 +-
 t/get_public_keys.t | 6 +++++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/t/MyTestSpecific.pm b/t/MyTestSpecific.pm
index c335d62..0f567d1 100644
--- a/t/MyTestSpecific.pm
+++ b/t/MyTestSpecific.pm
@@ -158,7 +158,7 @@ sub get_expired_test_sig_params {
     );
     if ($gnupg->cmp_version($gnupg->version, '2.2') > 0) {
         $sig_params{user_id_string} = '';
-        $sig_params{validity} = '?';
+        $sig_params{validity} = '?!';
     }
     else {
         $sig_params{user_id_string} = 'Frank J. Tobin <ftobin@neverending.org>',
diff --git a/t/get_public_keys.t b/t/get_public_keys.t
index 8d8eebf..992700c 100644
--- a/t/get_public_keys.t
+++ b/t/get_public_keys.t
@@ -232,7 +232,6 @@ TEST
         }
 
         my @compared_fields = qw(
-                                    validity
                                     algo_num
                                     hex_id
                                     date
@@ -244,6 +243,11 @@ TEST
         foreach my $field ( @compared_fields ) {
             return 0 unless $self->$field eq $other->$field;
         }
+        return 0 unless $self->validity eq $other->validity ||
+          ($self->validity eq '?!' &&
+           ($other->validity eq '!' ||
+            $other->validity eq '?' ||
+            $other->validity eq '%'));
         # check for expiration if present?
         return 0 unless (defined $self->expiration_date) == (defined $other->expiration_date);
         if (defined $self->expiration_date) {
From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Fri, 24 May 2024 17:07:49 -0400
Subject: Handle versions of GnuPG 2.{2,3,4}.x,
 that misreport the RENC key usage flag

Forwarded: https://github.com/bestpractical/gnupg-interface/pull/14

Some versions of GnuPG 2.2, 2.3, and 2.4 printed an apparently bogus
RENC key usage flag.  Avoid failing the test suite just because those
versions are in use.

---
 t/MyTestSpecific.pm  | 17 +++++++++++++++++
 t/get_public_keys.t  |  2 +-
 t/get_secret_keys.t  |  2 +-
 t/list_secret_keys.t |  6 +++---
 4 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/t/MyTestSpecific.pm b/t/MyTestSpecific.pm
index 67af078..609c065 100644
--- a/t/MyTestSpecific.pm
+++ b/t/MyTestSpecific.pm
@@ -167,4 +167,21 @@ sub get_expired_test_sig_params {
     return %sig_params
 }
 
+# determine whether this GnuPG version reports on the "RENC" key usage
+# flag, which was added in 2.3.8 and 2.2.42 (see upstream
+# e4f61df8509e7aff0628971d9ea8fe967cd0f416)
+# and changed again in 2.2.44 (see upstream
+# 1d91252205a21fc1a42e7a55a49421e50bb70f05)
+# and again in 2.4.6 (see upstream
+# a2966c9d894a9a92d7000bdd08ab757ab0060ef3)
+sub get_supported_renc {
+  my $gnupg = shift;
+  my $version = $gnupg->version;
+
+  return ((($gnupg->cmp_version($version, '2.3.8') >= 0) &&
+           ($gnupg->cmp_version($version, '2.4.6') < 0)) ||
+          (($gnupg->cmp_version($version, '2.2.44') < 0) &&
+           ($gnupg->cmp_version($version, '2.2.42') >= 0)));
+}
+
 1;
diff --git a/t/get_public_keys.t b/t/get_public_keys.t
index 8d8eebf..9d56a67 100644
--- a/t/get_public_keys.t
+++ b/t/get_public_keys.t
@@ -181,7 +181,7 @@ TEST
         hex_id                   => 'ADB99D9C2E854A6B',
         creation_date            => 949813119,
         creation_date_string     => '2000-02-06',
-        usage_flags              => $gnupg->cmp_version($gnupg->version, '2.3.8') >= 0 ? 'er' : 'e',
+        usage_flags              => get_supported_renc($gnupg) ? 'er' : 'e',
         pubkey_data              => $subkey_pub_data,
       );
 
diff --git a/t/get_secret_keys.t b/t/get_secret_keys.t
index 5fc2a57..1d8e583 100644
--- a/t/get_secret_keys.t
+++ b/t/get_secret_keys.t
@@ -87,7 +87,7 @@ TEST
         hex_id                   => 'ADB99D9C2E854A6B',
         creation_date            => 949813119,
         creation_date_string     => '2000-02-06',
-        usage_flags              => $gnupg->cmp_version($gnupg->version, '2.3.8') >= 0 ? 'er' : 'e',
+        usage_flags              => get_supported_renc($gnupg) ? 'er' : 'e',
         pubkey_data              => $subkey_pub_data,
       };
 
diff --git a/t/list_secret_keys.t b/t/list_secret_keys.t
index 44af61f..dcd0b97 100644
--- a/t/list_secret_keys.t
+++ b/t/list_secret_keys.t
@@ -51,11 +51,11 @@ TEST
     elsif ( $gnupg->cmp_version( $gnupg->version, '2.1.11' ) <= 0 ) {
         $keylist = '1';
     }
-    elsif ( $gnupg->cmp_version( $gnupg->version, '2.3.8' ) < 0 ) {
-        $keylist = '2.2';
+    elsif ( get_supported_renc( $gnupg ) ) {
+        $keylist = '2';
     }
     else {
-        $keylist = '2';
+        $keylist = '2.2';
     }
 
 
From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Thu, 13 Mar 2025 19:12:50 -0400
Subject: t/list_secret_keys.t: handle new human-readable output from 2.4

2.4 includes a mention of the "Revocable" line, so make sure we
don't fail a test because of it.
---
 t/list_secret_keys.t        |  4 +++-
 test/secret-keys/1.2.4.test | 14 ++++++++++++++
 2 files changed, 17 insertions(+), 1 deletion(-)
 create mode 100644 test/secret-keys/1.2.4.test

diff --git a/t/list_secret_keys.t b/t/list_secret_keys.t
index dcd0b97..c1fc36a 100644
--- a/t/list_secret_keys.t
+++ b/t/list_secret_keys.t
@@ -54,8 +54,10 @@ TEST
     elsif ( get_supported_renc( $gnupg ) ) {
         $keylist = '2';
     }
-    else {
+    elsif ( $gnupg->cmp_version( $gnupg->version, '2.4' ) < 0 ) {
         $keylist = '2.2';
+    } else {
+        $keylist = '2.4';
     }
 
 
diff --git a/test/secret-keys/1.2.4.test b/test/secret-keys/1.2.4.test
new file mode 100644
index 0000000..f355276
--- /dev/null
+++ b/test/secret-keys/1.2.4.test
@@ -0,0 +1,14 @@
+test/gnupghome/pubring.kbx
+--------------------------
+sec   dsa1024 2000-02-06 [SCA]
+      93AFC4B1B0288A104996B44253AE596EF950DA9C
+      Revocable by: 4F863BBBA8166F0A340F600356FFD10A260C4FA3
+uid           [ unknown] GnuPG test key (for testing purposes only)
+uid           [ unknown] Foo Bar (1)
+ssb   elg768 2000-02-06 [E]
+
+sec   rsa2048 2016-10-12 [SC]
+      278F850AA702911F1318F0A61B913CE9B6747DDC
+uid           [ unknown] GnuPG::Interface Test key <test@example.org>
+ssb   rsa2048 2016-10-12 [E]
+
