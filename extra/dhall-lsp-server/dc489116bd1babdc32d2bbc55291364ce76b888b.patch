From dc489116bd1babdc32d2bbc55291364ce76b888b Mon Sep 17 00:00:00 2001
From: gabby <GenuineGabriella@gmail.com>
Date: Sat, 5 Oct 2024 15:55:13 -0700
Subject: [PATCH] Fix formatting of `T.Some` (#2608)

Fixes https://github.com/dhall-lang/dhall-haskell/issues/2601

According to the standard the `Some` needs to be escaped when used as
a field accessor because the `any-label` grammar rule kicks in, which
specifically does not permit `Some`.
---
 .../src/Dhall/LSP/Backend/Completion.hs       |  7 +--
 dhall/src/Dhall/Pretty.hs                     |  1 +
 dhall/src/Dhall/Pretty/Internal.hs            | 51 +++++++++++++------
 dhall/src/Dhall/TypeCheck.hs                  |  8 +--
 dhall/tests/format/issue2601A.dhall           | 11 ++++
 dhall/tests/format/issue2601B.dhall           | 11 ++++
 nix/packages/lsp-test.nix                     | 27 ++++++++++
 7 files changed, 93 insertions(+), 23 deletions(-)
 create mode 100644 dhall/tests/format/issue2601A.dhall
 create mode 100644 dhall/tests/format/issue2601B.dhall
 create mode 100644 nix/packages/lsp-test.nix

diff --git a/dhall-lsp-server/src/Dhall/LSP/Backend/Completion.hs b/dhall-lsp-server/src/Dhall/LSP/Backend/Completion.hs
index 672173df0..a4dcadc9a 100644
--- a/dhall-lsp-server/src/Dhall/LSP/Backend/Completion.hs
+++ b/dhall-lsp-server/src/Dhall/LSP/Backend/Completion.hs
@@ -7,6 +7,7 @@ import Dhall.Context                 (Context, empty, insert, toList)
 import Dhall.LSP.Backend.Diagnostics (Position, positionToOffset)
 import Dhall.LSP.Backend.Parsing     (holeExpr)
 import Dhall.Parser                  (Src, exprFromText)
+import Dhall.Pretty                  (UnescapedLabel(..))
 import Dhall.TypeCheck               (typeOf, typeWithA)
 import System.Directory              (doesDirectoryExist, listDirectory)
 import System.Environment            (getEnvironment)
@@ -186,9 +187,9 @@ completeProjections (CompletionContext context values) expr =
   -- complete a union constructor by inspecting the union value
   completeUnion _A (Union m) =
     let constructor (k, Nothing) =
-            Completion (Dhall.Pretty.escapeLabel True k) (Just _A)
+            Completion (Dhall.Pretty.escapeLabel AnyLabelOrSome k) (Just _A)
         constructor (k, Just v) =
-            Completion (Dhall.Pretty.escapeLabel True k) (Just (Pi mempty k v _A))
+            Completion (Dhall.Pretty.escapeLabel AnyLabelOrSome k) (Just (Pi mempty k v _A))
      in map constructor (Dhall.Map.toList m)
   completeUnion _ _ = []
 
@@ -197,5 +198,5 @@ completeProjections (CompletionContext context values) expr =
   completeRecord (Record m) = map toCompletion (Dhall.Map.toList $ recordFieldValue <$> m)
     where
       toCompletion (name, typ) =
-          Completion (Dhall.Pretty.escapeLabel True name) (Just typ)
+          Completion (Dhall.Pretty.escapeLabel AnyLabel name) (Just typ)
   completeRecord _ = []
