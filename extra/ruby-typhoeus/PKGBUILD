# Maintainer: Bert Peters <bertptrs@archlinux.org>
_name=typhoeus
pkgname=ruby-typhoeus
pkgver=1.4.1
pkgrel=3
pkgdesc="Runs HTTP requests in parallel while cleanly encapsulating handling logic."
arch=('any')
url="https://github.com/typhoeus/typhoeus"
license=('MIT')
depends=(
  'ruby'
  'ruby-ethon'
)
makedepends=(git)
source=("$pkgname::git+$url.git#tag=v$pkgver")
sha256sums=('7f02a1b7c9cc4ff577fdec984bc067a73e5522841eb399894f3ca07a618183dc')

prepare() {
  cd "$pkgname"

  # update gemspec/Gemfile to allow newer version of the dependencies
  sed --in-place --regexp-extended 's|~>|>=|g' "${_name}.gemspec"
}

build() {
  cd "$pkgname"

  local _gemdir="$(gem env gemdir)"

  gem build "${_name}.gemspec"

  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --build-root "tmp_install" \
    "${_name}-${pkgver}.gem"

  # remove unrepreducible files
  rm --force --recursive --verbose \
    "tmp_install/${_gemdir}/cache/" \
    "tmp_install/${_gemdir}/gems/${_name}-${pkgver}/vendor/" \
    "tmp_install/${_gemdir}/doc/${_name}-${pkgver}/ri/ext/"

  find "tmp_install/${_gemdir}/gems/" \
    -type f \
    \( \
      -iname "*.o" -o \
      -iname "*.c" -o \
      -iname "*.so" -o \
      -iname "*.time" -o \
      -iname "gem.build_complete" -o \
      -iname "Makefile" \
    \) \
    -delete

  find "tmp_install/${_gemdir}/extensions/" \
    -type f \
    \( \
      -iname "mkmf.log" -o \
      -iname "gem_make.out" \
    \) \
    -delete
}

check() {
  cd "$pkgname"

  local _gemdir="$(gem env gemdir)"

  # Note: the required deps for testing are too old and aren't available in the
  # repos, nor would it be wise to add them. Instead, attempt to import the gem
  # and see if it works
  GEM_HOME="tmp_install/${_gemdir}" ruby -e 'require "typhoeus"; puts Typhoeus::VERSION'
}

package() {
  cd "$pkgname"

  cp --archive --verbose tmp_install/* "${pkgdir}"

  install --verbose -D --mode=0644 LICENSE --target-directory "${pkgdir}/usr/share/licenses/${pkgname}"
  install --verbose -D --mode=0644 *.md --target-directory "${pkgdir}/usr/share/doc/${pkgname}"
}
