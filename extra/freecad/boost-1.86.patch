diff --git a/src/Mod/Part/App/Geometry.cpp b/src/Mod/Part/App/Geometry.cpp
index 50c02eafc3..18b6ba1f2e 100644
--- a/src/Mod/Part/App/Geometry.cpp
+++ b/src/Mod/Part/App/Geometry.cpp
@@ -385,14 +385,14 @@ void Geometry::deleteExtension(const std::string & name)
 void Geometry::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
diff --git a/src/Mod/Sketcher/App/Constraint.cpp b/src/Mod/Sketcher/App/Constraint.cpp
index 9e4bfd9cd2..a18720169f 100644
--- a/src/Mod/Sketcher/App/Constraint.cpp
+++ b/src/Mod/Sketcher/App/Constraint.cpp
@@ -58,14 +58,14 @@ Constraint::Constraint()
       isActive(true)
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(QDateTime::currentMSecsSinceEpoch() & 0xffffffff);
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
diff --git a/src/Mod/TechDraw/App/CenterLine.cpp b/src/Mod/TechDraw/App/CenterLine.cpp
index c03fd66a11..540d6485f7 100644
--- a/src/Mod/TechDraw/App/CenterLine.cpp
+++ b/src/Mod/TechDraw/App/CenterLine.cpp
@@ -915,14 +915,14 @@ std::string CenterLine::getTagAsString() const
 void CenterLine::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
 
     tag = gen();
diff --git a/src/Mod/TechDraw/App/Cosmetic.cpp b/src/Mod/TechDraw/App/Cosmetic.cpp
index f0ce813227..9167f17286 100644
--- a/src/Mod/TechDraw/App/Cosmetic.cpp
+++ b/src/Mod/TechDraw/App/Cosmetic.cpp
@@ -301,14 +301,14 @@ std::string CosmeticEdge::getTagAsString() const
 void CosmeticEdge::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
@@ -454,14 +454,14 @@ std::string GeomFormat::getTagAsString() const
 void GeomFormat::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
diff --git a/src/Mod/TechDraw/App/CosmeticVertex.cpp b/src/Mod/TechDraw/App/CosmeticVertex.cpp
index 7e02cc5518..281386597f 100644
--- a/src/Mod/TechDraw/App/CosmeticVertex.cpp
+++ b/src/Mod/TechDraw/App/CosmeticVertex.cpp
@@ -190,14 +190,14 @@ std::string CosmeticVertex::getTagAsString() const
 void CosmeticVertex::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
diff --git a/src/Mod/TechDraw/App/Geometry.cpp b/src/Mod/TechDraw/App/Geometry.cpp
index 9786f2245d..12a78deb9d 100644
--- a/src/Mod/TechDraw/App/Geometry.cpp
+++ b/src/Mod/TechDraw/App/Geometry.cpp
@@ -1448,14 +1448,14 @@ void Vertex::Restore(Base::XMLReader &reader)
 void Vertex::createNewTag()
 {
     // Initialize a random number generator, to avoid Valgrind false positives.
-    static boost::mt19937 ran;
+    static std::mt19937 ran;
     static bool seeded = false;
 
     if (!seeded) {
         ran.seed(static_cast<unsigned int>(std::time(nullptr)));
         seeded = true;
     }
-    static boost::uuids::basic_random_generator<boost::mt19937> gen(&ran);
+    static boost::uuids::basic_random_generator<std::mt19937> gen(&ran);
 
     tag = gen();
 }
diff --git a/src/Gui/PreferencePackManager.cpp b/src/Gui/PreferencePackManager.cpp
index ed6f75d464..bce3887b44 100644
--- a/src/Gui/PreferencePackManager.cpp
+++ b/src/Gui/PreferencePackManager.cpp
@@ -221,7 +221,7 @@ void Gui::PreferencePackManager::importConfig(const std::string& packName,
     auto savedPreferencePacksDirectory =
         fs::path(App::Application::getUserAppDataDir()) / "SavedPreferencePacks";
     auto cfgFilename = savedPreferencePacksDirectory / packName / (packName + ".cfg");
-    fs::copy_file(path, cfgFilename, fs::copy_option::overwrite_if_exists);
+    fs::copy_file(path, cfgFilename, fs::copy_options::overwrite_existing);
     rescan();
 }
 
