From d2b130f9c87027e42f5af07e1c724a90f5da7503 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 25 Mar 2025 01:02:35 +0100
Subject: [PATCH] Set preferred color scheme later

GTK 4.18 no longer allow to create displays before GDK has been initialized.
Therefore the style manager cannot be initialized before that, as it causing an abort.

See details: https://gitlab.gnome.org/GNOME/gtk/-/merge_requests/7836
---
 src/CommitEditor.js | 6 +++---
 src/application.js  | 5 ++---
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/src/CommitEditor.js b/src/CommitEditor.js
index 5ef6543..b738b92 100644
--- a/src/CommitEditor.js
+++ b/src/CommitEditor.js
@@ -11,7 +11,6 @@ import "./language-specs/git.lang";
 import "./language-specs/hg.lang";
 
 const scheme_manager = GtkSource.StyleSchemeManager.get_default();
-const style_manager = Adw.StyleManager.get_default();
 const language_manager = GtkSource.LanguageManager.get_default();
 language_manager.set_search_path([
   ...language_manager.get_search_path(),
@@ -55,8 +54,9 @@ export default GObject.registerClass(
 
       this.buffer.set_language(language_manager.get_language(this.language));
 
+      this.style_manager = Adw.StyleManager.get_default();
       this.update_style();
-      style_manager.connect("notify::dark", this.update_style.bind(this));
+      this.style_manager.connect("notify::dark", this.update_style.bind(this));
 
       const checker = Spelling.Checker.get_default();
       const adapter = Spelling.TextBufferAdapter.new(this.buffer, checker);
@@ -88,7 +88,7 @@ export default GObject.registerClass(
     }
 
     update_style() {
-      const scheme = style_manager.dark ? "Adwaita-dark" : "Adwaita";
+      const scheme = this.style_manager.dark ? "Adwaita-dark" : "Adwaita";
       const style_scheme = scheme_manager.get_scheme(scheme);
       this.buffer.set_style_scheme(style_scheme);
     }
diff --git a/src/application.js b/src/application.js
index 5c3d9d8..92ad4b3 100644
--- a/src/application.js
+++ b/src/application.js
@@ -13,8 +13,6 @@ import { settings } from "./settings.js";
 
 const textDecoder = new TextDecoder();
 
-const style_manager = Adw.StyleManager.get_default();
-
 export default function Application() {
   const application = new Adw.Application({
     application_id: "re.sonny.Commit",
@@ -61,6 +59,7 @@ export default function Application() {
 
   application.connect("startup", () => {
     console.debug("startup");
+    setColorScheme();
   });
 
   application.connect("activate", () => {
@@ -140,8 +139,8 @@ function openEditor({ file, application, readonly }) {
 }
 
 function setColorScheme() {
+  const style_manager = Adw.StyleManager.get_default();
   const color_scheme = settings.get_int("color-scheme");
   style_manager.set_color_scheme(color_scheme);
 }
-setColorScheme();
 settings.connect("changed::color-scheme", setColorScheme);
