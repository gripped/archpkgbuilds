From 5120ad6687b899e1781dd53edca01cbb5946efa4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 25 Mar 2025 00:33:56 +0100
Subject: [PATCH] theme-selector: Initialize style manager inside constructor

GTK 4.18 no longer allow to create displays before GDK has been initialized.
Therefore the style manager cannot be initialized outside of the class,
otherwise it gets called before GDK is initialized, causing an abort.

See details: https://gitlab.gnome.org/GNOME/gtk/-/merge_requests/7836
---
 src/widgets/ThemeSelector.js | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/widgets/ThemeSelector.js b/src/widgets/ThemeSelector.js
index 956d06f..7ec8bcf 100644
--- a/src/widgets/ThemeSelector.js
+++ b/src/widgets/ThemeSelector.js
@@ -6,23 +6,23 @@ import Gdk from "gi://Gdk";
 import Template from "./ThemeSelector.blp" with { type: "uri" };
 import Style from "./ThemeSelector.css";
 
-const style_manager = Adw.StyleManager.get_default();
 let provider;
 
 class ThemeSelector extends Adw.Bin {
   constructor(params = {}) {
     super(params);
 
-    style_manager.connect(
+    this.style_manager = Adw.StyleManager.get_default();
+    this.style_manager.connect(
       "notify::system-supports-color-schemes",
       this._on_notify_system_supports_color_schemes.bind(this),
     );
     this._on_notify_system_supports_color_schemes();
 
-    const dark = style_manager.get_dark();
+    const dark = this.style_manager.get_dark();
     this.theme = dark ? "dark" : "light";
 
-    style_manager.connect("notify::dark", this._on_notify_dark.bind(this));
+    this.style_manager.connect("notify::dark", this._on_notify_dark.bind(this));
     this._on_notify_dark();
 
     if (!provider) {
@@ -37,11 +37,11 @@ class ThemeSelector extends Adw.Bin {
   }
 
   _on_notify_system_supports_color_schemes() {
-    this._follow.set_visible(style_manager.get_system_supports_color_schemes());
+    this._follow.set_visible(this.style_manager.get_system_supports_color_schemes());
   }
 
   _on_notify_dark() {
-    if (style_manager.get_dark()) this.add_css_class("dark");
+    if (this.style_manager.get_dark()) this.add_css_class("dark");
     else this.remove_css_class("dark");
   }
 }
