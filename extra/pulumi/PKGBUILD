# Maintainer: Andrew Crerar <crerar@archlinux.org>
# Maintainer: Christian Rebischke <chris.rebischke@archlinux.org>
# Contributor: Christoph Gysin <christoph.gysin@gmail.com>

pkgname=pulumi
pkgver=3.72.2
pkgrel=1
pkgdesc='Modern Infrastructure as Code'
arch=('x86_64')
url="https://github.com/$pkgname/$pkgname"
license=('Apache')
depends=('glibc')
makedepends=('go')
source=("$pkgname-$pkgver.tar.gz::$url/archive/v$pkgver.tar.gz")
b2sums=('19d55642142e7235efee1f3c8ef17772d30f4a285c5b7ed61517e58d2f7fada76407dead6ee27f2a7c0aaabd7e591c8fb648cf5f9a6ecf1bac5e4cc8748f021d')
options=('!lto') # disable as soon as LTO problems are resolved

_plugin_dirs=(
  "python/cmd/pulumi-language-python"
  "nodejs/cmd/pulumi-language-nodejs"
  "go/pulumi-language-go"
)

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -mod=readonly -modcacherw"

  # Build the `pulumi` executable
  cd "${srcdir}/${pkgname}-${pkgver}/pkg"
  go build \
    -ldflags "-X github.com/pulumi/pulumi/pkg/v${pkgver%%.*}/version.Version=${pkgver} -extldflags ${LDFLAGS}" \
    -o "${srcdir}/${pkgname}-${pkgver}/bin/${pkgname}" \
    "./cmd/${pkgname}" \

  # Build the plugins
  cd "${srcdir}/${pkgname}-${pkgver}/sdk"
  for plugin_dir in "${_plugin_dirs[@]}"; do
    plugin_name="${plugin_dir##*/}"
    cwd="${PWD}"
    cd "${plugin_dir}"

    go build \
      -ldflags "-X github.com/pulumi/pulumi/sdk/v${pkgver%%.*}/version.Version=${pkgver} -extldflags ${LDFLAGS}" \
      -o "${srcdir}/${pkgname}-${pkgver}/bin/${plugin_name}" \
      .

    # Add possible executor
    cd ..
    if [ -f "${plugin_name}-exec" ]; then
      cp "${plugin_name}-exec" "${srcdir}/${pkgname}-${pkgver}/bin/"
    fi
    cd "${cwd}"
  done
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  # Install all executables
  for f in ./bin/*; do
    install -D -m 755 "$f" "${pkgdir}/usr/bin/$(basename $f)"
  done

  # Generate Bash completion
  install -D -m 644 \
    <("${pkgdir}/usr/bin/${pkgname}" gen-completion bash) \
    "${pkgdir}/etc/bash_completion.d/${pkgname}"

  # Generate ZSH completion
  install -D -m 644 \
    <("${pkgdir}/usr/bin/${pkgname}" gen-completion zsh) \
    "${pkgdir}/usr/share/zsh/site-functions/_${pkgname}"
}

# vim:set ts=2 sw=2 et:
