# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: malacology <guoyizhang at malacology dot net>
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>

pkgname=gotosocial
pkgver=0.19.0
pkgrel=1
pkgdesc='ActivityPub social network server written in Golang'
arch=('x86_64')
url='https://gotosocial.org'
license=('AGPL-3.0-only')
depends=('glibc')
makedepends=('git' 'go' 'yarn' 'nodejs' 'go-swagger')
options=('!lto')
backup=(
  'etc/gotosocial/config.yaml'
  'etc/gotosocial/template/2fa.tmpl'
  'etc/gotosocial/template/404.tmpl'
  'etc/gotosocial/template/about.tmpl'
  'etc/gotosocial/template/authorize.tmpl'
  'etc/gotosocial/template/confirm-email.tmpl'
  'etc/gotosocial/template/confirmed-email.tmpl'
  'etc/gotosocial/template/domain-blocklist.tmpl'
  'etc/gotosocial/template/email_confirm.tmpl'
  'etc/gotosocial/template/email_new_report.tmpl'
  'etc/gotosocial/template/email_new_signup.tmpl'
  'etc/gotosocial/template/email_report_closed.tmpl'
  'etc/gotosocial/template/email_reset.tmpl'
  'etc/gotosocial/template/email_signup_approved.tmpl'
  'etc/gotosocial/template/email_signup_rejected.tmpl'
  'etc/gotosocial/template/email_test.tmpl'
  'etc/gotosocial/template/error.tmpl'
  'etc/gotosocial/template/finalize.tmpl'
  'etc/gotosocial/template/index.tmpl'
  'etc/gotosocial/template/index_register.tmpl'
  'etc/gotosocial/template/index_what_is_this.tmpl'
  'etc/gotosocial/template/login-info.tmpl'
  'etc/gotosocial/template/login_button.tmpl'
  'etc/gotosocial/template/maintenance.tmpl'
  'etc/gotosocial/template/oob.tmpl'
  'etc/gotosocial/template/page.tmpl'
  'etc/gotosocial/template/page_footer.tmpl'
  'etc/gotosocial/template/page_header.tmpl'
  'etc/gotosocial/template/page_ogmeta.tmpl'
  'etc/gotosocial/template/page_stylesheets.tmpl'
  'etc/gotosocial/template/profile-gallery.tmpl'
  'etc/gotosocial/template/profile.tmpl'
  'etc/gotosocial/template/profile_about_user.tmpl'
  'etc/gotosocial/template/profile_fields.tmpl'
  'etc/gotosocial/template/profile_header.tmpl'
  'etc/gotosocial/template/settings.tmpl'
  'etc/gotosocial/template/sign-in.tmpl'
  'etc/gotosocial/template/sign-up.tmpl'
  'etc/gotosocial/template/signed-up.tmpl'
  'etc/gotosocial/template/status.tmpl'
  'etc/gotosocial/template/status_attachment.tmpl'
  'etc/gotosocial/template/status_attributes.tmpl'
  'etc/gotosocial/template/status_header.tmpl'
  'etc/gotosocial/template/status_info.tmpl'
  'etc/gotosocial/template/status_poll.tmpl'
  'etc/gotosocial/template/tag.tmpl'
  'etc/gotosocial/template/thread.tmpl'
)
source=(
  "$pkgname::git+https://github.com/superseriousbusiness/gotosocial#tag=v$pkgver"
  'sysusers.conf'
  'tmpfiles.conf'
  'use-fhs-directories.patch'
)
sha512sums=('101c379356645b0a636ecb5917f225786e46d774337f3df474d23bbb0d7b2a914cb080ae23a65085230fca94147bf6c4567d9eb27260f97fae53cfa20ab4a898'
            '2ff5499a31e12733cb20a9261942ed135fbac327d5a836b8955f3e86c009a603cf965440d9dbe6db64b80d0f652ba56faddb0ef398393b72474d8cf6c438ab80'
            'b89fad3073e140f17167515b38942e5b5e2bc2aee03c484e1bb7cf6444f86cb1e2a13a60b101e04d22633d348be073ca26cd309da4746e5062c12b4f3ce4b38a'
            '913a5209487aba06bf1d8ac7c02506a05d01a8e12f172666c84bf6870d6237640d4745617b0f07ea8c9dcf665f4e0d24a0aabef31611909f7e9384ed6e7b7e77')
b2sums=('61a5b085b49cb196be4e6d77ba61cc06d578b89970953a09626f553441a522ba7e4b1f58ab60e6169cbb33bc9757d3a811c0fc2de7a48faf4bc005b82cf720f8'
        'ccf672731b88fc6700b0b81737790365e1eea0066bad1bbf6b13dac1e5b42af69063838efca47a6d9c16ee3f6308e2e23b92cf79d4226cd88f8551fb7361649b'
        '4f65af952441c0f54bb32049a149675e207f8993678423d369c4095c57476464614ac720eccc64d7a93a81268ad7ca41cae75ca7211bd7b78f9035f6e5341f04'
        '9edd4520fb99856feb82d01935588add7f805aa180f2ed0fe169cb26576bc2e1d2c1e6ab11604d977cec6a4ad8f1d5be1413e1a366de59b89c5b869136538f8c')

prepare() {
  cd "$pkgname"

  # create directory for build output
  mkdir build

  # download dependencies
  export GOPATH="${srcdir}"
  go mod download

  # use FHS directories
  patch -p1 -i "$srcdir/use-fhs-directories.patch"
}

build() {
  cd "$pkgname"

  # set Go flags
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export GOPATH="${srcdir}"

  # generate up-to-date swagger.yaml
  swagger generate spec --scan-models --exclude-deps -o web/assets/swagger.yaml
  sed -e "s/REPLACE_ME/$pkgver/" -i web/assets/swagger.yaml

  go build -v \
    -buildmode=pie \
    -mod=readonly \
    -modcacherw \
    -ldflags "-compressdwarf=false \
    -linkmode external \
    -extldflags '${LDFLAGS}' \
    -X main.Version=$pkgver" \
    -o build \
    ./cmd/...

  # generate web assets
  yarn --cwd ./web/source install --frozen-lockfile
  yarn --cwd ./web/source ts-patch install
  yarn --cwd ./web/source build
}

package() {
  # systemd integration
  install -vDm644 sysusers.conf "$pkgdir/usr/lib/sysusers.d/$pkgname.conf"
  install -vDm644 tmpfiles.conf "$pkgdir/usr/lib/tmpfiles.d/$pkgname.conf"
  install -vDm644 "$pkgname/example/$pkgname.service" -t "$pkgdir/usr/lib/systemd/system"

  cd "$pkgname"

  # binary
  install -vDm755 -t "$pkgdir/usr/bin" "build/$pkgname"

  # configuration
  install -vDm640 -t "$pkgdir/etc/$pkgname" example/config.yaml

  # web frontend
  install -vd "$pkgdir/usr/share/$pkgname"
  cp -vr web/assets/* "$pkgdir/usr/share/$pkgname"
  cp -vr web/template "$pkgdir/etc/$pkgname"
}
