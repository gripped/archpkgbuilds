# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: tuxbubling <tuxbubling@jabber.fr>

pkgname=cacti
pkgver=1.2.30
pkgrel=2
pkgdesc="Network graphing solution using RRDTool"
arch=(any)
url="https://www.cacti.net"
_url="https://github.com/Cacti/cacti"
license=(
  0BSD
  GPL-2.0-or-later
)
depends=(
  php
  php-gd
  php-snmp
  rrdtool
  ttf-dejavu
)
optdepends=(
  'mariadb: use local MySQL server'
  'perl: for scripts'
  'php-fpm: run in fastCGI process manager'
  'uwsgi-plugin-php: run as local application container'
)
backup=(
  etc/webapps/cacti/.htaccess
  etc/webapps/cacti/config.php
)
source=(
  $pkgname-$pkgver.tar.gz::$_url/archive/refs/tags/release/$pkgver.tar.gz
  $pkgname.uwsgi
  $pkgname.sysusers
  $pkgname.tmpfiles
  LICENSE
)
install=$pkgname.install
sha512sums=('e0e147df4d2bd863c03bac486309fb7c307e4cce5171207325c460b74a97d027bdcc011eead0eb5bd456c37b08f5135bbaca6a21f87c8c7df2e9f551a3d26c96'
            'ba421785a3a86535dba210b5ac34ad059fac72b809a9027308d047a967de43aa204eda56e129b28f6400859427de123734b338c5d8cd3da1944893fa3ef33e48'
            'bc823237a9b744516dd2b18ce68bba214fff9e8c48dee28262b2112da9ff23060f3e47f55809c0e7aa14eb02821431d8fd92011d4bfabffd081e8d3bf4f501ff'
            'e833e411f74e77773c32589ba83cb1b2f28ca9b35931626480ab7daa63420d47ecfc3061e6703323646b69e1d98536b6f3afdd36faa483fb13aac9b818af0c6e'
            'a33658d9271e5c537ccd41bf540b463ad2a5eca4a060c80486ff42a736f0aa042d10436e7177c34d792177cb11285243dee1f31c4df54fb0bfaabbc306406930')
b2sums=('3c62c1ebf3e403e05e90433723a8dd7482566d522ffc7904f1421a1c56b363a53c5c0459e944964b87ce5851a26307528a963710bb5e9b7a49a46ad5e8a3b335'
        '880cfc1a87abd95a624ffef6f1ae5ac416b4020ae40edc32355314bb33b5003b21ab8ed082b520d70b166739a1b056339cca7b6a6bb82167c14925ae3ca0d34f'
        '24256c05d935a7fa5e82b5b527021a1bf30e224336c38ed69b3e3832eebead12540431ba1a9cc8bdafdc662cf7964f00db70d7ed4da022fe29c5d64f4f3a39fe'
        '0a532bbbd07b21da18ea21eec3f268510740069fb732e3d387f224b93f0539e3e968ba6332bf647ff62f2d98910abc33e35a3e82d335cf7d29a503609e22651f'
        'a29664104e1ee73ca0aee1d633e9095d92a57c92787f8d8740bdb7211ba3205782ed8677f539bdb8cae3dd75a3694be3132e185fa3fc4b3f401e1f88eb776101')

prepare() {
  # adding default .htaccess
  echo "Require all denied" > $pkgname-htaccess

  cd $pkgname-release-$pkgver
  # setting correct install path for spine
  sed -e 's|/usr/local/spine/bin/spine|/usr/bin/spine|g' -i install/functions.php
  # setting correct path for dejavu font
  sed -e 's|/usr/share/fonts/dejavu/|/usr/share/fonts/TTF/|g' -i lib/rrd.php
  # remove unneeded executable bits
  find . -executable -type f -and -not -path "*scripts*" -exec chmod -c 644 {} \;
}

package() {
  cd $pkgname-release-$pkgver

  # install webapp dir
  install -vdm 755 "$pkgdir/usr/share/webapps/$pkgname/include/"
  # config
  install -vDm 640 include/config.php.dist "$pkgdir/etc/webapps/$pkgname/config.php"
  install -vDm 644 ../$pkgname-htaccess "$pkgdir/etc/webapps/$pkgname/.htaccess"
  ln -sv /etc/webapps/$pkgname/.htaccess "$pkgdir/usr/share/webapps/$pkgname/.htaccess"
  ln -sv /etc/webapps/$pkgname/config.php "$pkgdir/usr/share/webapps/$pkgname/include/config.php"
  # state
  install -vdm 750 "$pkgdir/var/lib/$pkgname/"
  install -vDm 644 rra/.htaccess -t "$pkgdir/var/lib/$pkgname/rra/"
  ln -sv /var/lib/$pkgname/rra "$pkgdir/usr/share/webapps/$pkgname/rra"
  install -vDm 644 resource/index.php -t "$pkgdir/var/lib/$pkgname/resource/"
  install -vDm 644 resource/snmp_queries/*.{php,xml} -t "$pkgdir/var/lib/$pkgname/resource/snmp_queries/"
  install -vDm 644 resource/script_server/*.{php,xml} -t "$pkgdir/var/lib/$pkgname/resource/script_server/"
  install -vDm 644 resource/script_queries/*.{php,xml} -t "$pkgdir/var/lib/$pkgname/resource/script_queries/"
  ln -sv /var/lib/$pkgname/resource "$pkgdir/usr/share/webapps/$pkgname/resource"
  install -vDm 644 scripts/*.{php,pl,sh} -t "$pkgdir/var/lib/$pkgname/scripts/"
  ln -sv /var/lib/$pkgname/scripts "$pkgdir/usr/share/webapps/$pkgname/scripts"
  # NOTE: add symlinks required for scripts
  ln -sv /usr/share/webapps/$pkgname/lib "$pkgdir/var/lib/$pkgname/"
  ln -sv /usr/share/webapps/$pkgname/include "$pkgdir/var/lib/$pkgname/"
  # cache
  install -vdm 750 "$pkgdir/var/cache/$pkgname/"
  install -vDm 644 cache/boost/*.php -t "$pkgdir/var/cache/$pkgname/boost/"
  install -vDm 644 cache/mibcache/*.php -t "$pkgdir/var/cache/$pkgname/mibcache/"
  install -vDm 644 cache/realtime/*.php -t "$pkgdir/var/cache/$pkgname/realtime/"
  install -vDm 644 cache/spikekill/*.php -t "$pkgdir/var/cache/$pkgname/spikekill/"
  ln -sv /var/cache/$pkgname "$pkgdir/usr/share/webapps/$pkgname/cache"
  # log
  install -vdm 750 "$pkgdir/var/log/$pkgname"
  install -vDm 644 log/.htaccess -t "$pkgdir/var/log/$pkgname"
  ln -sv /var/log/$pkgname "$pkgdir/usr/share/webapps/$pkgname/log"
  # docs
  install -vDm 644 {CHANGELOG,README.md} -t "$pkgdir/usr/share/doc/$pkgname/"
  # tmpfiles.d
  install -vDm 644 ../$pkgname.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/$pkgname.conf"
  # sysusers.d
  install -vDm 644 ../$pkgname.sysusers "$pkgdir/usr/lib/sysusers.d/$pkgname.conf"
  # uwsgi config
  install -vDm 644 ../$pkgname.uwsgi "$pkgdir/etc/uwsgi/$pkgname.ini"
  install -vDm 644 ../LICENSE "$pkgdir/usr/share/licenses/$pkgname/0BSD.txt"

  # remove already installed files/folder so that they are not installed again
  rm -frv include/config.php.dist rra/ resource/ scripts/ cache/ log/ {CHANGELOG,README.md}
  # webapp
  find . -type f -exec install -vDm 644 {} "$pkgdir/usr/share/webapps/$pkgname/"{} \;
}
