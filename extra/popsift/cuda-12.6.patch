diff --git a/src/application/main.cpp b/src/application/main.cpp
index 0eec1c2..fe3e620 100755
--- a/src/application/main.cpp
+++ b/src/application/main.cpp
@@ -33,8 +33,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 using namespace std;
@@ -183,7 +181,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
             exit( -1 );
         }
 
-        nvtxRangePushA( "load and convert image - devil" );
 
         ilImage img;
         if( img.Load( inputFile.c_str() ) == false ) {
@@ -200,7 +197,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
 
         image_data = img.GetData();
 
-        nvtxRangePop( ); // "load and convert image - devil"
 
         job = PopSift.enqueue( w, h, image_data );
 
@@ -209,7 +205,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
     else
 #endif
     {
-        nvtxRangePushA( "load and convert image - pgmread" );
         int w{};
         int h{};
         image_data = readPGMfile( inputFile, w, h );
@@ -217,7 +212,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
             exit( EXIT_FAILURE );
         }
 
-        nvtxRangePop( ); // "load and convert image - pgmread"
 
         if( ! float_mode )
         {
@@ -251,7 +245,6 @@ void read_job( SiftJob* job, bool really_write )
          << endl;
 
     if( really_write ) {
-        nvtxRangePushA( "Writing features to disk" );
 
         std::ofstream of( "output-features.txt" );
         feature_list->print( of, write_as_uchar );
@@ -259,7 +252,6 @@ void read_job( SiftJob* job, bool really_write )
     delete feature_list;
 
     if( really_write ) {
-        nvtxRangePop( ); // Writing features to disk
     }
 }
 
diff --git a/src/application/match.cpp b/src/application/match.cpp
index 852d9b6..884ae93 100755
--- a/src/application/match.cpp
+++ b/src/application/match.cpp
@@ -33,8 +33,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 using namespace std;
@@ -171,7 +169,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
     unsigned char* image_data;
     SiftJob* job;
 
-    nvtxRangePushA( "load and convert image" );
 #ifdef USE_DEVIL
     if( ! pgmread_loading )
     {
@@ -189,7 +186,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
         cout << "Loading " << w << " x " << h << " image " << inputFile << endl;
         image_data = img.GetData();
 
-        nvtxRangePop( );
 
         // PopSift.init( w, h );
         job = PopSift.enqueue( w, h, image_data );
@@ -206,7 +202,6 @@ SiftJob* process_image( const string& inputFile, PopSift& PopSift )
             exit( EXIT_FAILURE );
         }
 
-        nvtxRangePop( );
 
         // PopSift.init( w, h );
         job = PopSift.enqueue( w, h, image_data );
diff --git a/src/popsift/s_filtergrid.cu b/src/popsift/s_filtergrid.cu
index a766c2d..a9c28bb 100644
--- a/src/popsift/s_filtergrid.cu
+++ b/src/popsift/s_filtergrid.cu
@@ -12,8 +12,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 #if ! POPSIFT_IS_DEFINED(POPSIFT_DISABLE_GRID_FILTER)
@@ -317,9 +315,7 @@ int Pyramid::extrema_filter_grid( const Config& conf, int ext_total )
         }
     }
 
-    nvtxRangePushA( "writing back count" );
     writeDescCountersToDevice( );
-    nvtxRangePop( );
 
     return ret_ext_total;
 }
diff --git a/src/popsift/s_image.cu b/src/popsift/s_image.cu
index f26b8e3..85d05be 100755
--- a/src/popsift/s_image.cu
+++ b/src/popsift/s_image.cu
@@ -18,8 +18,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 using namespace std;
@@ -98,7 +96,6 @@ void Image::resetDimensions( int w, int h )
         destroyTexture( );
         createTexture( );
     } else {
-        nvtxRangePushA( "reallocating host-side image memory" );
 
         _max_w = max( w, _max_w );
         _max_h = max( h, _max_h );
@@ -112,20 +109,17 @@ void Image::resetDimensions( int w, int h )
         destroyTexture( );
         createTexture( );
 
-        nvtxRangePop(); // "reallocating host-side image memory"
     }
 }
 
 void Image::allocate( int w, int h )
 {
-    nvtxRangePushA( "allocating host-side image memory" );
 
     _input_image_h.allocHost( w, h, popsift::CudaAllocated );
     _input_image_d.allocDev( w, h );
 
     createTexture( );
 
-    nvtxRangePop(); // "allocating host-side image memory"
 }
 
 void Image::destroyTexture( )
@@ -222,7 +216,6 @@ void ImageFloat::resetDimensions( int w, int h )
         destroyTexture( );
         createTexture( );
     } else {
-        nvtxRangePushA( "reallocating host-side image memory" );
 
         _max_w = max( w, _max_w );
         _max_h = max( h, _max_h );
@@ -236,20 +229,17 @@ void ImageFloat::resetDimensions( int w, int h )
         destroyTexture( );
         createTexture( );
 
-        nvtxRangePop(); // "reallocating host-side image memory"
     }
 }
 
 void ImageFloat::allocate( int w, int h )
 {
-    nvtxRangePushA( "allocating host-side image memory" );
 
     _input_image_h.allocHost( w, h, popsift::CudaAllocated );
     _input_image_d.allocDev( w, h );
 
     createTexture( );
 
-    nvtxRangePop(); // "allocating host-side image memory"
 }
 
 void ImageFloat::destroyTexture( )
diff --git a/src/popsift/s_orientation.cu b/src/popsift/s_orientation.cu
index f6b36fc..f7a1283 100644
--- a/src/popsift/s_orientation.cu
+++ b/src/popsift/s_orientation.cu
@@ -21,8 +21,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 using namespace popsift;
diff --git a/src/popsift/sift_desc.cu b/src/popsift/sift_desc.cu
index b0eb0bd..1ee46c9 100644
--- a/src/popsift/sift_desc.cu
+++ b/src/popsift/sift_desc.cu
@@ -24,8 +24,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 using namespace popsift;
@@ -55,11 +53,9 @@ using namespace std;
 __host__
 void Pyramid::descriptors( const Config& conf )
 {
-   nvtxRangePushA("Reading orientation count");
 
    readDescCountersFromDevice( _octaves[0].getStream() );
    cudaStreamSynchronize( _octaves[0].getStream() );
-   nvtxRangePop( );
 
     for( int octave=_num_octaves-1; octave>=0; octave-- )
     // for( int octave=0; octave<_num_octaves; octave++ )
diff --git a/src/popsift/sift_pyramid.cu b/src/popsift/sift_pyramid.cu
index 0606005..7f17673 100644
--- a/src/popsift/sift_pyramid.cu
+++ b/src/popsift/sift_pyramid.cu
@@ -28,8 +28,6 @@
 #if POPSIFT_IS_DEFINED(POPSIFT_USE_NVTX)
 #include <nvToolsExtCuda.h>
 #else
-#define nvtxRangePushA(a)
-#define nvtxRangePop()
 #endif
 
 #define PYRAMID_PRINT_DEBUG 0
@@ -285,12 +283,10 @@ FeaturesHost* Pyramid::get_descriptors( const Config& conf )
 
     readDescCountersFromDevice();
 
-    nvtxRangePushA( "download descriptors" );
     FeaturesHost* features = new FeaturesHost( hct.ext_total, hct.ori_total );
 
     if( hct.ext_total == 0 || hct.ori_total == 0 )
     {
-        nvtxRangePop();
         return features;
     }
 
@@ -298,9 +294,7 @@ FeaturesHost* Pyramid::get_descriptors( const Config& conf )
     prep_features<<<grid,32,0,_download_stream>>>( features->getDescriptors(), up_fac );
     POP_SYNC_CHK;
 
-    nvtxRangePushA( "register host memory" );
     features->pin( );
-    nvtxRangePop();
     popcuda_memcpy_async( features->getFeatures(),
                           dobuf_shadow.features,
                           hct.ext_total * sizeof(Feature),
@@ -313,10 +307,7 @@ FeaturesHost* Pyramid::get_descriptors( const Config& conf )
                           cudaMemcpyDeviceToHost,
                           _download_stream );
     cudaStreamSynchronize( _download_stream );
-    nvtxRangePushA( "unregister host memory" );
     features->unpin( );
-    nvtxRangePop();
-    nvtxRangePop();
 
     return features;
 }
