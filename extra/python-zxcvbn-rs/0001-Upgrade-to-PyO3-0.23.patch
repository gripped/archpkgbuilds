From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <heftig@archlinux.org>
Date: Tue, 26 Nov 2024 23:45:35 +0100
Subject: [PATCH] Upgrade to PyO3 0.23

---
 Cargo.lock | 122 ++++++++++++++---------------------------------------
 Cargo.toml |   2 +-
 src/lib.rs |  42 ++++++++----------
 3 files changed, 50 insertions(+), 116 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index ceb2f4c380d5..c9902ae821f8 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -47,23 +47,17 @@ version = "0.6.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"
 
-[[package]]
-name = "bitflags"
-version = "2.6.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de"
-
 [[package]]
 name = "bumpalo"
 version = "3.16.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c"
 
 [[package]]
 name = "cc"
-version = "1.1.33"
+version = "1.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3788d6ac30243803df38a3e9991cf37e41210232916d41a8222ae378f912624"
+checksum = "fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47"
 dependencies = [
  "shlex",
 ]
@@ -194,9 +188,9 @@ checksum = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"
 
 [[package]]
 name = "heck"
-version = "0.4.1"
+version = "0.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8"
+checksum = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea"
 
 [[package]]
 name = "iana-time-zone"
@@ -259,19 +253,9 @@ checksum = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe"
 
 [[package]]
 name = "libc"
-version = "0.2.161"
+version = "0.2.164"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e9489c2807c139ffd9c1794f4af0ebe86a828db53ecdc7fea2111d0fed085d1"
-
-[[package]]
-name = "lock_api"
-version = "0.4.12"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17"
-dependencies = [
- "autocfg",
- "scopeguard",
-]
+checksum = "433bfe06b8c75da9b2e3fbea6e5329ff87748f0b144ef75306e674c3f6f7c13f"
 
 [[package]]
 name = "log"
@@ -315,209 +299,165 @@ version = "1.20.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775"
 
-[[package]]
-name = "parking_lot"
-version = "0.12.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27"
-dependencies = [
- "lock_api",
- "parking_lot_core",
-]
-
-[[package]]
-name = "parking_lot_core"
-version = "0.9.10"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8"
-dependencies = [
- "cfg-if",
- "libc",
- "redox_syscall",
- "smallvec",
- "windows-targets",
-]
-
 [[package]]
 name = "portable-atomic"
-version = "1.9.0"
+version = "1.10.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "cc9c68a3f6da06753e9335d63e27f6b9754dd1920d941135b7ea8224f141adb2"
+checksum = "280dc24453071f1b63954171985a0b0d30058d287960968b9b2aca264c8d4ee6"
 
 [[package]]
 name = "powerfmt"
 version = "0.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"
 
 [[package]]
 name = "proc-macro2"
-version = "1.0.89"
+version = "1.0.92"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e"
+checksum = "37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0"
 dependencies = [
  "unicode-ident",
 ]
 
 [[package]]
 name = "pyo3"
-version = "0.21.2"
+version = "0.23.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a5e00b96a521718e08e03b1a622f01c8a8deb50719335de3f60b3b3950f069d8"
+checksum = "f54b3d09cbdd1f8c20650b28e7b09e338881482f4aa908a5f61a00c98fba2690"
 dependencies = [
  "cfg-if",
  "indoc",
  "libc",
  "memoffset",
- "parking_lot",
+ "once_cell",
  "portable-atomic",
  "pyo3-build-config",
  "pyo3-ffi",
  "pyo3-macros",
  "unindent",
 ]
 
 [[package]]
 name = "pyo3-build-config"
-version = "0.21.2"
+version = "0.23.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7883df5835fafdad87c0d888b266c8ec0f4c9ca48a5bed6bbb592e8dedee1b50"
+checksum = "3015cf985888fe66cfb63ce0e321c603706cd541b7aec7ddd35c281390af45d8"
 dependencies = [
  "once_cell",
  "target-lexicon",
 ]
 
 [[package]]
 name = "pyo3-ffi"
-version = "0.21.2"
+version = "0.23.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "01be5843dc60b916ab4dad1dca6d20b9b4e6ddc8e15f50c47fe6d85f1fb97403"
+checksum = "6fca7cd8fd809b5ac4eefb89c1f98f7a7651d3739dfb341ca6980090f554c270"
 dependencies = [
  "libc",
  "pyo3-build-config",
 ]
 
 [[package]]
 name = "pyo3-macros"
-version = "0.21.2"
+version = "0.23.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "77b34069fc0682e11b31dbd10321cbf94808394c56fd996796ce45217dfac53c"
+checksum = "34e657fa5379a79151b6ff5328d9216a84f55dc93b17b08e7c3609a969b73aa0"
 dependencies = [
  "proc-macro2",
  "pyo3-macros-backend",
  "quote",
  "syn",
 ]
 
 [[package]]
 name = "pyo3-macros-backend"
-version = "0.21.2"
+version = "0.23.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "08260721f32db5e1a5beae69a55553f56b99bd0e1c3e6e0a5e8851a9d0f5a85c"
+checksum = "295548d5ffd95fd1981d2d3cf4458831b21d60af046b729b6fd143b0ba7aee2f"
 dependencies = [
  "heck",
  "proc-macro2",
  "pyo3-build-config",
  "quote",
  "syn",
 ]
 
 [[package]]
 name = "quote"
 version = "1.0.37"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af"
 dependencies = [
  "proc-macro2",
 ]
 
-[[package]]
-name = "redox_syscall"
-version = "0.5.7"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f"
-dependencies = [
- "bitflags",
-]
-
 [[package]]
 name = "regex"
 version = "1.11.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191"
 dependencies = [
  "aho-corasick",
  "memchr",
  "regex-automata",
  "regex-syntax",
 ]
 
 [[package]]
 name = "regex-automata"
-version = "0.4.8"
+version = "0.4.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3"
+checksum = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908"
 dependencies = [
  "aho-corasick",
  "memchr",
  "regex-syntax",
 ]
 
 [[package]]
 name = "regex-syntax"
 version = "0.8.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c"
 
-[[package]]
-name = "scopeguard"
-version = "1.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
-
 [[package]]
 name = "serde"
-version = "1.0.214"
+version = "1.0.215"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f55c3193aca71c12ad7890f1785d2b73e1b9f63a0bbc353c08ef26fe03fc56b5"
+checksum = "6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f"
 dependencies = [
  "serde_derive",
 ]
 
 [[package]]
 name = "serde_derive"
-version = "1.0.214"
+version = "1.0.215"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "de523f781f095e28fa605cdce0f8307e451cc0fd14e2eb4cd2e98a355b147766"
+checksum = "ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0"
 dependencies = [
  "proc-macro2",
  "quote",
  "syn",
 ]
 
 [[package]]
 name = "shlex"
 version = "1.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64"
 
-[[package]]
-name = "smallvec"
-version = "1.13.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"
-
 [[package]]
 name = "strsim"
 version = "0.11.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"
 
 [[package]]
 name = "syn"
-version = "2.0.86"
+version = "2.0.89"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e89275301d38033efb81a6e60e3497e734dfcc62571f2854bf4b16690398824c"
+checksum = "44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -551,9 +491,9 @@ checksum = "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"
 
 [[package]]
 name = "unicode-ident"
-version = "1.0.13"
+version = "1.0.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe"
+checksum = "adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83"
 
 [[package]]
 name = "unindent"
diff --git a/Cargo.toml b/Cargo.toml
index 512074374166..5176e8c7354e 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -9,5 +9,5 @@ name = "zxcvbn_rs_py"
 crate-type = ["cdylib"]
 
 [dependencies]
-pyo3 = "^0.21"
+pyo3 = "^0.23"
 zxcvbn = "3.1.0"
diff --git a/src/lib.rs b/src/lib.rs
index e79db1e7c42c..bce5007d5a98 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -4,40 +4,40 @@ use pyo3::exceptions::PyRuntimeError;
 use pyo3::prelude::*;
 use std::fmt;
 
-#[pyclass]
+#[pyclass(eq, eq_int)]
 #[pyo3(module = "zxcvbn_rs_py")]
-#[derive(Clone)]
+#[derive(Clone, PartialEq, Eq)]
 pub enum Score {
     /// Can be cracked with 10^3 guesses or less.
     ZERO = 0,
     /// Can be cracked with 10^6 guesses or less.
     ONE,
     /// Can be cracked with 10^8 guesses or less.
     TWO,
     /// Can be cracked with 10^10 guesses or less.
     THREE,
     /// Requires more than 10^10 guesses to crack.
     FOUR,
 }
 
 fn match_score(score: zxcvbn::Score) -> Result<Score, PyErr> {
     match score {
         zxcvbn::Score::Zero => Ok(Score::ZERO),
         zxcvbn::Score::One => Ok(Score::ONE),
         zxcvbn::Score::Two => Ok(Score::TWO),
         zxcvbn::Score::Three => Ok(Score::THREE),
         zxcvbn::Score::Four => Ok(Score::FOUR),
         _ => {
-            return Err(PyRuntimeError::new_err(
+            Err(PyRuntimeError::new_err(
                 "zxcvbn entropy score must be in the range 0-4",
             ))
         }
     }
 }
 
-#[pyclass]
+#[pyclass(eq, eq_int)]
 #[pyo3(module = "zxcvbn_rs_py")]
-#[derive(Clone)]
+#[derive(Clone, PartialEq, Eq)]
 enum Warning {
     StraightRowsOfKeysAreEasyToGuess,
     ShortKeyboardPatternsAreEasyToGuess,
@@ -96,7 +96,7 @@ impl fmt::Display for Warning {
 #[pymethods]
 impl Warning {
     fn __str__(&self) -> PyResult<String> {
-        return Ok(format!("{self}"));
+        Ok(format!("{self}"))
     }
 }
 
@@ -137,9 +137,9 @@ fn match_warning(warning: zxcvbn::feedback::Warning) -> Warning {
     }
 }
 
-#[pyclass]
+#[pyclass(eq, eq_int)]
 #[pyo3(module = "zxcvbn_rs_py")]
-#[derive(Clone)]
+#[derive(Clone, PartialEq, Eq)]
 enum Suggestion {
     UseAFewWordsAvoidCommonPhrases,
     NoNeedForSymbolsDigitsOrUppercaseLetters,
@@ -203,7 +203,7 @@ impl fmt::Display for Suggestion {
 #[pymethods]
 impl Suggestion {
     fn __str__(&self) -> PyResult<String> {
-        return Ok(format!("{self}"));
+        Ok(format!("{self}"))
     }
 }
 
@@ -284,10 +284,10 @@ struct CrackTimesDisplay {
 }
 
 fn crack_time_seconds_to_float(crack_time: zxcvbn::time_estimates::CrackTimeSeconds) -> f64 {
-    return match crack_time {
+    match crack_time {
         zxcvbn::time_estimates::CrackTimeSeconds::Integer(i) => i as f64,
         zxcvbn::time_estimates::CrackTimeSeconds::Float(f) => f,
-    };
+    }
 }
 
 #[pyclass]
@@ -327,61 +327,55 @@ struct Entropy {
 }
 
 #[pyfunction]
-#[pyo3(name = "zxcvbn")]
+#[pyo3(name = "zxcvbn", signature = (password, user_inputs=None))]
 fn zxcvbn_rs_py_fn(password: &str, user_inputs: Option<Vec<String>>) -> PyResult<Entropy> {
     let user_inputs_unwrapped = user_inputs.unwrap_or_default();
     let user_inputs_vec: Vec<&str> = user_inputs_unwrapped.iter().map(|s| s.as_str()).collect();
     let string_slice: &[&str] = &user_inputs_vec;
     let estimate = zxcvbn::zxcvbn(password, string_slice);
-    let feedback: Option<Feedback> = match estimate.feedback() {
-        None => None,
-        Some(f) => Some(Feedback {
-            warning: match f.warning() {
-                None => None,
-                Some(w) => Some(match_warning(w)),
-            },
+    let feedback: Option<Feedback> = estimate.feedback().map(|f| Feedback {
+            warning: f.warning().map(match_warning),
             suggestions: f
                 .suggestions()
                 .iter()
                 .map(|s| match_suggestion(*s))
                 .collect::<Vec<Suggestion>>()
                 .to_vec(),
-        }),
-    };
+        });
 
     let crack_times = estimate.crack_times();
     let online_throttling_100_per_hour = crack_times.online_throttling_100_per_hour();
     let online_no_throttling_10_per_second = crack_times.online_no_throttling_10_per_second();
     let offline_slow_hashing_1e4_per_second = crack_times.offline_slow_hashing_1e4_per_second();
     let offline_fast_hashing_1e10_per_second = crack_times.offline_fast_hashing_1e10_per_second();
 
-    return Ok(Entropy {
+    Ok(Entropy {
         guesses: estimate.guesses(),
         guesses_log10: estimate.guesses_log10(),
         crack_times_seconds: CrackTimesSeconds {
             online_throttling_100_per_hour: crack_time_seconds_to_float(
                 online_throttling_100_per_hour,
             ),
             online_no_throttling_10_per_second: crack_time_seconds_to_float(
                 online_no_throttling_10_per_second,
             ),
             offline_slow_hashing_1e4_per_second: crack_time_seconds_to_float(
                 offline_slow_hashing_1e4_per_second,
             ),
             offline_fast_hashing_1e10_per_second: crack_time_seconds_to_float(
                 offline_fast_hashing_1e10_per_second,
             ),
         },
         crack_times_display: CrackTimesDisplay {
             online_throttling_100_per_hour: format!("{online_throttling_100_per_hour}"),
             online_no_throttling_10_per_second: format!("{online_no_throttling_10_per_second}"),
             offline_slow_hashing_1e4_per_second: format!("{offline_slow_hashing_1e4_per_second}"),
             offline_fast_hashing_1e10_per_second: format!("{offline_fast_hashing_1e10_per_second}"),
         },
         score: match_score(estimate.score())?,
-        feedback: feedback,
+        feedback,
         calc_time: estimate.calculation_time().as_millis(),
-    });
+    })
 }
 
 #[pymodule]
