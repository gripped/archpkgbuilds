# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: Jelle van der Waa <jelle@archlinux.org>
# Contributor: Sebastian Zwierzchowski <seba@angrysoft.ovh>

pkgname=zigbee2mqtt
pkgver=2.1.1
pkgrel=1
pkgdesc='A Zigbee to MQTT bridge'
arch=('x86_64')
url='https://www.zigbee2mqtt.io'
license=('GPL-3.0-only')
depends=('nodejs')
makedepends=('git' 'typescript' 'npm')
backup=('etc/zigbee2mqtt/configuration.yaml')
optdepends=('mosquitto: MQTT broker')
options=(!emptydirs)
source=(
  "${pkgname}::git+https://github.com/Koenkk/zigbee2mqtt#tag=${pkgver}"
  'zigbee2mqtt.service'
  'zigbee2mqtt.sysusers'
  'zigbee2mqtt.tmpfiles'
)
sha512sums=('92adfac4749c9e5adb98d0ea3ee6819a1d12e9ff9f1063aa34ab97b7195e05afdba22e3b2e3082d38073855986165b94af00982748cf230cc007979983a9d1c0'
            'd573c1be013a05274cca25975bca86d37cfb64836ee449d246547f5a64866914e31826a2d1b61e174b870c3a8e512903a3774f7d3ad048cf9b4d81b99cb07ffc'
            'd365763e488239a549239c1c251af6b517d3a8d9873e3824c204a1c9704f780e085b3d9002d8b8fb0db71ee0a6f6a31abc14a8b4f5dd05833a665cf3a14fea2f'
            '0ca8af5bcc870c475f004b4d5a8b747daf80915e54c0c123c0464aaf568f81afdddbdce13828e8d6c631c8d50f05a86be8abb615a0e26b27f004ea92eb9507bf')
b2sums=('77cdd1715ce9e058bc0d479c9410c7d8e1341b959cbd0910a88e538014946b8c659c3efd029f238119221b1329837daa296db2f7467d3c85f86359429cf95ad3'
        '039afafe704b379738b026df2a619fe044f19e1389ff49a2efe79779214676f69f6d9cdcb9964c85296c839d624df5b46a3c9af887942b11152df8584da77572'
        '41bad759487b13707d4bc1ffa799e0728d862375637789b0dd9f04ed6a8aca72441613163d3f845de453d64f0cd2f63d5b7039234cd80d9b8195fb1b37086ef3'
        '7320d598f4b2ed42391fcfa64981fe76027326bb268962061467a1f6212944f2c0e9f4a626254b600af788d8fe25142bd2eb85836af99ec8a783ae8a79fa512f')

prepare() {
  cd "${pkgname}"

  npm install
}

build() {
  cd "${pkgname}"

  NODE_ENV=production npm run build

  npm prune --production
}

package() {
  cd "${pkgname}"

  install -m0755 -d "${pkgdir}/usr/share/webapps/${pkgname}"
  cp -a node_modules dist "${pkgdir}/usr/share/webapps/${pkgname}"

  # FS#80123
  # https://github.com/Koenkk/zigbee2mqtt/blob/51f15bd306db1249e02b0d4fd433d06173ac0e04/docker/Dockerfile#L31
  echo "${_commit}" > "${pkgdir}/usr/share/webapps/${pkgname}/dist/.hash"

  install -m0644 cli.js -t "${pkgdir}/usr/share/webapps/${pkgname}"
  install -m0644 index.js -t "${pkgdir}/usr/share/webapps/${pkgname}"
  install -m0644 package.json -t "${pkgdir}/usr/share/webapps/${pkgname}"

  # sanitize permissions
  find "${pkgdir}/usr" -type d -exec chmod 755 {} +
  chown -R root:root "${pkgdir}"

  install -Dm644 data/configuration.example.yaml "${pkgdir}/etc/${pkgname}/configuration.yaml"

  install -Dm644 "${srcdir}/${pkgname}.service" "${pkgdir}/usr/lib/systemd/system/${pkgname}.service"
  install -Dm644 "${srcdir}/${pkgname}.sysusers" "${pkgdir}/usr/lib/sysusers.d/${pkgname}.conf"
  install -Dm644 "${srcdir}/${pkgname}.tmpfiles" "${pkgdir}/usr/lib/tmpfiles.d/${pkgname}.conf"

  # Cleanups x86_64 specific
  if [ "${CARCH}" = "x86_64" ]; then
    local find_dirs=(
    -iwholename '*.github' -o
    -iwholename '*.idea' -o
    -iwholename '*.tscache' -o
    -iwholename '*/man' -o
    -iwholename '*/test' -o
    -iwholename '*/scripts' -o
    -iwholename '*/git-hooks' -o
    -iwholename '*/android-arm' -o
    -iwholename '*/android-arm64' -o
    -iwholename '*/linux-arm64' -o
    -iwholename '*/linux-armvy' -o
    -iwholename '*/linux-armv7' -o
    -iwholename '*/linux-arm' -o
    -iwholename '*/win32-ia32' -o
    -iwholename '*/win32-x64' -o
    -iwholename '*/darwin-x64'
    )

    find ${pkgdir}/usr/share/webapps/${pkgname}/node_modules -type d \( "${find_dirs[@]}" \) -exec rm -rvf {} +
  fi

}
