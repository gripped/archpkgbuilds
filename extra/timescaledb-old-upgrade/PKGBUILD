# Maintainer: George Rawlinson <george@rawlinson.net.nz>

# NOTE: 2.17.0 provides support for PG17, so as soon as Arch gets PG17,
# we can rebuild for PG17.

_pkgname=timescaledb
pkgname=timescaledb-old-upgrade
_current_pg_version=16
_old_pg_version=$(( _current_pg_version - 1 ))
# limit to last 5 releases
declare -gA _commits=(
  [2.15.3]=777f7266e16ae0f3bc2ac5f4ec9d420b5d2ea110
  [2.16.0]=4fd2a878df1dbb807a9e99d01cf5614ebddc02b4
  [2.16.1]=7c78574c4d42ec7ceb840bd9d55652182221f251
  [2.17.0]=43ef9b7bda813c10f845fe55f7fc6113bbd47b07
  [2.17.1]=beb03d6d4c61dbd02291ef2c661c00155ddb79c9
)
pkgver=2.17.1
pkgrel=1
pkgdesc='TimescaleDB build for migrating between major versions of PostgreSQL'
arch=('x86_64')
url='https://www.timescale.com/'
license=('Apache-2.0' 'custom:Timescale')
depends=(
  "postgresql-old-upgrade<$_current_pg_version"
  "postgresql-old-upgrade>=$_old_pg_version"
  "timescaledb=$pkgver"
)
makedepends=('gcc' 'cmake' 'git')
source=("$_pkgname::git+https://github.com/timescale/timescaledb#commit=${_commits[$pkgver]}")
sha512sums=('b78aa4be639eeae7de9fd6f328ae57eafd99bbfd03c1daedd67bb68491c3392d581128d49541607567a5bffb320b15994c4e388af21ad5f953260f95b3ecaa25')
b2sums=('f71639ed9eb1f0c74b8f95db130eefea58581a2ba1dd9eb6c9bc2d2bf46ad044ac69fb56a4870f4195c45ee52e9be2c260df8eac6e57c81af9a31567bfbce376')

prepare() {
  mkdir -p build
}

build() {
  local version
  for version in "${!_commits[@]}"; do
    cd "$srcdir/$_pkgname"

    git checkout "${_commits[$version]}"

    BUILD_DIR="$srcdir/build/$version" ./bootstrap \
      -DWARNINGS_AS_ERRORS=OFF \
      -DREGRESS_CHECKS=OFF \
      -DPG_PATH="/opt/pgsql-${_old_pg_version}"

    # build package or past shared library
    cd "$srcdir/build/$version"

    # ensure reproducible builds (value from `lsb_release -r`)
    # TODO: resolve https://github.com/timescale/timescaledb/issues/3480
    sed \
      -e "s:BUILD_OS_VERSION \".*\"$:BUILD_OS_VERSION \"rolling\":" \
      -i src/config.h

    if [[ $version == $pkgver ]]; then
      make
    else
      make timescaledb timescaledb-tsl sqlfile
    fi
  done
}

package() {
  cd "$_pkgname"
  # install licenses from latest version
  git checkout "${_commits[$pkgver]}"
  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" \
    LICENSE LICENSE-APACHE tsl/LICENSE-TIMESCALE

  # install package or past shared library
  local version
  for version in "${!_commits[@]}"; do
    cd "$srcdir/build/$version"
    if [[ $version == $pkgver ]]; then
      make DESTDIR="$pkgdir/" install
    else
      install -vDm755 -t "$pkgdir/opt/pgsql-${_old_pg_version}/lib" \
        "src/$_pkgname-$version.so" \
        "tsl/src/$_pkgname-tsl-$version.so"
      install -Dm644 -t "$pkgdir/opt/pgsql-${_old_pg_version}/share/extension" \
        "sql/timescaledb--$version.sql"
    fi
  done
}
