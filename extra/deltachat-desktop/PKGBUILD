# Maintainer: David Runge <dvzrv@archlinux.org>

# WARNING: This package needs to be kept in lock-step with deltachat-rpc-server!
# The upstream project locks a specific version of deltachat-rpc-server as "stdio-rpc-server", see:
# https://github.com/deltachat/deltachat-desktop/blob/main/pnpm-lock.yaml
pkgname=deltachat-desktop
pkgver=2.20.0
pkgrel=1
pkgdesc="Email-based instant messaging for Desktop"
arch=(any)
url="https://github.com/deltachat/deltachat-desktop"
license=(GPL-3.0-or-later)
_electronver=37
_nodever=20
depends=(
  "electron$_electronver"
  bash
  hicolor-icon-theme
)
makedepends=(
  deltachat-rpc-server
  git
  inkscape
  node-gyp
  "nodejs>=$_nodever"
  npm
  pnpm
)
source=(
  "git+$url.git#tag=v$pkgver"
  "$pkgname.desktop"
  "$pkgname.sh.in"
  "$pkgname.xml"
)
sha512sums=('88a3dd163323db298d969eaf232fd73e0183bcca3bfc14a70c6d5364089d9c029ef4a623870901da272294dc1fa5450d34c128158af8ef2ab22091142e3c863a'
            '15c500b06f28625c65f09f2cbc8fa8c1ce4b7bb5a8e2b6a74136247a29cda5f1f58232b213bfe94700d17190fe4e994b893bd7ebda387942d409b4d000b0577d'
            'b535f19762d6f8d3b23a6bfdac191e65b48df2f51e85312ccf62aea4c65252ab9a546296abd70cef6c53fcf9757bbdc1ee9ce73a6c4d6593854b6d3d0e6de5b3'
            'd725ac91703cdfc4cb14e73cd786456eb4bfc374a591e9508edc70e59350915c365a367b84c1fafce225da01cfb716c516aa7159ecb484635d58467359fb89d7')
b2sums=('65db3ab2f91096db83bf23f70c85a9921cd1d0f63b4484f8934f4eb5405c5b59f269e3b9954d568cf67fd87dc09db72f06e9b242888992167fb45701a9b97c38'
        '9826771b90c460169f1fa5c15cc603e28887d669c0ee3ceed9bf1b027a0df7de4bcdbedf4775e8bd8d5b7692ed084a5837a7bcc6c64bf6acf08e8a44586ccf77'
        'f1f34820c56196d0b0c630ddad51c2b650a45a2d5dd3025f479a1f72c9d817b7446fd6793a13b72b90f2b81a4f27f9dd5fc61d110725b5502cb1ec298693a113'
        '382dd6312e10d1881c39d74179f19d41beccb25a5e25a43aa9721fba30e3138ce521df483beed1b6101e1801233b0d189846b7614652d05c5d41feae03f1c5fe')

_resolutions=( 16 32 48 64 96 128 256 512 1024 )

prepare() {
  cd $pkgname

  local deltachat_rpc_server_version="$(deltachat-rpc-server --version 2>&1)"
  grep -q "'@deltachat/stdio-rpc-server': $deltachat_rpc_server_version" pnpm-workspace.yaml \
    || (echo "The deltachat-rpc-server version ($deltachat_rpc_server_version) does not match the targeted version in pnpm-workspace.yaml"; exit 1)
  grep -q "\"version\": \"$pkgver\"" packages/target-electron/package.json \
    || ( echo "Version mismatch in package.json"; exit 1 )
  grep -q "\"electron\": \"^$_electronver\." packages/target-electron/package.json \
    || ( echo "Electron version mismatch in package.json"; exit 1 )
  grep -q "\"node\": \">=$_nodever" packages/target-electron/package.json \
    || ( echo "Node version mismatch in package.json"; exit 1 )

  # Update pnpm version requirement
  sed -i "s/\"pnpm\": \".*\"/\"pnpm\": \"^$(pnpm --version)\"/" package.json

  # set electron version for start script
  sed "s/@ELECTRON@/electron$_electronver/" ../$pkgname.sh.in > ../$pkgname.sh

  # generate icons for XDG integration
  for resolution in "${_resolutions[@]}"; do
    inkscape -o "$pkgname-$resolution.png" -w "$resolution" -h "$resolution" images/tray/${pkgname/-desktop/}.svg
  done

  pnpm install --frozen-lockfile
}

build() {
  local electron_builder_options=(
    --linux
    --dir
    -c.electronDist=/usr/lib/electron$_electronver
    -c.electronVersion=$_electronver
  )
  local filter="@deltachat-desktop/target-electron"

  cd $pkgname
  export NODE_ENV=production
  pnpm --filter=$filter pack:generate_config
  pnpm --filter=$filter run pack:patch-node-modules

  # Fix invalid ESM import of readdirp in chokidar
  sed -i \
    "s|import { readdirp } from 'readdirp';|import pkg from 'readdirp';\nconst { readdirp } = pkg;|" \
    node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/esm/index.js
  pnpm --filter=$filter build

  pnpm --filter=$filter exec electron-builder ${electron_builder_options[@]}

  # symlink bundled stdio-rpc-server to the one provided by the deltachat-rpc-server package
  ln -fsv /usr/bin/deltachat-rpc-server packages/target-electron/dist/linux-unpacked/resources/app.asar.unpacked/node_modules/@deltachat/stdio-rpc-server-linux-x64/deltachat-rpc-server
}

package() {
  # When in build environment assign version specific dependency on deltachat-rpc-server.
  # (This is added to the .PKGINFO of the package.)
  # When not in build environment assign normal dependency on deltachat-rpc-server.
  # (This is added to the .SRCINFO of the repository.)
  if [[ "$BUILDTOOL" == devtools ]]; then
    local deltachat_rpc_server_dep="deltachat-rpc-server=$(deltachat-rpc-server --version 2>&1)"
    depends+=($deltachat_rpc_server_dep)
  else
    depends+=(deltachat-rpc-server)
  fi

  install -vDm 755 $pkgname.sh "$pkgdir/usr/bin/$pkgname"

  cd $pkgname
  install -vdm 755 "$pkgdir/usr/lib/$pkgname/"
  cp -rv packages/target-electron/dist/linux-unpacked/resources/* "$pkgdir/usr/lib/$pkgname/"

  # icons
  install -vDm 644 images/tray/${pkgname/-desktop/}.svg "$pkgdir/usr/share/icons/hicolor/scalable/apps/$pkgname.svg"
  for resolution in "${_resolutions[@]}"; do
    install -vDm 644 "$pkgname-$resolution.png" "$pkgdir/usr/share/icons/hicolor/${resolution}x${resolution}/apps/$pkgname.png"
  done

  #XDG
  install -vDm 644 ../$pkgname.desktop -t "$pkgdir/usr/share/applications/"
  install -vDm 644 ../$pkgname.xml -t "$pkgdir/usr/share/mime/packages/"

  install -vDm 644 {CHANGELOG,CONTRIBUTING,README,SECURITY}.md -t "$pkgdir/usr/share/doc/$pkgname/"
}
