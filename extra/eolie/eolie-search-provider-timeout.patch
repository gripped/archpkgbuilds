From d7de5bdd5d842516c42713616ffb8789080392f8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Fri, 1 Aug 2025 11:45:30 +0000
Subject: [PATCH] search-provider: Quit after inactivity

Instead of keep running in the background, release the app after
10 seconds of inactivity.
---
 search-provider/eolie-sp.in | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/search-provider/eolie-sp.in b/search-provider/eolie-sp.in
index 83aae43c..82bad1ea 100755
--- a/search-provider/eolie-sp.in
+++ b/search-provider/eolie-sp.in
@@ -130,7 +130,8 @@ class SearchEolieService(Server, Gio.Application):
         Gio.Application.__init__(
                             self,
                             application_id='org.gnome.Eolie.SearchProvider',
-                            flags=Gio.ApplicationFlags.IS_SERVICE)
+                            flags=Gio.ApplicationFlags.IS_SERVICE,
+                            inactivity_timeout=10000)
         self.cursors = {}
         self.settings = Settings.new()
         self.bookmarks = DatabaseBookmarks()
@@ -159,6 +160,7 @@ class SearchEolieService(Server, Gio.Application):
         return self.__search(terms)
 
     def GetResultMetas(self, ids):
+        self.hold()
         results = []
         try:
             for bookmark_id in ids:
@@ -172,7 +174,7 @@ class SearchEolieService(Server, Gio.Application):
                 results.append(d)
         except Exception as e:
             print(e)
-            return []
+        self.release()
         return results
 
     def GetSubsearchResultSet(self, previous_results, new_terms):
@@ -189,6 +191,7 @@ class SearchEolieService(Server, Gio.Application):
                                     GLib.SpawnFlags.DO_NOT_REAP_CHILD, None)
 
     def __search(self, terms):
+        self.hold()
         ids = []
         search = " ".join(terms)
         try:
@@ -197,11 +200,11 @@ class SearchEolieService(Server, Gio.Application):
                 ids.append(str(self.bookmarks.get_id(uri)))
         except Exception as e:
             print(e)
+        self.release()
         return ids
 
 def main():
     service = SearchEolieService()
-    service.hold()
     service.run()
 
 if __name__ == '__main__':
-- 
GitLab

