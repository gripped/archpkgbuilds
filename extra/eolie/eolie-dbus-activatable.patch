From 3edfdebab4f78488c46581c0e4fe7a29e0d7f958 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Sat, 19 Apr 2025 13:06:58 +0200
Subject: [PATCH] Add D-Bus service file

And mark the application as D-Bus activatable. This allows application
launchers to activate it via D-Bus.
---
 data/meson.build                |  9 +++++
 data/org.gnome.Eolie.desktop.in |  1 +
 data/org.gnome.Eolie.service.in |  3 ++
 eolie/application.py            | 66 ++++++++++++++++++++++++---------
 meson.build                     |  1 +
 5 files changed, 62 insertions(+), 18 deletions(-)
 create mode 100644 data/org.gnome.Eolie.service.in

diff --git a/data/meson.build b/data/meson.build
index e85b5c75..b5c83870 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -77,5 +77,14 @@ if compile_schemas.found()
   )
 endif
 
+# D-Bus service file
+configure_file(
+  input: project_id + '.service.in',
+  output: project_id + '.service',
+  configuration: conf,
+  install: true,
+  install_dir: join_paths(get_option('prefix'), get_option('datadir'), 'dbus-1', 'services')
+)
+
 message('Making a list of icons')
 subdir('icons')
diff --git a/data/org.gnome.Eolie.desktop.in b/data/org.gnome.Eolie.desktop.in
index 1a3d9df1..4f5897a8 100644
--- a/data/org.gnome.Eolie.desktop.in
+++ b/data/org.gnome.Eolie.desktop.in
@@ -10,6 +10,7 @@ Type=Application
 Categories=Network;GNOME;GTK;WebBrowser;
 MimeType=text/html;text/xml;application/xhtml+xml;x-scheme-handler/http;x-scheme-handler/https;multipart/related;application/x-mimearchive
 StartupNotify=true
+DBusActivatable=true
 Actions=new-window;private-page
 
 [Desktop Action new-window] 
diff --git a/data/org.gnome.Eolie.service.in b/data/org.gnome.Eolie.service.in
new file mode 100644
index 00000000..6c03b66d
--- /dev/null
+++ b/data/org.gnome.Eolie.service.in
@@ -0,0 +1,3 @@
+[D-BUS Service]
+Name=org.gnome.Eolie
+Exec=@BIN_DIR@/eolie --gapplication-service
diff --git a/eolie/application.py b/eolie/application.py
index 9c4db69b..a9d50946 100644
--- a/eolie/application.py
+++ b/eolie/application.py
@@ -119,6 +119,15 @@ class Application(Gtk.Application, NightApplication):
         self.connect("activate", self.__on_activate)
         self.connect("handle-local-options", self.__on_handle_local_options)
         self.connect("command-line", self.__on_command_line)
+
+        new_window = Gio.SimpleAction.new("new-window", None)
+        new_window.connect("activate", self.__on_new_window_action)
+        self.add_action(new_window)
+
+        private_page = Gio.SimpleAction.new("private-page", None)
+        private_page.connect("activate", self.__on_private_page_action)
+        self.add_action(private_page)
+
         self.register(None)
         if self.get_is_remote():
             Gdk.notify_startup_complete()
@@ -354,10 +363,6 @@ class Application(Gtk.Application, NightApplication):
             except:
                 pass
 
-        shortcut_action = Gio.SimpleAction.new('shortcut',
-                                               GLib.VariantType.new('s'))
-        shortcut_action.connect('activate', self.__on_shortcut_action)
-        self.add_action(shortcut_action)
         self.set_accels_for_action("win.shortcut::expose", ["<Alt>e"])
         self.set_accels_for_action("win.shortcut::show_sidebar", ["F9"])
         self.set_accels_for_action("win.shortcut::uri",
@@ -365,7 +370,7 @@ class Application(Gtk.Application, NightApplication):
         self.set_accels_for_action("win.shortcut::new_page", ["<Control>t"])
         self.set_accels_for_action("win.shortcut::last_page",
                                    ["<Control><Shift>t"])
-        self.set_accels_for_action("app.shortcut::new_window", ["<Control>n"])
+        self.set_accels_for_action("app.new-window", ["<Control>n"])
         self.set_accels_for_action("win.shortcut::private",
                                    ["<Control><Shift>p"])
         self.set_accels_for_action("win.shortcut::close_page", ["<Control>w"])
@@ -708,20 +713,45 @@ class Application(Gtk.Application, NightApplication):
             Call default handler, raise last window
             @param application as Gio.Application
         """
-        if self.get_windows():
-            self.active_window.present()
+        if not self.windows:
+            self.__init()
+            self.__restore_state()
 
-    def __on_shortcut_action(self, action, param):
-        """
-            Global shortcuts handler
-            @param action as Gio.SimpleAction
-            @param param as GLib.Variant
-        """
-        string = param.get_string()
-        if string == "new_window":
-            window = self.get_new_window()
-            window.container.add_webview_for_uri(
-                self.start_page, LoadingType.FOREGROUND)
+        if not self.windows:
+            active_window = self.get_new_window()
+        else:
+            active_window = self.active_window
+
+        if not active_window.container.webviews:
+            active_window.container.add_webview_for_uri(self.start_page, LoadingType.FOREGROUND)
+
+        active_window.present()
+
+    def __on_new_window_action(self, action, parameter):
+        if not self.windows:
+            self.__init()
+            self.__restore_state()
+            active_window = self.active_window
+        else:
+            active_window = self.get_new_window()
+
+        if not active_window.container.webviews:
+            active_window.container.add_webview_for_uri(self.start_page, LoadingType.FOREGROUND)
+
+        active_window.present()
+
+    def __on_private_page_action(self, action, parameter):
+        if not self.windows:
+            self.__init()
+            self.__restore_state()
+
+        if not self.windows:
+            active_window = self.get_new_window()
+        else:
+            active_window = self.active_window
+
+        active_window.container.add_webview_for_uri(self.start_page, LoadingType.FOREGROUND, True)
+        active_window.present()
 
     def __on_content_blocker_set_filter(self, content_blocker, content_filter):
         """
diff --git a/meson.build b/meson.build
index 59db7f06..109b4296 100644
--- a/meson.build
+++ b/meson.build
@@ -39,6 +39,7 @@ bindir = join_paths(get_option('prefix'), get_option('bindir'))
 
 conf = configuration_data()
 conf.set('PACKAGE_URL', 'https://wiki.gnome.org/Apps/Eolie')
+conf.set('BIN_DIR', bindir)
 conf.set('DATA_DIR', DATA_DIR)
 conf.set('EXTENSION_DIR', EXTENSION_DIR)
 conf.set('LOCALE_DIR', join_paths(get_option('prefix'), get_option('datadir'), 'locale'))
-- 
GitLab

