# Maintainer: Torsten Keßler <tpkessler at archlinux dot org>
pkgname=rocal
pkgver=6.4.1
pkgrel=2
pkgdesc='A high-performance jpeg decode library for AMD’s GPUs'
arch=('x86_64')
url='https://rocm.docs.amd.com/projects/rocAL/en/latest/'
license=('MIT')
depends=(
  'rocm-core'
  'hip-runtime-amd'
  'mivisionx'
  'rocjpeg'
  'rocdecode'
  'rpp'
  'openmp'
  'protobuf'
  'mesa'
  'libva'
  'opencv'
  'ffmpeg'
  'lmdb'
  'python-setuptools'
  'glibc'
  'gcc-libs'
)
makedepends=(
  'git'
  'cmake'
  'rocm-cmake'
  'pybind11'
  'half'
)
_git='https://github.com/ROCm/rocAL'
_rapidjson='https://github.com/Tencent/rapidjson'
# rocAL uses some unreleased features of radipjson
_commit=24b5e7a8b27f42fa16b96fc70aade9106cf7102f
source=("$pkgname-$pkgver.tar.gz::$_git/archive/refs/tags/rocm-$pkgver.tar.gz"
        "$pkgname-rapidjson-$_commit.tar.gz::$_rapidjson/archive/$_commit.tar.gz")
sha256sums=('9ed8949b7a0c588b6ab8b804e353819314659cedfecfdf91fffc1c73f33d3014'
            '2d2601a82d2d3b7e143a3c8d43ef616671391034bc46891a9816b79cf2d3e7a8')
_dirname="$(basename "$_git")-$(basename "${source[0]}" ".tar.gz")"
_rapidjsondir="$(basename "$_rapidjson")-$(basename "${source[1]}" ".tar.gz")"

build() {
  local rapidjson_args=(
    -Wno-dev
    -S "$_rapidjsondir"
    -B build-rapidjson
    -D CMAKE_BUILD_TYPE=None
    -D CMAKE_INSTALL_PREFIX=/usr
    -D BUILD_SHARED_LIBS=OFF
    -D CMAKE_POLICY_VERSION_MINIMUM=3.5
  )
  cmake "${rapidjson_args[@]}"
  cmake --build build-rapidjson
  DESTDIR="$srcdir/deps" cmake --install build-rapidjson
  
  # -fcf-protection is not supported by HIP, see
  # https://rocm.docs.amd.com/projects/llvm-project/en/latest/reference/rocmcc.html#support-status-of-other-clang-options
  local cmake_args=(
    -Wno-dev
    -S "$_dirname"
    -B build
    -D CMAKE_BUILD_TYPE=None
    -D CMAKE_C_COMPILER=amdclang
    -D CMAKE_CXX_COMPILER=amdclang++
    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none -isystem $srcdir/deps/usr/include"
    -D CMAKE_INSTALL_PREFIX=/opt/rocm
    -D CMAKE_PREFIX_PATH="$srcdir/deps/usr/lib/cmake"
  )
  cmake "${cmake_args[@]}"
  cmake --build build
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 "$_dirname/LICENSE.txt" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
