# Maintainer: Christian Rebischke <chris.rebischke@archlinux.org>
# Contributor:  Conrad Hoffmann <ch@bitfehler.net>

pkgname=netplan
pkgver=1.1.2
pkgrel=1
pkgdesc="Network configuration abstraction renderer"
arch=('x86_64')
url="https://github.com/canonical/netplan"
license=('GPL-3.0-only')
depends=(
  'dbus-python'
  'gcc-libs'
  'glibc'
  'glib2'
  'libyaml'
  'python'
  'python-cffi'
  'python-yaml'
  'python-netifaces'
  'python-rich'
  'iproute2'
  'systemd'
  'systemd-libs'
  'util-linux-libs'
)
makedepends=(
  'bash-completion'
  'cmocka'
  'meson'
  'pandoc'
  'python-pytest'
  'python-setuptools'
)
checkdepends=(
  'openvswitch'
  'wireless-regdb'
)
provides=(libnetplan.so)
source=(
  "$pkgname-$pkgver.tar.gz::$url/archive/${pkgver}.tar.gz"
  "$pkgname-1.1-disable-tests.patch"
  "$pkgname-0.107-use_lib.patch"
)
sha512sums=('717c0da58de37f764332883881ae6185fd932d55256a88122b8462a51eeb0bef123f29e75f897e067b6d1b1fdcf67f6eba0054146609deb4456c1cf673bd794c'
            '181667fe44cf85734a1cf363aab7c370ed8cfabc5f9c023b664b38e24bbce5d387f8ae533654e760abdff1ba2b648d637fa44fedea838f4d0ef15111d4b5a9ee'
            '64d6e97cb7c330fc2e28872a34e0be4190c6e75e5235de6ff97ef77c4c287f814b85503c798d959b88037fb53af0459c6a38768b7420f12aac79db64db127378')
b2sums=('77bdf0ef5dde49c7164b2e2ef56e889b40daaf7acb15e3b75eb1f8c0273d645ed57ee1b39418f9e7392d091fb77183858f10bc60ac2ab818d75501cc97ec4bbe'
        '9917b12d185bfbb9bc636bf1c8e321fc39e9380379f1dc1e92d5b89d90adc0b1850049866ef637d33aea91dfd527ce27ffff751e9164a3dbfa77a8a994921fbe'
        '7ca1aa7b5449e23b310f32d16bf0f50525c4175d26eb591489143d0acef8cda7969502bff26402dbba10d3ea45c3c6768c28bf22c74b9f0a807bc953acf5871a')

prepare() {
  # TODO: fix this upstream!
  # disable searching for Python packages used for testing (by wrong names)
  # disable linting and codestyle tests as they are broken and useless to us
  # disable unit-tests as we run them manually in check() to be able to disable things that are broken
  patch -Np1 -d $pkgname-$pkgver -i ../$pkgname-1.1-disable-tests.patch
  # use /usr/lib instead of /usr/libexec
  patch -Np1 -d $pkgname-$pkgver -i ../$pkgname-0.107-use_lib.patch
}

build() {
  arch-meson $pkgname-$pkgver build
  meson compile -C build
}

check() {
  local pytest_options=(
    -vv
    # TODO: report/ fix upstream!
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_empty_config
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_no_configs
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_generator
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_generator_all_optional
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_generator_badcall
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_generator_escaping
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_generator_noconf
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_wait_online_only_non_routable
    --deselect $pkgname-$pkgver/tests/generator/test_args.py::TestConfigArgs::test_systemd_wait_online_only_routable
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bond_auto_ovs_backend
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bond_lacp
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bond_mode_explicit_params
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bond_mode_implicit_params
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bond_setup
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_auto_ovs_backend
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_controller
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_external_ids_other_config
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_non_default_parameters
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_non_ovs_bond
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_set_protocols
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_bridge_setup
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_control_characters_and_semicolons_escaping
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_fake_vlan_bridge_setup
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_file_paths_escaped
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_global_external_ids_other_config
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_global_ports
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_global_set_protocols
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_global_ssl
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_implicit_fake_vlan_bridge_setup
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_interface_external_ids_other_config
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_invalid_device_type
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_missing_ssl
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_no_ovs_config
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_ovs_duplicates_when_parser_needs_second_pass
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_ovs_invalid_networkd_config
    --deselect $pkgname-$pkgver/tests/generator/test_ovs.py::TestOpenVSwitch::test_patch_ports
    --deselect $pkgname-$pkgver/tests/generator/test_wifis.py::TestNetworkManager::test_wifi_regdom
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_escaping_semicolons_from_unit_file
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_eswitch_mode
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_eswitch_mode_sets_interface_as_pf
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_rebind_no_iface
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_rebind_not_delayed
    --deselect $pkgname-$pkgver/tests/test_sriov.py::TestParser::test_rebind_service_generation
    --deselect $pkgname-$pkgver/tests/netplan_dbus/test_dbus.py::TestNetplanDBus::test_netplan_apply_in_snap_calls_busctl
    --deselect $pkgname-$pkgver/tests/netplan_dbus/test_dbus.py::TestNetplanDBus::test_netplan_apply_in_snap_uses_dbus
    --deselect $pkgname-$pkgver/tests/netplan_dbus/test_dbus.py::TestNetplanDBus::test_netplan_generate_in_snap_calls_busctl
  )

  meson test -C build

  # run unit tests separately so that we can disable broken tests
  export PYTHONPATH="build/python-cffi:$pkgname-$pkgver:$PYTHONPATH"
  export NETPLAN_GENERATE_PATH="build/src/generate"
  export NETPLAN_DBUS_CMD="build/dbus/netplan-dbus"
  LD_LIBRARY_PATH="build/src" pytest "${pytest_options[@]}"
}

package() {
  meson install -C build --destdir "$pkgdir"
}
