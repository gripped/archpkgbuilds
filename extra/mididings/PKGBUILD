# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: Lieven Moors <lievenmoors@protonmail.com>
# Contributor: Leonard de Ruijter <dev@systeemdenker.nl>
# Contributor: speps <speps at aur dot archlinux dot org>

pkgbase=mididings
pkgname=(mididings mididings-docs)
pkgver=20250818
pkgrel=3
pkgdesc='A MIDI router & processor'
arch=(x86_64)
url='https://github.com/mididings/mididings'
license=(GPL-2.0-or-later GFDL-1.3-or-later)
makedepends=(
  git
  boost
  boost-libs
  alsa-lib
  jack
  python
  python-decorator
  python-build
  python-installer
  python-wheel
  meson-python
  python-sphinx
  python-sphinxcontrib-fulltoc
  python-pyinotify
  python-pyliblo3
  dbus-python
  scdoc
)
checkdepends=(python-pytest)
source=(
  "$pkgbase::git+https://github.com/mididings/mididings#tag=$pkgver"
  fix-pyliblo-refs.patch
  doc-hackaround.patch
)
sha512sums=('f3b4d8aabe554008fb0282ba8be552b5ec091691507576b9461fd87c51362b5c64beec431dc30e90cd72159597965b0fd0276bcfab416b6cf07a243cf5a14f0f'
            'aeb159e04cc8fe0412b92c74e045efb7463945bd6fb363347ae0fa34301b93918c06f652053a79dc339678e3207f301df6fabc630c40bc93713b0f50c733b81f'
            '951013b7971b180ce15e8363956478b3c52d4b722bdbb3c4ce71c1b3b13a7b20399b8c1a54bc3b1f51c796411c4f016f97686d241ba9c397672ab2dccd4961f4')
b2sums=('fd8d2e7c206294fda208959c0d9cc2cafc56ea7f8ac112cf8a05cea620e23856ede528cd2312afd540413dfb74eebd0839d3f0c7e9dc18dd42f04229f7f17bb5'
        '1f492acd3fc0b92905eb0376b49648da4efac97e9abf8113044711be814f04d87659dafbb26e92267391d90aab46b61df15ba4f037c30c064ad07cabaf087344'
        '09bbe16609b539fbe8a2037a38739d465eef3ac13faeffbcde9b3a4b5df2744abc6f4e31d5d2701e42a4160db39080a44064f1349b9ae4c91f186c8e999cadb4')

prepare() {
  cd "$pkgbase"

  patch -p1 -i "$srcdir/fix-pyliblo-refs.patch"
}

build() {
  cd "$pkgbase"

  # lib
  python -m build --wheel --no-isolation

  # install to temporary directory
  python -m installer --destdir="$PWD/tmp_doc" dist/*.whl
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  export PYTHONPATH="$PWD/tmp_doc$site_packages"

  # documentation
  patch -p1 -i "$srcdir/doc-hackaround.patch"
  sed -e "s/@VERSION@/$pkgver/" -i doc/conf.py
  sphinx-build -b html -d doc/build/doctrees doc doc/build/html

  # manpages
  pushd doc/man > /dev/null
  for script in livedings mididings send_midi; do
    scdoc < "${script}.scd" > "${script}.1"
  done

  # ensure man pages are reproducible
  bash reproducible-man.sh
  popd > /dev/null
}

check() {
  cd "$pkgbase"

  # install to temporary directory
  python -m installer --destdir="$PWD/tmp_check" dist/*.whl
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")

  PYTHONPATH="$PWD/tmp_check$site_packages" pytest -v \
    --deselect tests/test_event.py::EventTestCase::test_copy \
    --deselect tests/test_event.py::EventTestCase::test_pickle \
    --deselect tests/units/test_modifiers.py::ModifiersTestCase::test_Port
}

package_mididings() {
  license=(GPL-2.0-or-later)
  depends=(
    boost-libs
    jack
    alsa-lib
    python
    python-decorator
  )
  optdepends=(
    'dbus-python: send DBUS messages'
    'python-pyinotify: automatically restart when a script changes'
    'python-pyliblo3: send/recieve OSC messages'
    'python-pysmf: read/write standard MIDI files using the process_file() function'
    'python-pyxdg: so mididings knows where to look for config files'
    'tk: for livedings GUI'
    'mididings-docs: documentation'
  )

  cd "$pkgbase"

  python -m installer --destdir="$pkgdir" dist/*.whl

  # man pages
  install -vDm644 -t "$pkgdir/usr/share/man/man1" doc/man/*.1
}

package_mididings-docs() {
  license=(GFDL-1.3-or-later)
  pkgdesc+=' (documentation)'

  cd "$pkgbase"

  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgbase" README.md
  cp -vr doc/examples "$pkgdir/usr/share/doc/$pkgbase"
  cp -vr doc/build/html "$pkgdir/usr/share/doc/$pkgbase"
}
