From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <heftig@archlinux.org>
Date: Wed, 8 Jan 2025 23:38:25 +0100
Subject: [PATCH] unbreak mutators with python 3.13

---
 src/afl-fuzz-python.c | 83 +++++++++++++++++++++++++------------------
 1 file changed, 48 insertions(+), 35 deletions(-)

diff --git a/src/afl-fuzz-python.c b/src/afl-fuzz-python.c
index 873b25e2e43a..152ad97ab4cc 100644
--- a/src/afl-fuzz-python.c
+++ b/src/afl-fuzz-python.c
@@ -220,48 +220,61 @@ static py_mutator_t *init_py_module(afl_state_t *afl, u8 *module_name) {
   if (py_module != NULL) {
 
     u8 py_notrim = 0;
-    py_functions[PY_FUNC_INIT] = PyObject_GetAttrString(py_module, "init");
-    if (!py_functions[PY_FUNC_INIT]) {
+    if (PyObject_GetOptionalAttrString(
+        py_module, "init", &py_functions[PY_FUNC_INIT]) != 1) {
 
       WARNF("init function not found in python module");
 
     }
 
-    py_functions[PY_FUNC_FUZZ] = PyObject_GetAttrString(py_module, "fuzz");
-    if (!py_functions[PY_FUNC_FUZZ])
-      py_functions[PY_FUNC_FUZZ] = PyObject_GetAttrString(py_module, "mutate");
-    py_functions[PY_FUNC_DESCRIBE] =
-        PyObject_GetAttrString(py_module, "describe");
-    py_functions[PY_FUNC_FUZZ_COUNT] =
-        PyObject_GetAttrString(py_module, "fuzz_count");
-    py_functions[PY_FUNC_POST_PROCESS] =
-        PyObject_GetAttrString(py_module, "post_process");
-    py_functions[PY_FUNC_INIT_TRIM] =
-        PyObject_GetAttrString(py_module, "init_trim");
-    py_functions[PY_FUNC_POST_TRIM] =
-        PyObject_GetAttrString(py_module, "post_trim");
-    py_functions[PY_FUNC_TRIM] = PyObject_GetAttrString(py_module, "trim");
-    py_functions[PY_FUNC_HAVOC_MUTATION] =
-        PyObject_GetAttrString(py_module, "havoc_mutation");
-    py_functions[PY_FUNC_HAVOC_MUTATION_PROBABILITY] =
-        PyObject_GetAttrString(py_module, "havoc_mutation_probability");
-    py_functions[PY_FUNC_QUEUE_GET] =
-        PyObject_GetAttrString(py_module, "queue_get");
-    py_functions[PY_FUNC_FUZZ_SEND] =
-        PyObject_GetAttrString(py_module, "fuzz_send");
-    py_functions[PY_FUNC_POST_RUN] =
-        PyObject_GetAttrString(py_module, "post_run");
-    py_functions[PY_FUNC_SPLICE_OPTOUT] =
-        PyObject_GetAttrString(py_module, "splice_optout");
-    if (py_functions[PY_FUNC_SPLICE_OPTOUT]) { afl->custom_splice_optout = 1; }
-    py_functions[PY_FUNC_QUEUE_NEW_ENTRY] =
-        PyObject_GetAttrString(py_module, "queue_new_entry");
-    py_functions[PY_FUNC_INTROSPECTION] =
-        PyObject_GetAttrString(py_module, "introspection");
-    py_functions[PY_FUNC_DEINIT] = PyObject_GetAttrString(py_module, "deinit");
-    if (!py_functions[PY_FUNC_DEINIT])
+    if (PyObject_GetOptionalAttrString(
+        py_module, "fuzz", &py_functions[PY_FUNC_FUZZ]) != 1) {
+
+      PyObject_GetOptionalAttrString(
+          py_module, "mutate", &py_functions[PY_FUNC_FUZZ]);
+
+    }
+    PyObject_GetOptionalAttrString(
+        py_module, "describe", &py_functions[PY_FUNC_DESCRIBE]);
+    PyObject_GetOptionalAttrString(
+        py_module, "fuzz_count", &py_functions[PY_FUNC_FUZZ_COUNT]);
+    PyObject_GetOptionalAttrString(
+        py_module, "post_process", &py_functions[PY_FUNC_POST_PROCESS]);
+    PyObject_GetOptionalAttrString(
+        py_module, "init_trim", &py_functions[PY_FUNC_INIT_TRIM]);
+    PyObject_GetOptionalAttrString(
+        py_module, "post_trim", &py_functions[PY_FUNC_POST_TRIM]);
+    PyObject_GetOptionalAttrString(
+        py_module, "trim", &py_functions[PY_FUNC_TRIM]);
+    PyObject_GetOptionalAttrString(
+        py_module, "havoc_mutation", &py_functions[PY_FUNC_HAVOC_MUTATION]);
+    PyObject_GetOptionalAttrString(
+        py_module, "havoc_mutation_probability",
+        &py_functions[PY_FUNC_HAVOC_MUTATION_PROBABILITY]);
+    PyObject_GetOptionalAttrString(
+        py_module, "queue_get", &py_functions[PY_FUNC_QUEUE_GET]);
+    PyObject_GetOptionalAttrString(
+        py_module, "fuzz_send", &py_functions[PY_FUNC_FUZZ_SEND]);
+    PyObject_GetOptionalAttrString(
+        py_module, "post_run", &py_functions[PY_FUNC_POST_RUN]);
+    if (PyObject_GetOptionalAttrString(
+        py_module, "splice_optout", &py_functions[PY_FUNC_SPLICE_OPTOUT]) ==
+        1) {
+
+      afl->custom_splice_optout = 1;
+
+    }
+    PyObject_GetOptionalAttrString(
+        py_module, "queue_new_entry", &py_functions[PY_FUNC_QUEUE_NEW_ENTRY]);
+    PyObject_GetOptionalAttrString(
+        py_module, "introspection", &py_functions[PY_FUNC_INTROSPECTION]);
+    if (PyObject_GetOptionalAttrString(
+        py_module, "deinit", &py_functions[PY_FUNC_DEINIT]) != 1) {
+
       WARNF("deinit function not found in python module");
 
+    }
+
     if (py_notrim) {
 
       py_functions[PY_FUNC_INIT_TRIM] = NULL;
