# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: nyanmisaka <nst799610810@gmail.com>

pkgname=jellyfin-ffmpeg
epoch=1
pkgver=7.1.2p3
pkgrel=1
pkgdesc='Jellyfin fork of ffmpeg'
arch=('x86_64')
url='https://github.com/jellyfin/jellyfin-ffmpeg'
license=('GPL-3.0-only')
depends=(
  'glibc'
  'alsa-lib'
  'bzip2'
  'fontconfig'
  'fribidi'
  'gmp'
  'gnutls'
  'lame'
  'libass.so'
  'libbluray.so'
  'libchromaprint.so'
  'libdav1d.so'
  'libdrm'
  'libfreetype.so'
  'libopenmpt.so'
  'libplacebo.so'
  'libtheora'
  'libva.so'
  'libva-drm.so'
  'libvdpau'
  'libvorbisenc.so'
  'libvorbis.so'
  'libvpx.so'
  'libwebp'
  'libx11'
  'libx264.so'
  'libx265.so'
  'libxext'
  'libxml2'
  'libzimg.so'
  'ocl-icd'
  'onevpl'
  'opus'
  'shaderc'
  'srt'
  'svt-av1'
  'vulkan-icd-loader'
  'xz'
  'zlib'
  'zvbi'
)
makedepends=(
  'git'
  'nasm'
  'clang'
  'ffnvcodec-headers'
  'amf-headers'
  'opencl-headers'
  'vulkan-headers'
)
optdepends=(
  'intel-media-driver: for Intel VAAPI support (Broadwell and newer)'
  'intel-media-sdk: for Intel Quick Sync Video'
  'onevpl-intel-gpu: for Intel Quick Sync Video (Alder Lake and newer)'
  'intel-compute-runtime: for Intel OpenCL runtime based tonemapping'
  'libva-intel-driver: for Intel legacy VAAPI support (Comet Lake and older)'
  'libva-mesa-driver: for AMD VAAPI support'
  'nvidia-utils: for Nvidia NVDEC/NVENC support'
  'opencl-amd: for AMD OpenCL runtime based Tonemapping'
  'vulkan-radeon: for AMD RADV Vulkan support'
  'vulkan-intel: for Intel ANV Vulkan support'
)
options=('!lto')
source=("$pkgname::git+$url#tag=v${pkgver/p/-}")
sha512sums=('311b9ea33f27f7474d51afa0b2898082f7e6480416492dd5804fd81cc13a7f170da1f4d0cac274672cf1621668a07313a20e93a28a29a5b36dbf0284dc9b1c59')
b2sums=('fdabf7956b4670deec6ae845a9f9670705c2f15410b20e169dcbbc89d57b9c77e670db1465f779181e2231e7ab04540e448b039925838801cea2d2d2fb982846')

prepare() {
  cd "$pkgname"

  # apply jellyfin patches to ffmpeg
  for i in debian/patches/*.patch; do
    patch -p1 -i "$i"
  done
}

build() {
  cd "$pkgname"

  ./configure \
    --prefix="/usr/lib/jellyfin-ffmpeg" \
    --target-os=linux \
    --extra-version=Jellyfin \
    --disable-doc \
    --disable-ffplay \
    --disable-ptx-compression \
    --disable-shared \
    --disable-libxcb \
    --disable-sdl2 \
    --disable-xlib \
    --enable-gpl \
    --enable-version3 \
    --enable-static \
    --enable-gmp \
    --enable-gnutls \
    --enable-chromaprint \
    --enable-libfontconfig \
    --enable-libass \
    --enable-libbluray \
    --enable-libdrm \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libmp3lame \
    --enable-libopus \
    --enable-libopenmpt \
    --enable-libtheora \
    --enable-libvorbis \
    --enable-libdav1d \
    --enable-libsvtav1 \
    --enable-libwebp \
    --enable-libvpx \
    --enable-libx264 \
    --enable-libx265 \
    --enable-libzvbi \
    --enable-libzimg \
    --enable-libshaderc \
    --enable-libplacebo \
    --enable-vulkan \
    --enable-opencl \
    --enable-vaapi \
    --enable-amf \
    --enable-libvpl \
    --enable-ffnvcodec \
    --enable-cuda \
    --enable-cuda-llvm \
    --enable-cuvid \
    --enable-nvdec \
    --enable-nvenc

  make
}

package() {
  cd "$pkgname"

  install -vDm755 -t "$pkgdir/usr/lib/$pkgname" ff{mpeg,probe}
}
