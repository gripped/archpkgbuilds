# Maintainer: Daurnimator <daurnimator@archlinux.org>
# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: Tomas Krizek <tomas.krizek@nic.cz>
# Contributor: Ondřej Surý <ondrej@sury.org>

pkgname=knot-resolver
pkgver=5.7.5
pkgrel=1
arch=('x86_64')
pkgdesc="Caching DNSSEC-validating DNS resolver"
url='https://www.knot-resolver.cz/'
license=('GPL-3.0-or-later')
depends=(
    'dnssec-anchors'
    'gnutls'
    'knot'
    'libedit'
    'libuv'
    'lmdb'
    'luajit'
    'libcap-ng'
    'libnghttp2'
    'systemd-libs'
)
makedepends=(
    'cmocka'
    'git'
    'meson'
)
optdepends=(
    'lua51-basexx: experimental_dot_auth module'
    'lua51-cqueues: http and dns64 module, policy.rpz() function'
    # TODO: 'lua51-etcd: etcd module'
    'lua51-http: http and prefill modules, trust_anchors bootstrap'
    'lua51-psl: policy.slice_randomize_psl() function'
)
backup=('etc/knot-resolver/kresd.conf')
source=("git+https://gitlab.nic.cz/knot/knot-resolver.git#tag=v${pkgver}?signed"
        "git+https://gitlab.nic.cz/knot/deckard.git"
        "git+https://gitlab.nic.cz/knot/3rdparty/lua-aho-corasick.git"
        "git+https://gitlab.nic.cz/knot/3rdparty/lua-tapered.git")
sha256sums=('35d8548774b529ab0d89cbe52deaac1f4811dcd8c3f9da390069343ff3eeb32d'
            'SKIP'
            'SKIP'
            'SKIP')
validpgpkeys=(3057EE9A448F362D74205A779AB120DA0A76F6DE  # Ales Mrazek <ales.mrazek@nic.cz>
              B6006460B60A80E782062449E747DF1F9575A3AA) # Vladimír Čunát (work) <vladimir.cunat@nic.cz>

prepare() {
    cd ${pkgname}
    git submodule init
    git config submodule.tests.integration.deckard.url "${srcdir}/deckard"
    git config submodule.modules.policy.lua-aho-corasick.url "${srcdir}/lua-aho-corasick"
    git config submodule.tests.config.tapered.url "${srcdir}/lua-tapered"
    git -c protocol.file.allow=always submodule update
}

build() {
    cd ${pkgname}
    arch-meson build \
        -D keyfile_default=/etc/trusted-key.key \
        -D systemd_files=enabled \
        -D client=enabled \
        -D install_kresd_conf=enabled \
        -D unit_tests=enabled
    ninja -C build
}

check() {
    meson test -C ${pkgname}/build
}

package() {
    DESTDIR="${pkgdir}" ninja -C ${pkgname}/build install

    # add kresd.target to multi-user.target.wants to support enabling kresd services
    mkdir -p "${pkgdir}/usr/lib/systemd/system/multi-user.target.wants/"
    ln -s ../kresd.target "${pkgdir}/usr/lib/systemd/system/multi-user.target.wants/kresd.target"
}
