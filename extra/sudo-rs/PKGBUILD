# Maintainer: Bert Peters <bertptrs@archlinux.org>
pkgname=sudo-rs
pkgver=0.2.4
pkgrel=5
pkgdesc="A memory safe implementation of sudo and su."
arch=('x86_64')
url="https://github.com/trifectatechfoundation/sudo-rs"
license=('Apache-2.0 AND MIT')
depends=(
  gcc-libs
  glibc
  pam
)
makedepends=(
  cargo
  pandoc
)
checkdepends=(
  # Not really needed directly, but the tests assume it exists
  procps-ng
)
optdepends=(
  "sudo: default configuration files"
)
source=(
  "${pkgname}-${pkgver}.tar.gz::${url}/archive/refs/tags/v${pkgver}.tar.gz"
)
sha256sums=('c2c1f4c8087134a90df47a8bee76746c4ab24dd7d12f3b26a74d1560ea3ee68c')

prepare() {
  cd "$pkgname-$pkgver"
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  local man_file out_dir target_file section

  cd "$pkgname-$pkgver"
  cargo build --release --frozen

  # upstream uses a docker container to build man pages, this is roughly what
  # it tries to do.
  out_dir=target/docs/man
  mkdir --parents --verbose "$out_dir"
  for man_file in docs/man/*.md; do
    target_file="$out_dir/$(basename "$man_file" .md)"
    pandoc --standalone --to man "$man_file" -o "$target_file"
    gzip --verbose --force "$target_file"
  done

  # Rename man files with a suffix -rs so we don't conflict with the sudo
  # package
  for man_file in "$out_dir/"*.gz; do
    mv --verbose "$man_file" "${man_file%%.*}-rs.${man_file#*.}"
  done
}

check() {
  cd "$pkgname-$pkgver"
  # https://github.com/trifectatechfoundation/sudo-rs/issues/708
  cargo test --frozen -- --exact \
    --skip system::interface::test::test_unix_group \
    --skip system::interface::test::test_unix_user
}

package() {
  local section

  cd "$pkgname-$pkgver"

  install -vDm4755 target/release/sudo "$pkgdir/usr/bin/sudo-rs"
  install -vDm4755 target/release/su "$pkgdir/usr/bin/su-rs"
  install -vDm0755 target/release/visudo "$pkgdir/usr/bin/visudo-rs"

  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE-*
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgname" CHANGELOG.md README.md SECURITY.md

  for section in 1 5 8; do
    install -vDm644 -t "$pkgdir/usr/share/man/man$section" target/docs/man/*.$section.gz
  done
}

# vim:set ts=2 sw=2 et:
