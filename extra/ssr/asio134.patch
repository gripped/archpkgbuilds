diff -Nurp ssr-0.6.1/src/fudi/server.h ssr-0.6.1-asio134/src/fudi/server.h
--- ssr-0.6.1/src/fudi/server.h	2023-07-07 20:34:48.000000000 +0200
+++ ssr-0.6.1-asio134/src/fudi/server.h	2025-04-26 03:45:52.051611594 +0200
@@ -50,7 +50,7 @@ private:
   api::Publisher& _controller;
   // TODO: io_context is not yet supported in Asio 1.10
   //asio::io_context _io_context;
-  asio::io_service _io_service;
+  asio::io_context _io_service;
   asio::ip::tcp::acceptor _acceptor;
   asio::ip::tcp::socket _socket;
   std::thread _thread;
diff -Nurp ssr-0.6.1/src/legacy_network/connection.cpp ssr-0.6.1-asio134/src/legacy_network/connection.cpp
--- ssr-0.6.1/src/legacy_network/connection.cpp	2023-07-07 20:34:48.000000000 +0200
+++ ssr-0.6.1-asio134/src/legacy_network/connection.cpp	2025-04-26 03:48:51.948772653 +0200
@@ -34,7 +34,7 @@
 using ssr::legacy_network::Connection;
 
 /// ctor
-Connection::Connection(asio::io_service &io_service
+Connection::Connection(asio::io_context &io_service
     , api::Publisher &controller, char end_of_message_character)
   : _socket(io_service)
   , _timer(io_service)
@@ -50,7 +50,7 @@ Connection::Connection(asio::io_service
  * @return ptr to Connection
  **/
 Connection::pointer
-Connection::create(asio::io_service &io_service
+Connection::create(asio::io_context &io_service
     , api::Publisher& controller, char end_of_message_character)
 {
   return pointer(new Connection(io_service, controller
@@ -77,7 +77,7 @@ Connection::start()
   start_read();
 
   // initialize the timer
-  _timer.expires_from_now(std::chrono::milliseconds(100));
+  _timer.expires_after(std::chrono::milliseconds(100));
   _timer.async_wait(std::bind(&Connection::timeout_handler, shared_from_this()
         , std::placeholders::_1));
 }
@@ -94,7 +94,7 @@ Connection::timeout_handler(const asio::
   if (e) return;
 
   // Set timer again.
-  _timer.expires_from_now(std::chrono::milliseconds(100));
+  _timer.expires_after(std::chrono::milliseconds(100));
   _timer.async_wait(std::bind(&Connection::timeout_handler, shared_from_this()
         , std::placeholders::_1));
 }
diff -Nurp ssr-0.6.1/src/legacy_network/connection.h ssr-0.6.1-asio134/src/legacy_network/connection.h
--- ssr-0.6.1/src/legacy_network/connection.h	2023-07-07 20:34:48.000000000 +0200
+++ ssr-0.6.1-asio134/src/legacy_network/connection.h	2025-04-26 03:45:52.051306601 +0200
@@ -60,7 +60,7 @@ class Connection : public std::enable_sh
     typedef std::shared_ptr<Connection> pointer;
     typedef asio::ip::tcp::socket socket_t;
 
-    static pointer create(asio::io_service &io_service
+    static pointer create(asio::io_context &io_service
         , api::Publisher &controller, char end_of_message_character);
 
     void start();
@@ -72,7 +72,7 @@ class Connection : public std::enable_sh
     unsigned int get_source_number(id_t source_id) const;
 
   private:
-    Connection(asio::io_service &io_service, api::Publisher &controller
+    Connection(asio::io_context &io_service, api::Publisher &controller
         , char end_of_message_character);
 
     void start_read();
diff -Nurp ssr-0.6.1/src/legacy_network/server.h ssr-0.6.1-asio134/src/legacy_network/server.h
--- ssr-0.6.1/src/legacy_network/server.h	2023-07-07 20:34:48.000000000 +0200
+++ ssr-0.6.1-asio134/src/legacy_network/server.h	2025-04-26 03:45:52.051170004 +0200
@@ -71,7 +71,7 @@ class Server
     api::Publisher& _controller;
     // Just a hack for get_scene_as_XML():
     LegacyXmlSceneProvider& _scene_provider;
-    asio::io_service _io_service;
+    asio::io_context _io_service;
     asio::ip::tcp::acceptor _acceptor;
     std::thread *_network_thread;
 
