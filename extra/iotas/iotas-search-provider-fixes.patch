From 5e60f5f67255259a681c6862a639bc2c14c14da9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Wed, 26 Mar 2025 02:09:52 +0000
Subject: [PATCH] fix: Better error handling in search provider

Specifying wildcard is needed for warning() when parameter is specified.
Ensure that the app is always released even if an exception happens.
Move more parts into try block in GetSubsearchResultSet, because IDs can
be invalid.
---
 search-provider/iotas-search-provider.py.in | 25 +++++++++------------
 1 file changed, 11 insertions(+), 14 deletions(-)

diff --git a/search-provider/iotas-search-provider.py.in b/search-provider/iotas-search-provider.py.in
index c9f0a5d..e8ef3c8 100755
--- a/search-provider/iotas-search-provider.py.in
+++ b/search-provider/iotas-search-provider.py.in
@@ -66,7 +66,7 @@ class Server:
             else:
                 invocation.return_value(None)
         except Exception as e:
-            logging.warning("__on_method_call", e)
+            logging.warning("__on_method_call: %s", e)
 
 
 class SearchIotasService(Server, Gio.Application):
@@ -146,8 +146,7 @@ class SearchIotasService(Server, Gio.Application):
         )
         if not app:
             logging.error("Failed to create AppInfo")
-            return
-        if not app.launch(None, launch_context):
+        elif not app.launch(None, launch_context):
             logging.error("Failed to launch")
 
         self.release()
@@ -164,7 +163,7 @@ class SearchIotasService(Server, Gio.Application):
         try:
             results = self.__search(terms)
         except Exception as e:
-            logging.warning("GetInitialResultSet", e)
+            logging.warning("GetInitialResultSet: %s", e)
         self.release()
         return results
 
@@ -192,8 +191,7 @@ class SearchIotasService(Server, Gio.Application):
                 }
                 results.append(d)
         except Exception as e:
-            logging.warning("GetResultMetas", e)
-            return []
+            logging.warning("GetResultMetas: %s", e)
         self.release()
         return results
 
@@ -206,16 +204,16 @@ class SearchIotasService(Server, Gio.Application):
         :rtype: list[str]
         """
         self.hold()
-        if len(previous_results) < self.MAX_SUBSEARCH_LIST_LENGTH:
-            ids = [int(x) for x in previous_results]
-        else:
-            ids = []
-
         results = []
         try:
+            if len(previous_results) < self.MAX_SUBSEARCH_LIST_LENGTH:
+                ids = [int(x) for x in previous_results]
+            else:
+                ids = []
+
             results = self.__search(new_terms, ids)
         except Exception as e:
-            logging.warning("GetSubsearchResultSet", e)
+            logging.warning("GetSubsearchResultSet: %s", e)
         self.release()
         return results
 
@@ -237,8 +235,7 @@ class SearchIotasService(Server, Gio.Application):
         )
         if not app:
             logging.error("Failed to create AppInfo")
-            return
-        if not app.launch(None, launch_context):
+        elif not app.launch(None, launch_context):
             logging.error("Failed to launch")
 
         self.release()
-- 
GitLab

