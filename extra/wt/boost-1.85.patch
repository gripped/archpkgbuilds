diff -ru wt-4.10.4.orig/examples/filetreetable/FileTreeTableNode.C wt-4.10.4/examples/filetreetable/FileTreeTableNode.C
--- wt-4.10.4.orig/examples/filetreetable/FileTreeTableNode.C	2024-08-31 10:32:09.599695805 +0200
+++ wt-4.10.4/examples/filetreetable/FileTreeTableNode.C	2024-08-31 10:33:59.611582413 +0200
@@ -7,6 +7,7 @@
 
 #include "FileTreeTableNode.h"
 
+#include <boost/filesystem/directory.hpp>
 #include <boost/filesystem/operations.hpp>
 #include <boost/filesystem/exception.hpp>
 #include <boost/lexical_cast.hpp>
@@ -23,7 +24,7 @@
 #if BOOST_FILESYSTEM_VERSION < 3
   : WTreeTableNode(Wt::widen(path.leaf()), createIcon(path)),
 #else
-  : WTreeTableNode(path.leaf().string(), createIcon(path)),
+  : WTreeTableNode(path.filename().string(), createIcon(path)),
 #endif
     path_(path)
 {
diff -ru wt-4.10.4.orig/examples/wt-homepage/ExampleSourceViewer.C wt-4.10.4/examples/wt-homepage/ExampleSourceViewer.C
--- wt-4.10.4.orig/examples/wt-homepage/ExampleSourceViewer.C	2024-08-31 10:32:09.616362760 +0200
+++ wt-4.10.4/examples/wt-homepage/ExampleSourceViewer.C	2024-08-31 10:49:19.683446023 +0200
@@ -21,9 +21,9 @@
 #include <Wt/WVBoxLayout.h>
 #include <Wt/WViewWidget.h>
 
+#include <boost/filesystem/directory.hpp>
 #include <boost/filesystem/operations.hpp>
 #include <boost/filesystem/exception.hpp>
-#include <boost/filesystem/convenience.hpp>
 #include <boost/algorithm/string.hpp>
 
 #include "ExampleSourceViewer.h"
@@ -184,7 +184,7 @@
  */
 static fs::path getCompanion(const fs::path& path)
 {
-  std::string ext = fs::extension(path);
+  std::string ext = path.extension().string();
 
   if (ext == ".h")
     return parent_path(path) / (stem(path) + ".C");
@@ -226,8 +226,8 @@
         continue;
 
       // skip files with an extension we do not want to handle
-      if (fs::is_regular(p)) {
-        std::string ext = fs::extension(p);
+      if (fs::is_regular_file(p)) {
+        std::string ext = p.extension().string();
         bool supported = false;
         for (const char **s = supportedFiles; *s != 0; ++s)
           if (*s == ext) {
@@ -305,7 +305,7 @@
   FileItem *packageItem = nullptr;
   for (fs::directory_iterator i(srcPath); i != end_itr; ++i) {
     fs::path p = *i;
-    if (fs::is_regular(p)) {
+    if (fs::is_regular_file(p)) {
       if (!packageItem) {
         auto item = std::make_unique<FileItem>("/icons/package.png", packageName, "");
         packageItem = item.get();
diff -ru wt-4.10.4.orig/examples/wt-homepage/SourceView.C wt-4.10.4/examples/wt-homepage/SourceView.C
--- wt-4.10.4.orig/examples/wt-homepage/SourceView.C	2024-08-31 10:32:09.616362760 +0200
+++ wt-4.10.4/examples/wt-homepage/SourceView.C	2024-08-31 10:42:51.087108984 +0200
@@ -8,7 +8,6 @@
 
 #include <boost/algorithm/string.hpp>
 #include <boost/filesystem/operations.hpp>
-#include <boost/filesystem/convenience.hpp>
 
 #include <Wt/WApplication.h>
 #include <Wt/WText.h>
@@ -207,7 +206,7 @@
   };
 
   fs::path p(fileName);
-  std::string extension = fs::extension(p);
+  std::string extension = p.extension().string();
 
   for (const char **s = imageExtensions; *s != 0; ++s)
     if (*s == extension)
