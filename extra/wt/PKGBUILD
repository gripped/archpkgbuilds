# Maintainer: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: Denis Martinez <deuns.martinez@gmail.com>

pkgname=wt
pkgver=4.12.0
pkgrel=2
pkgdesc="a C++ library and application server for developing and deploying web applications"
arch=('x86_64')
url="http://www.webtoolkit.eu/"
license=('GPL-2.0-only')
depends=('boost-libs' 'libharu' 'graphicsmagick' 'pango' 'zlib' 'libgl' 'harfbuzz'
         'qt5-base')
makedepends=('boost' 'cmake' 'postgresql-libs' 'fcgi' 'sqlite' 'mysql++' 'doxygen'
             'graphviz' 'mesa' 'glu' 'ninja')
optdepends=('openssl: for SSL support in built-in webserver'
	    'fcgi: for FastCGI support'
	    'postgresql-libs: for PostgreSQL Dbo support'
        'mariadb-libs: for MySQL Dbo support'
	    'sqlite: for Sqlite Dbo support'
	    'mysql++: for the hangman example')
backup=('etc/wt/wt_config.xml')
source=("$pkgname-$pkgver.tar.gz::https://github.com/emweb/wt/archive/${pkgver}.tar.gz"
        "https://github.com/emweb/wt/commit/fded9ca4ed7d37e036e222098f6d68dc79bca901.patch")
sha512sums=('89754567b823105de694ee1c2f6e8cecd0b6c1231531f2b791ff95f29039567273329ac9ecc612a96e44232cf80371e947a7a424903c2be8e8c14d0d7260e4d5'
            '1f4089b0072ed444bfffa9beb6636a9abe55f20f3cbc6a78db86e7a9e6bd4ece044863e0b574ffda5dcf283673b3327b7c3a4ec8be1f06ebe41723a6e9e92eeb')

prepare() {
  cd ${pkgname}-${pkgver}

  # Fix: Error reading: /etc/wt/wt_config.xml: <debug-level>: expecting 'script' or 'all'
  # https://gitlab.archlinux.org/archlinux/packaging/packages/wt/-/issues/2
  #
  # This patch can be removed when 4.12.1 is released.
  patch -p1 -i "$srcdir"/fded9ca4ed7d37e036e222098f6d68dc79bca901.patch
}

build() {
  cd ${pkgname}-${pkgver}

  cmake \
      -Bbuild \
      -GNinja \
      -DCONNECTOR_HTTP=ON \
      -DWT_WRASTERIMAGE_IMPLEMENTATION=GraphicsMagick \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DWEBUSER=http \
      -DWEBGROUP=http \
      -DUSE_SYSTEM_SQLITE3=ON \
      -DINSTALL_EXAMPLES=ON \
      -DBUILD_EXAMPLES=ON
  ninja -C build
}

package() {
  cd "$srcdir"/${pkgname}-${pkgver}

  DESTDIR="$pkgdir" ninja -C build install
}
