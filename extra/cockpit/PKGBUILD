# Maintainer: Massimiliano Torromeo <massimiliano.torromeo@gmail.com>
# Contributor: Iwan Timmer <irtimmer@gmail.com>
# Contributor: Mark Constable <markc@renta.net>
# Contributor: Anatol Pomozov <anatol.pomozov@gmail.com>

pkgbase=cockpit
pkgname=(cockpit cockpit-packagekit cockpit-storaged)
pkgver=335
pkgrel=1
pkgdesc='A systemd web based user interface for Linux servers'
arch=('x86_64')
url='https://cockpit-project.org/'
license=('LGPL-2.1-or-later')
makedepends=(krb5 libssh json-glib glib-networking glib2-devel systemd
             git intltool gtk-doc gobject-introspection networkmanager xmlto npm pcp
             gendesk python-installer python-wheel python-build python-pip)
source=("https://github.com/cockpit-project/cockpit/releases/download/$pkgver/cockpit-$pkgver.tar.xz"
        "cockpit.pam")
sha256sums=('143a67c554ac098563c33d9d94ca0e7b589ff2f2b302596df7e89663394045f4'
            '1257fb3be713ca26831faea6963d292ec2ccd284f3a6be800142fab270c504fc')

prepare() {
  cd cockpit-$pkgver
  # disable buggy package-lock check
  sed -r '/^cmd_make_package_lock_json\b/ a exit 0' -i tools/node-modules
}

build() {
  cd cockpit-$pkgver
  ./configure \
    --prefix=/usr \
    --sbindir=/usr/bin \
    --libexecdir=/usr/lib/$pkgname/ \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --disable-dependency-tracking \
    --disable-silent-rules \
    --with-admin-group=wheel
  make all

  gendesk -n \
    --name 'Cockpit Client' \
    --comment 'Connect via ssh to servers running Cockpit' \
    --exec '/usr/lib/cockpit/cockpit-desktop /' \
    --categories 'Network;RemoteAccess' \
    --custom 'DBusActivatable=true' \
    --icon cockpit-client \
    --pkgname cockpit
}

package_cockpit() {
  depends=(krb5 libssh json-glib glib-networking libpwquality systemd
           openssl kexec-tools python gobject-introspection-runtime)
  provides=(cockpit-pcp)
  replaces=(cockpit-pcp)
  backup=('etc/pam.d/cockpit' 'etc/cockpit/disallowed-users')
  optdepends=("cockpit-storaged: manage storage"
              "cockpit-packagekit: manage packaged"
              "cockpit-podman: user interface for managing podman containers"
              "cockpit-machines: user interface for managing virtual machines"
              "pcp: reading performance metrics"
              "polkit: elevate privileges"
              "sudo: elevate privileges"
              "networkmanager: manage network connections"
              "sssd: authentication"
              "sscg: generate self-signed certificate")

  cd cockpit-$pkgver
  make DESTDIR="$pkgdir" install
  rm -rf "$pkgdir"/usr/{src,lib/firewalld}
  install -Dm644 "$srcdir"/cockpit.pam "$pkgdir"/etc/pam.d/cockpit

  install -Dm644 cockpit.desktop "$pkgdir"/usr/share/applications/org.cockpit_project.CockpitClient.desktop

  # remove unused plugins
  rm -rf "$pkgdir"/usr/share/cockpit/{selinux,playground,sosreport} \
         "$pkgdir"/usr/share/metainfo/org.cockpit-project.cockpit-{selinux,sosreport}.metainfo.xml

  # remove plugins packaged separately
  rm -rf "$pkgdir"/usr/share/cockpit/{apps,packagekit,storaged} \
         "$pkgdir"/usr/share/metainfo/org.cockpit-project.cockpit-storaged.metainfo.xml

  # Disallow root login by default
  printf "# List of users which are not allowed to login to Cockpit\nroot\n" > "$pkgdir"/etc/cockpit/disallowed-users
  chmod 644 "$pkgdir"/etc/cockpit/disallowed-users
}

_do_package_component() {
  _component="${1:-${pkgname#cockpit-}}"

  cd "$srcdir"/cockpit-$pkgver
  make DESTDIR="$pkgdir"/tmp install

  cd "$pkgdir"/tmp
  bsdtar -cf - usr/share/cockpit/$_component \
    | bsdtar -xf - -C "$pkgdir"

  [ -f usr/share/metainfo/org.cockpit-project.$pkgname.metainfo.xml ] && \
    install -Dm644 usr/share/metainfo/org.cockpit-project.$pkgname.metainfo.xml \
      "$pkgdir"/usr/share/metainfo/org.cockpit-project.$pkgname.metainfo.xml

  rm -rf "$pkgdir"/tmp
}

package_cockpit-storaged() {
  pkgdesc='Cockpit user interface for storage, using udisks'
  depends=(cockpit udisks2 dbus-python)
  optdepends=(
    "clevis: manage disk encryption"
  )
  _do_package_component
}

package_cockpit-packagekit() {
  pkgdesc='Cockpit user interface for packages'
  depends=(cockpit polkit packagekit python)
  _do_package_component
  _do_package_component apps
}
