diff --git a/src/lsp/ParentProcessWatcher.cpp b/src/lsp/ParentProcessWatcher.cpp
index ee4147b..0034672 100644
--- a/src/lsp/ParentProcessWatcher.cpp
+++ b/src/lsp/ParentProcessWatcher.cpp
@@ -1,6 +1,9 @@
 #include "LibLsp/lsp/ParentProcessWatcher.h"
 #include <algorithm>
-#include <boost/process.hpp>
+#include <boost/process/v1/async.hpp>
+#include <boost/process/v1/child.hpp>
+#include <boost/process/v1/io.hpp>
+#include <boost/process/v1/pipe.hpp>
 
 #ifdef _WIN32
 #include <boost/process/v1/windows.hpp>
@@ -22,12 +25,12 @@ struct ParentProcessWatcher::ParentProcessWatcherData : std::enable_shared_from_
     lsp::Log& _log;
     std::function<void()> on_exit;
     lsp::ProcessIoService asio_io;
-    std::shared_ptr<boost::process::opstream> write_to_service;
-    std::shared_ptr<boost::process::ipstream> read_from_service;
+    std::shared_ptr<boost::process::v1::opstream> write_to_service;
+    std::shared_ptr<boost::process::v1::ipstream> read_from_service;
     int pid;
     int const _poll_delay_secs /*= 10*/;
     std::string command;
-    std::shared_ptr<boost::process::child> c;
+    std::shared_ptr<boost::process::v1::child> c;
 
     ParentProcessWatcherData(lsp::Log& log, int _pid, std::function<void()> const&& callback, uint32_t poll_delay_secs)
         : _log(log), on_exit(callback), pid(_pid), _poll_delay_secs(poll_delay_secs)
@@ -42,13 +45,13 @@ struct ParentProcessWatcher::ParentProcessWatcherData : std::enable_shared_from_
 
     void run()
     {
-        write_to_service = std::make_shared<boost::process::opstream>();
-        read_from_service = std::make_shared<boost::process::ipstream>();
+        write_to_service = std::make_shared<boost::process::v1::opstream>();
+        read_from_service = std::make_shared<boost::process::v1::ipstream>();
 
         //              const uint32_t POLL_DELAY_SECS = _poll_delay_secs;
         auto self(shared_from_this());
         std::error_code ec;
-        namespace bp = boost::process;
+        namespace bp = boost::process::v1;
         c = std::make_shared<bp::child>(
             asio_io.getIOService(), command, ec,
 #ifdef _WIN32
