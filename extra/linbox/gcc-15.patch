From c499d69283888965f24a8921ac246291743c2b5b Mon Sep 17 00:00:00 2001
From: Jean-Guillaume Dumas <Jean-Guillaume.Dumas@imag.fr>
Date: Wed, 5 Feb 2025 18:35:20 +0100
Subject: [PATCH] various typos

---
 examples/Makefile.am                          |  8 +--
 .../matpoly-mult-fft-wordsize.inl             |  5 +-
 .../polynomial-matrix/matpoly-mult-fft.h      | 68 ++++++++++---------
 linbox/algorithms/rational-reconstruction.h   | 10 ++-
 linbox/blackbox/block-hankel-inverse.h        | 24 +++----
 linbox/blackbox/block-hankel.h                |  4 +-
 .../sparsematrix/sparse-map-map-matrix.inl    |  8 +--
 .../sparsematrix/sparse-tpl-matrix-omp.h      |  8 +--
 8 files changed, 72 insertions(+), 63 deletions(-)

diff --git a/linbox/blackbox/block-hankel.h b/linbox/blackbox/block-hankel.h
index a4bc7bfc9a..c8e27562c5 100644
--- a/linbox/blackbox/block-hankel.h
+++ b/linbox/blackbox/block-hankel.h
@@ -345,8 +345,8 @@ namespace LinBox
 		template<class Vector1, class Vector2>
 		Vector1& apply(Vector1 &x, const Vector2 &y) const
 		{
-			linbox_check(this->_coldim == y.size());
-			linbox_check(this->_rowdim == x.size());
+			linbox_check(this->coldim() == y.size());
+			linbox_check(this->rowdim() == x.size());
 			BlasMatrixDomain<Field> BMD(field());
 #ifdef BHANKEL_TIMER
 			_chrono.clear();
diff --git a/linbox/matrix/sparsematrix/sparse-map-map-matrix.inl b/linbox/matrix/sparsematrix/sparse-map-map-matrix.inl
index aeb26f6d57..79dd172225 100644
--- a/linbox/matrix/sparsematrix/sparse-map-map-matrix.inl
+++ b/linbox/matrix/sparsematrix/sparse-map-map-matrix.inl
@@ -69,8 +69,8 @@ void SparseMatrix<Field_,SparseMatrixFormat::SMM>::shape(Index r, Index c) {
 }
 
 template<class Field_>
-void SparseMatrix<Field_,SparseMatrixFormat::SMM>::resize(Index r, Index c) { 
-	shape(r,c); 
+void SparseMatrix<Field_,SparseMatrixFormat::SMM>::resize(Index r, Index c) {
+	shape(r,c);
 }
 
 template<class Field_>
@@ -411,7 +411,6 @@ void SparseMatrix<Field_,SparseMatrixFormat::SMM>::randomEquiv(Index nz, int see
 		r = s;
 	}
 	bool flip = true;
-	int count=0;
 	while (nnz() < nz) {
 		nonzerorandom(field(),r,a);
 		i = ri.randomIntRange(0, rowdim()); j = ri.randomIntRange(0, coldim());
@@ -420,7 +419,6 @@ void SparseMatrix<Field_,SparseMatrixFormat::SMM>::randomEquiv(Index nz, int see
 			else addRow(a, i, j);
 			flip = not flip;
 		}
-		++count;
 	}
 }
 
diff --git a/linbox/matrix/sparsematrix/sparse-tpl-matrix-omp.h b/linbox/matrix/sparsematrix/sparse-tpl-matrix-omp.h
index feca4cf35d..e179a75aa1 100644
--- a/linbox/matrix/sparsematrix/sparse-tpl-matrix-omp.h
+++ b/linbox/matrix/sparsematrix/sparse-tpl-matrix-omp.h
@@ -318,9 +318,9 @@ class SparseMatrix<Field_, SparseMatrixFormat::TPL_omp> : public BlackboxInterfa
 			typedef typename selfvec::const_iterator selfiter;
 			otheriter vp_p; selfiter v_p;
 
-			Ap.data_.resize(A.data.size());
+			Ap.data_.resize(A.data_.size());
 			for (v_p = A.data_.begin(), vp_p = Ap.data_.begin();
-			     v_p != A.data.end(); ++ v_p, ++ vp_p)
+			     v_p != A.data_.end(); ++ v_p, ++ vp_p)
 				hom.image (vp_p->elt, v_p->elt);
 		}
 	};
