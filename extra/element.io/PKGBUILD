# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: Steef Hegeman <mail@steefhegeman.com>
# Contributor: Luca Weiss <luca (at) z3ntu (dot) xyz>
# Contributor: Julian Schacher <jspp@posteo.net>

_electron=electron37
pkgbase=element.io
pkgname=(element-web element-desktop)
pkgver=1.11.109
pkgrel=1
pkgdesc="Glossy Matrix collaboration client â€” "
arch=(x86_64)
url="https://element.io"
license=(Apache)
makedepends=(
  ${_electron}
  git
  jq
  libxcrypt-compat
  nodejs
  npm
  python
  python-setuptools
  rust
  tcl
  yarn
)
_url="https://github.com/element-hq/element"
source=(git+https://github.com/element-hq/element-desktop.git#tag=v${pkgver}?signed
        git+https://github.com/element-hq/element-web.git#tag=v${pkgver}?signed
        autolaunch.patch
        io.element.Element.desktop
        element-desktop.sh)
sha256sums=('c0d218a3cdd36303793608e966ff5d07101d4bba57f570cd4a9816ec75d8d63c'
            'c828e7e22722d52a82ee53b347071245dc6395c0d23598462c34fe50de3634f3'
            '268485f35103d00a89be7f5c84703e3d393350c71f4f90932f7bcb5ea2fd094f'
            '16a21cd4ad144641e0f4cbe18ed1b665565ed6f3f3e67d5bccba2806491674a9'
            'c1bd9ace215e3ec9af14d7f28b163fc8c8b42e23a2cf04ce6f4ce2fcc465feba')
validpgpkeys=(712BFBEE92DCA45252DB17D7C7BE97EFA179B100) # Element Releases <releases@riot.im>

prepare() {
  # Find out which major release of electron this version of element-desktop requires
  _electron_major=$(jq --raw-output '.devDependencies.electron' < "${srcdir}/element-desktop/package.json" | sed 's/^[~^]\?\([0-9]\+\)\(\.[0-9]\+\)*$/\1/')

  # Check if we depend on the correct electron version
  if [ "${_electron}" != "electron${_electron_major}" ] ; then
    echo "Error: Incorrect electron version detected. Please change the value of \"_electron\" from \"${_electron}\" to \"electron${_electron_major}\"."
    return 1
  fi

  # Specify electron version in launcher
  sed -i "s|@ELECTRON@|${_electron}|" element-desktop.sh

  cd element-web
  yarn install --no-fund

  cd ../element-desktop
  patch -p1 < ../autolaunch.patch
  sed -i 's|"target": "deb"|"target": "dir"|' package.json
  sed -i 's|"https://packages.element.io/desktop/update/"|null|' element.io/release/config.json
  yarn install --no-fund
}

build() {
  export NODE_OPTIONS=--openssl-legacy-provider
  cd element-web
  VERSION=${pkgver} yarn build

  cd ../element-desktop
  export SQLCIPHER_BUNDLED=1
  export CFLAGS+=" -ffat-lto-objects"
  yarn run build:native
  yarn run build --publish never
}

package_element-web() {
  pkgdesc+="web version."
  replaces=(riot-web vector-web)

  cd element-web

  install -d "${pkgdir}"/{usr/share/webapps,etc/webapps}/element

  cp -r webapp/* "${pkgdir}"/usr/share/webapps/element/
  install -Dm644 config.sample.json -t "${pkgdir}"/etc/webapps/element/
  ln -s /etc/webapps/element/config.json "${pkgdir}"/usr/share/webapps/element/
  echo "${pkgver}" > "${pkgdir}"/usr/share/webapps/element/version
}

package_element-desktop() {
  pkgdesc+="desktop version."
  replaces=(riot-desktop)
  depends=("element-web=${pkgver}" ${_electron} libsecret)
  backup=('etc/element/config.json')

  cd element-desktop

  install -d "${pkgdir}"{/usr/lib/element/,/etc/webapps/element}

  # Install the app content, replace the webapp with a symlink to the system package
  cp -r dist/linux-unpacked/resources/* "${pkgdir}"/usr/lib/element/
  ln -s /usr/share/webapps/element "${pkgdir}"/usr/lib/element/webapp

  # Config file
  ln -s /etc/element/config.json "${pkgdir}"/etc/webapps/element/config.json
  install -Dm644 element.io/release/config.json -t "${pkgdir}"/etc/element

  # Required extras
  install -Dm644 ../io.element.Element.desktop -t "${pkgdir}"/usr/share/applications/
  install -Dm755 ../${pkgname}.sh "${pkgdir}"/usr/bin/${pkgname}

  # Icons
  install -Dm644 ../element-web/res/themes/element/img/logos/element-logo.svg "${pkgdir}"/usr/share/icons/hicolor/scalable/apps/io.element.Element.svg
  for i in 16 24 48 64 96 128 256 512; do
    install -Dm644 build/icons/${i}x${i}.png "${pkgdir}"/usr/share/icons/hicolor/${i}x${i}/apps/io.element.Element.png
  done
}
