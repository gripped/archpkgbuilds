From 34a542767727408bcd80d396e83b59319d67f5b0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Wed, 9 Apr 2025 18:39:37 +0200
Subject: [PATCH] Use GApplication to parse command line options

This gives access to the --gapplication-service option, while Clutter
options are still processed and listed on the --help output.
---
 src/application.vala | 17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

diff --git a/src/application.vala b/src/application.vala
index ba02501..09d1e08 100644
--- a/src/application.vala
+++ b/src/application.vala
@@ -67,26 +67,13 @@ private class TwentyFortyEight : Gtk.Application
         Intl.bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
         Intl.textdomain (GETTEXT_PACKAGE);
 
-        OptionContext context = new OptionContext ("");
-        context.add_main_entries (option_entries, GETTEXT_PACKAGE);
-
-        context.add_group (get_option_group (true));
-        context.add_group (Clutter.get_option_group_without_init ());
-
-        try {
-            context.parse (ref args);
-        } catch (Error e) {
-            stderr.printf ("%s\n", e.message);
-            return Posix.EXIT_FAILURE;
-        }
-
         const string application_name = "org.gnome.TwentyFortyEight";
         Environment.set_application_name (application_name);
         Environment.set_prgname ("org.gnome.TwentyFortyEight");
         Window.set_default_icon_name ("org.gnome.TwentyFortyEight");
 
         try {
-            GtkClutter.init_with_args (ref args, "", new OptionEntry[0], null);
+            GtkClutter.init (ref args);
         } catch (Error e) {
             MessageDialog dialog = new MessageDialog (null,
                                                       DialogFlags.MODAL,
@@ -106,6 +93,8 @@ private class TwentyFortyEight : Gtk.Application
     private TwentyFortyEight ()
     {
         Object (application_id: "org.gnome.TwentyFortyEight", flags: ApplicationFlags.FLAGS_NONE);
+        add_main_option_entries (option_entries);
+        add_option_group (Clutter.get_option_group_without_init ());
     }
 
     protected override int handle_local_options (GLib.VariantDict options)  // options will be empty, we used a custom OptionContext
-- 
GitLab

