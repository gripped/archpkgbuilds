diff --git a/lutris/util/wine/proton.py b/lutris/util/wine/proton.py
index 4a0b46b..f55c37c 100644
--- a/lutris/util/wine/proton.py
+++ b/lutris/util/wine/proton.py
@@ -18,11 +18,21 @@ def is_proton_path(wine_path) -> bool:
 
 
 def get_umu_path() -> Optional[str]:
+
+    # We can access Umu via it's main .py file, or via the public name which is just
+    # symbolic link to the same file. We'll check both for compatibility, just in case
+    # Umu gets translated into Perl or something.
+    entry_points = ["umu_run.py", "umu-run"]
+
     custom_path = settings.read_setting("umu_path")
     if custom_path:
-        script_path = os.path.join(custom_path, "umu_run.py")
-        if system.path_exists(script_path):
-            return script_path
+        for entry_point in entry_points:
+            entry_path = os.path.join(custom_path, entry_point)
+            if system.path_exists(entry_path):
+                return entry_path
+
+    # We only use 'umu-run' when searching the path since that's the command
+    # line entry point.
     if system.can_find_executable("umu-run"):
         return system.find_executable("umu-run")
     path_candidates = (
@@ -33,9 +43,10 @@ def get_umu_path() -> Optional[str]:
         settings.RUNTIME_DIR,
     )
     for path_candidate in path_candidates:
-        script_path = os.path.join(path_candidate, "umu", "umu_run.py")
-        if system.path_exists(script_path):
-            return script_path
+        for entry_point in entry_points:
+            entry_path = os.path.join(path_candidate, "umu", entry_point)
+            if system.path_exists(entry_path):
+                return entry_path
     return None
 
 
