# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: Hurricane Pootis <hurricanepootis@protonmail.com>
# Contributor: John Sowiak <john@archlinux.org>
# Contributor: tobias <tobias@archlinux.org>

# For legal reasons, we can't separately package the Optix headers so we'll
# just build the package against them. I checked with NVIDIA and this way is
# fine with them.

pkgname=blender
pkgver=4.0.2
pkgrel=21
epoch=17
pkgdesc="A fully integrated 3D graphics creation suite"
arch=('x86_64')
license=(
  Apache-2.0
  BSD-2-Clause
  BSD-3-Clause
  GPL-2.0-or-later
  GPL-3.0-or-later
  LGPL-2.1-or-later
  MIT
  MPL-2.0
  Zlib
)
url="https://www.blender.org"
depends=(
  'alembic'
  'bash'
  'boost-libs'
  'draco'  # seems to use static lib and should probably only be makedepends
  'embree'
  'expat'
  'ffmpeg'
  'fftw'
  'freetype2'
  'gcc-libs'
  'glew'
  'glibc'
  'gmp'
  'hicolor-icon-theme'
  'imath'
  'intel-oneapi-compiler-dpcpp-cpp-runtime-libs'
  'intel-oneapi-compiler-shared-runtime-libs'
  'jack'  # dlopen'ed
  'jemalloc'
  'level-zero-loader'  # dlopen'ed
  'libepoxy'
  'libharu'
  'libjpeg-turbo'
  'libpng'
  'libsndfile'
  'libspnav'
  'libtiff'
  'libwebp'
  'libx11'
  'libxfixes'
  'libxi'
  'libxkbcommon'
  'libxml2'
  'libxrender'
  'libxxf86vm'
  'llvm-libs'
  'materialx'
  'onetbb'
  'openal'
  'opencollada'
  'opencolorio'
  'openexr'
  'openimagedenoise'
  'openimageio'
  'openjpeg2'
  'openpgl'
  'openshadinglanguage'
  'opensubdiv'
  'openvdb'
  'openxr'
  'pcre'
  'potrace'
  # 'ptex'
  'pugixml'
  'pystring'
  'python'
  'python-numpy'
  'python-requests'
  'sdl2'  # dlopen'ed
  'shared-mime-info'
  'usd'
  'xdg-utils'
  'yaml-cpp'
  'zlib'
  'zstd'
)
makedepends=(
  'boost'
  'cmake'
  'cuda'
  'git'
  'hip-runtime-amd'
  'intel-oneapi-compiler-shared-runtime'
  'intel-oneapi-dpcpp-cpp'
  'intel-compute-runtime'
  'level-zero-headers'
  'libdecor'
  'mold'
  'llvm'
  'mesa'
  'ninja'
  'subversion'
  'wayland-protocols'
)
optdepends=('cuda: Cycles renderer CUDA support'
            'intel-compute-runtime: Cycles renderer Intel OneAPI support'
            'libdecor: wayland support')
# We're using !lto here as otherwise we get stuff such as FS#77557
options=('!lto')
source=("git+https://projects.blender.org/blender/blender.git#tag=v$pkgver"
        "git+https://projects.blender.org/blender/blender-addons.git#tag=v$pkgver"
        "git+https://projects.blender.org/blender/blender-addons-contrib#tag=v$pkgver"
        "svn+https://svn.blender.org/svnroot/bf-blender/tags/blender-${pkgver%%.[^.]}-release/lib/assets"
        https://developer.download.nvidia.com/redist/optix/v8.0/OptiX-8.0-Include.zip
        https://projects.blender.org/blender/blender/commit/5486c70aae94196d715c07364292fc108ebf59a8.patch
        blender-openpgl6-r1.patch::https://projects.blender.org/blender/blender/commit/5d06b7b906b3.patch
        force-draco1.patch
        force-draco2.patch
        blender-rocm-6.patch)
sha512sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            '5502d9df847de12badc702c0444bd4f1f7620460b2235026df2c3133da1e04c148af0f1fc7f345e9a0c009c32f905f66c8d427743445e8864d3a797cdce6a483'
            '375508d1d010b4b043b293cb0c192cb2096aef7ddb0dd1be4a738b20aa720523494cf3054161f1ad116fddc6a9ce03159d6da0a3b3fdb1b57002a477c7c5920a'
            '016a8da844396ba1912a556fc1ff763c781ba6ce17375c9ef778352aa91e9f8af3cd66d552339eb2d65dce84c0e871ab167944ddbf75619aebc0dd82cec4ca58'
            'e239da4f3906f1b54265435181cf770bae3d269c8d915df9a73861e6ee71ec70bf2339426e7c81a91e5a567273b3b3742d7a99feefd3398d821b26e1ff3a56d0'
            'c162646eba42ea7112cfb615466c2cbaddac8d254d4a9e91cf887c5bffef1325a983701163223a1fdee091310ac5574a400347aab7f52321825b5fa3d5a9036f'
            'dc694c655690913701dba92281724671c14f7305cc8f4de6071056f4608837532194178fdddcbcf500d330a0b804d26cd9599b88ff71f9c799664e941809813a')

prepare() {
  cd "$pkgname"

  # Create expected path for assets
  mkdir -p "$srcdir"/lib
  # Copy assets to expected location
  cp -r "$srcdir"/assets "$srcdir"/lib/assets
  # Remove this directory to prevent it being packaged
  rm -r "$srcdir"/lib/assets/.makepkg/

  # Copy addons to expected location
  cp -r "$srcdir"/blender-addons scripts/addons
  cp -r "$srcdir"/blender-addons-contrib scripts/addons_contrib

  # Disable openexr core
  # https://projects.blender.org/blender/blender/issues/117145
  git cherry-pick -n eb99895c972b6c713294f68a34798aa51d36034a

  # Fix compatibility with OSL 1.13.5
  # https://projects.blender.org/blender/blender/issues/113157
  git cherry-pick -n 798a0b301e640e73ae12e6f8a36a66746893bff1

  patch -Np1 -i "$srcdir"/blender-openpgl6-r1.patch

  # fix draco
  patch -p1 -i "$srcdir"/force-draco1.patch
  patch -p1 -d scripts/addons -i "$srcdir"/force-draco2.patch

  patch -Np1 -i "$srcdir/blender-rocm-6.patch"
}

_get_pyver() {
  python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))'
}

build() {
  local cmake_options=(
    -B build
    -C "$pkgname/build_files/cmake/config/blender_release.cmake"
    -C "$srcdir/precache"
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_INSTALL_PREFIX=/usr
    -D WITH_LINKER_MOLD=ON
    -D CUDA_HOST_COMPILER=/usr/bin/gcc
    -D HIP_ROOT_DIR=/opt/rocm
    -D OCLOC_INSTALL_DIR=/usr
    -D OPTIX_ROOT_DIR="$srcdir"
    -D PYTHON_VERSION="$(_get_pyver)"
    # -D SYCL_CPP_FLAGS=--verbose  # for debugging
    -D SYCL_OFFLINE_COMPILER_PARALLEL_JOBS=8
    -D USD_ROOT_DIR=/usr
    -D WITH_CYCLES_OSL=ON
    -D WITH_INSTALL_PORTABLE=OFF
    -D WITH_PYTHON_INSTALL=OFF
    -G Ninja
    -S "$pkgname"
    -W no-dev
  )

  # CUDA arch 90 is unsupported
  echo 'set(CYCLES_CUDA_BINARIES_ARCH sm_52 sm_53 sm_60 sm_61 sm_62 sm_70 sm_72 sm_75 sm_80 sm_86 sm_87 sm_89 compute_89 CACHE STRING "CUDA architectures to build binaries for" FORCE)' > precache
  echo 'mark_as_advanced(CYCLES_CUDA_BINARIES_ARCH)' >> precache

  cmake "${cmake_options[@]}"
  cmake --build build
}

package() {
  DESTDIR="${pkgdir}" cmake --install build
  cd "$pkgname"

  install -Dm755 release/bin/blender-softwaregl "${pkgdir}/usr/bin/blender-softwaregl"
  python -m compileall "${pkgdir}/usr/share/blender"
  python -O -m compileall "${pkgdir}/usr/share/blender"

  install -Dm644 release/freedesktop/org.blender.Blender.metainfo.xml "${pkgdir}/usr/share/metainfo/org.blender.Blender.metainfo.xml"

  # Manually install additional scripts (See FS#69351)
  cp -r scripts/addons_contrib/* "${pkgdir}"/usr/share/blender/4*/scripts/addons_contrib/

  # Manually install draco bindings (See FS#73415)
  mkdir -p "${pkgdir}/usr/lib/python$(_get_pyver)"/
  mv "${pkgdir}"/usr/share/blender/4*/python/lib/* "${pkgdir}"/usr/lib/
  rm -r "${pkgdir}"/usr/share/blender/4*/python

  # Move OneAPI AOT lib to proper place
  mv "${pkgdir}"/usr/share/blender/lib/libcycles_kernel_oneapi_aot.so "${pkgdir}"/usr/lib/

  install -vDm 644 doc/license/{BSD-{2,3}-Clause,MIT,Zlib}-license.txt -t "$pkgdir/usr/share/licenses/$pkgname/"
}
